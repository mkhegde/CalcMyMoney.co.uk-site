[
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\eslint.config.js",
    "messages": [
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"@eslint/js\"` with `'@eslint/js'`",
        "line": 2,
        "column": 16,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 2,
        "endColumn": 28,
        "fix": { "range": [60, 72], "text": "'@eslint/js'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"eslint-plugin-react\"` with `'eslint-plugin-react'`",
        "line": 3,
        "column": 25,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 3,
        "endColumn": 46,
        "fix": { "range": [99, 120], "text": "'eslint-plugin-react'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"eslint-plugin-react-hooks\"` with `'eslint-plugin-react-hooks'`",
        "line": 4,
        "column": 25,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 4,
        "endColumn": 52,
        "fix": { "range": [147, 174], "text": "'eslint-plugin-react-hooks'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"eslint-plugin-jsx-a11y\"` with `'eslint-plugin-jsx-a11y'`",
        "line": 5,
        "column": 24,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 5,
        "endColumn": 48,
        "fix": { "range": [200, 224], "text": "'eslint-plugin-jsx-a11y'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"eslint-plugin-prettier\"` with `'eslint-plugin-prettier'`",
        "line": 6,
        "column": 28,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 6,
        "endColumn": 52,
        "fix": { "range": [254, 278], "text": "'eslint-plugin-prettier'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"@typescript-eslint/parser\"` with `'@typescript-eslint/parser'`",
        "line": 7,
        "column": 22,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 7,
        "endColumn": 49,
        "fix": { "range": [302, 329], "text": "'@typescript-eslint/parser'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"@typescript-eslint/eslint-plugin\"` with `'@typescript-eslint/eslint-plugin'`",
        "line": 8,
        "column": 22,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 8,
        "endColumn": 56,
        "fix": { "range": [353, 387], "text": "'@typescript-eslint/eslint-plugin'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"eslint-plugin-react-refresh\"` with `'eslint-plugin-react-refresh'`",
        "line": 13,
        "column": 32,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 13,
        "endColumn": 61,
        "fix": { "range": [587, 616], "text": "'eslint-plugin-react-refresh'" }
      },
      {
        "ruleId": "no-empty",
        "severity": 2,
        "message": "Empty block statement.",
        "line": 14,
        "column": 13,
        "nodeType": "BlockStatement",
        "messageId": "unexpected",
        "endLine": 14,
        "endColumn": 15,
        "suggestions": [
          {
            "messageId": "suggestComment",
            "data": { "type": "block" },
            "fix": { "range": [642, 642], "text": " /* empty */ " },
            "desc": "Add comment inside empty block statement."
          }
        ]
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"node_modules/**\",┬À\"dist/**\",┬À\"build/**\",┬À\".vercel/**\",┬À\"public/**\"]` with `'node_modules/**',┬À'dist/**',┬À'build/**',┬À'.vercel/**',┬À'public/**'],`",
        "line": 19,
        "column": 15,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 19,
        "endColumn": 83,
        "fix": {
          "range": [726, 794],
          "text": "'node_modules/**', 'dist/**', 'build/**', '.vercel/**', 'public/**'],"
        }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"**/*.{js,jsx}\"` with `'**/*.{js,jsx}'`",
        "line": 24,
        "column": 13,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 24,
        "endColumn": 28,
        "fix": { "range": [837, 852], "text": "'**/*.{js,jsx}'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"latest\"` with `'latest'`",
        "line": 26,
        "column": 20,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 26,
        "endColumn": 28,
        "fix": { "range": [899, 907], "text": "'latest'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"module\"` with `'module'`",
        "line": 27,
        "column": 19,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 27,
        "endColumn": 27,
        "fix": { "range": [928, 936], "text": "'module'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"readonly\",┬Àdocument:┬À\"readonly\"┬À}` with `'readonly',┬Àdocument:┬À'readonly'┬À},`",
        "line": 28,
        "column": 26,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 28,
        "endColumn": 60,
        "fix": { "range": [964, 998], "text": "'readonly', document: 'readonly' }," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"react-hooks\"` with `'react-hooks'`",
        "line": 32,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 32,
        "endColumn": 20,
        "fix": { "range": [1057, 1070], "text": "'react-hooks'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"jsx-a11y\"` with `'jsx-a11y'`",
        "line": 33,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 33,
        "endColumn": 17,
        "fix": { "range": [1092, 1102], "text": "'jsx-a11y'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"react-refresh\":┬ÀreactRefresh┬À}┬À:┬À{})` with `'react-refresh':┬ÀreactRefresh┬À}┬À:┬À{}),`",
        "line": 35,
        "column": 28,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 35,
        "endColumn": 65,
        "fix": { "range": [1177, 1214], "text": "'react-refresh': reactRefresh } : {})," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"detect\"` with `'detect'`",
        "line": 37,
        "column": 35,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 37,
        "endColumn": 43,
        "fix": { "range": [1258, 1266], "text": "'detect'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"react/prop-types\":┬À\"off\"` with `'react/prop-types':┬À'off'`",
        "line": 45,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 45,
        "endColumn": 32,
        "fix": { "range": [1513, 1538], "text": "'react/prop-types': 'off'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"react-refresh/only-export-components\":┬À\"off\"` with `'react-refresh/only-export-components':┬À'off'`",
        "line": 46,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 46,
        "endColumn": 52,
        "fix": { "range": [1547, 1592], "text": "'react-refresh/only-export-components': 'off'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"react/react-in-jsx-scope\":┬À\"off\"` with `'react/react-in-jsx-scope':┬À'off'`",
        "line": 49,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 49,
        "endColumn": 40,
        "fix": { "range": [1633, 1666], "text": "'react/react-in-jsx-scope': 'off'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"no-unused-vars\":┬À[\"warn\",┬À{┬ÀargsIgnorePattern:┬À\"^_\",┬ÀvarsIgnorePattern:┬À\"^_\"` with `'no-unused-vars':┬À['warn',┬À{┬ÀargsIgnorePattern:┬À'^_',┬ÀvarsIgnorePattern:┬À'^_'`",
        "line": 50,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 50,
        "endColumn": 84,
        "fix": {
          "range": [1675, 1752],
          "text": "'no-unused-vars': ['warn', { argsIgnorePattern: '^_', varsIgnorePattern: '^_'"
        }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"no-console\":┬À[\"warn\",┬À{┬Àallow:┬À[\"warn\",┬À\"error\"` with `'no-console':┬À['warn',┬À{┬Àallow:┬À['warn',┬À'error'`",
        "line": 51,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 51,
        "endColumn": 55,
        "fix": { "range": [1764, 1812], "text": "'no-console': ['warn', { allow: ['warn', 'error'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"jsx-a11y/anchor-is-valid\":┬À\"off\"` with `'jsx-a11y/anchor-is-valid':┬À'off'`",
        "line": 52,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 52,
        "endColumn": 40,
        "fix": { "range": [1825, 1858], "text": "'jsx-a11y/anchor-is-valid': 'off'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"jsx-a11y/no-autofocus\":┬À\"off\"` with `'jsx-a11y/no-autofocus':┬À'off'`",
        "line": 53,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 53,
        "endColumn": 37,
        "fix": { "range": [1867, 1897], "text": "'jsx-a11y/no-autofocus': 'off'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"jsx-a11y/no-static-element-interactions\":┬À\"off\"` with `'jsx-a11y/no-static-element-interactions':┬À'off'`",
        "line": 54,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 54,
        "endColumn": 55,
        "fix": { "range": [1906, 1954], "text": "'jsx-a11y/no-static-element-interactions': 'off'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"jsx-a11y/click-events-have-key-events\":┬À\"off\"` with `'jsx-a11y/click-events-have-key-events':┬À'off'`",
        "line": 55,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 55,
        "endColumn": 53,
        "fix": { "range": [1963, 2009], "text": "'jsx-a11y/click-events-have-key-events': 'off'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"react/no-unescaped-entities\":┬À\"warn\"` with `'react/no-unescaped-entities':┬À'warn'`",
        "line": 56,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 56,
        "endColumn": 44,
        "fix": { "range": [2018, 2055], "text": "'react/no-unescaped-entities': 'warn'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"prettier/prettier\"` with `'prettier/prettier'`",
        "line": 59,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 59,
        "endColumn": 26,
        "fix": { "range": [2103, 2122], "text": "'prettier/prettier'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"error\"` with `'error'`",
        "line": 60,
        "column": 9,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 60,
        "endColumn": 16,
        "fix": { "range": [2135, 2142], "text": "'error'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"es5\",┬ÀendOfLine:┬À\"auto\"┬À}` with `'es5',┬ÀendOfLine:┬À'auto'┬À},`",
        "line": 61,
        "column": 70,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 61,
        "endColumn": 96,
        "fix": { "range": [2214, 2240], "text": "'es5', endOfLine: 'auto' }," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Insert `,`",
        "line": 62,
        "column": 8,
        "nodeType": null,
        "messageId": "insert",
        "endLine": 62,
        "endColumn": 8,
        "fix": { "range": [2249, 2249], "text": "," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Insert `,`",
        "line": 63,
        "column": 6,
        "nodeType": null,
        "messageId": "insert",
        "endLine": 63,
        "endColumn": 6,
        "fix": { "range": [2256, 2256], "text": "," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"**/*.{ts,tsx}\"` with `'**/*.{ts,tsx}'`",
        "line": 68,
        "column": 13,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 68,
        "endColumn": 28,
        "fix": { "range": [2299, 2314], "text": "'**/*.{ts,tsx}'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"latest\"` with `'latest'`",
        "line": 70,
        "column": 20,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 70,
        "endColumn": 28,
        "fix": { "range": [2361, 2369], "text": "'latest'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"module\"` with `'module'`",
        "line": 71,
        "column": 19,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 71,
        "endColumn": 27,
        "fix": { "range": [2390, 2398], "text": "'module'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Insert `,`",
        "line": 72,
        "column": 23,
        "nodeType": null,
        "messageId": "insert",
        "endLine": 72,
        "endColumn": 23,
        "fix": { "range": [2423, 2423], "text": "," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"@typescript-eslint\"` with `'@typescript-eslint'`",
        "line": 75,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 75,
        "endColumn": 27,
        "fix": { "range": [2455, 2475], "text": "'@typescript-eslint'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"react-hooks\"` with `'react-hooks'`",
        "line": 77,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 77,
        "endColumn": 20,
        "fix": { "range": [2521, 2534], "text": "'react-hooks'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"jsx-a11y\"` with `'jsx-a11y'`",
        "line": 78,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 78,
        "endColumn": 17,
        "fix": { "range": [2556, 2566], "text": "'jsx-a11y'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Insert `,`",
        "line": 79,
        "column": 31,
        "nodeType": null,
        "messageId": "insert",
        "endLine": 79,
        "endColumn": 31,
        "fix": { "range": [2611, 2611], "text": "," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"detect\"` with `'detect'`",
        "line": 81,
        "column": 35,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 81,
        "endColumn": 43,
        "fix": { "range": [2655, 2663], "text": "'detect'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"react/prop-types\":┬À\"off\"` with `'react/prop-types':┬À'off'`",
        "line": 84,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 84,
        "endColumn": 32,
        "fix": { "range": [2736, 2761], "text": "'react/prop-types': 'off'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"react/react-in-jsx-scope\":┬À\"off\"` with `'react/react-in-jsx-scope':┬À'off'`",
        "line": 85,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 85,
        "endColumn": 40,
        "fix": { "range": [2770, 2803], "text": "'react/react-in-jsx-scope': 'off'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"@typescript-eslint/no-unused-vars\"` with `'@typescript-eslint/no-unused-vars'`",
        "line": 86,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 86,
        "endColumn": 42,
        "fix": { "range": [2812, 2847], "text": "'@typescript-eslint/no-unused-vars'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"warn\"` with `'warn'`",
        "line": 87,
        "column": 9,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 87,
        "endColumn": 15,
        "fix": { "range": [2860, 2866], "text": "'warn'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"^_\",┬ÀvarsIgnorePattern:┬À\"^_\"┬À}` with `'^_',┬ÀvarsIgnorePattern:┬À'^_'┬À},`",
        "line": 88,
        "column": 30,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 88,
        "endColumn": 61,
        "fix": { "range": [2898, 2929], "text": "'^_', varsIgnorePattern: '^_' }," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"no-console\":┬À[\"warn\",┬À{┬Àallow:┬À[\"warn\",┬À\"error\"` with `'no-console':┬À['warn',┬À{┬Àallow:┬À['warn',┬À'error'`",
        "line": 90,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 90,
        "endColumn": 55,
        "fix": { "range": [2947, 2995], "text": "'no-console': ['warn', { allow: ['warn', 'error'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"jsx-a11y/anchor-is-valid\":┬À\"off\"` with `'jsx-a11y/anchor-is-valid':┬À'off'`",
        "line": 91,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 91,
        "endColumn": 40,
        "fix": { "range": [3008, 3041], "text": "'jsx-a11y/anchor-is-valid': 'off'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"jsx-a11y/no-autofocus\":┬À\"off\"` with `'jsx-a11y/no-autofocus':┬À'off'`",
        "line": 92,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 92,
        "endColumn": 37,
        "fix": { "range": [3050, 3080], "text": "'jsx-a11y/no-autofocus': 'off'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"jsx-a11y/no-static-element-interactions\":┬À\"off\"` with `'jsx-a11y/no-static-element-interactions':┬À'off'`",
        "line": 93,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 93,
        "endColumn": 55,
        "fix": { "range": [3089, 3137], "text": "'jsx-a11y/no-static-element-interactions': 'off'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"jsx-a11y/click-events-have-key-events\":┬À\"off\"` with `'jsx-a11y/click-events-have-key-events':┬À'off'`",
        "line": 94,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 94,
        "endColumn": 53,
        "fix": { "range": [3146, 3192], "text": "'jsx-a11y/click-events-have-key-events': 'off'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"react/no-unescaped-entities\":┬À\"warn\"` with `'react/no-unescaped-entities':┬À'warn'`",
        "line": 95,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 95,
        "endColumn": 44,
        "fix": { "range": [3201, 3238], "text": "'react/no-unescaped-entities': 'warn'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"prettier/prettier\"` with `'prettier/prettier'`",
        "line": 96,
        "column": 7,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 96,
        "endColumn": 26,
        "fix": { "range": [3247, 3266], "text": "'prettier/prettier'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"error\"` with `'error'`",
        "line": 97,
        "column": 9,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 97,
        "endColumn": 16,
        "fix": { "range": [3279, 3286], "text": "'error'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"es5\",┬ÀendOfLine:┬À\"auto\"┬À}` with `'es5',┬ÀendOfLine:┬À'auto'┬À},`",
        "line": 98,
        "column": 70,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 98,
        "endColumn": 96,
        "fix": { "range": [3358, 3384], "text": "'es5', endOfLine: 'auto' }," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Insert `,`",
        "line": 99,
        "column": 8,
        "nodeType": null,
        "messageId": "insert",
        "endLine": 99,
        "endColumn": 8,
        "fix": { "range": [3393, 3393], "text": "," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Insert `,`",
        "line": 100,
        "column": 6,
        "nodeType": null,
        "messageId": "insert",
        "endLine": 100,
        "endColumn": 6,
        "fix": { "range": [3400, 3400], "text": "," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"vite.config.js\",┬À\"tailwind.config.js\",┬À\"**/*.config.js\"` with `'vite.config.js',┬À'tailwind.config.js',┬À'**/*.config.js'`",
        "line": 105,
        "column": 13,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 105,
        "endColumn": 69,
        "fix": {
          "range": [3500, 3556],
          "text": "'vite.config.js', 'tailwind.config.js', '**/*.config.js'"
        }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"latest\"` with `'latest'`",
        "line": 107,
        "column": 20,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 107,
        "endColumn": 28,
        "fix": { "range": [3603, 3611], "text": "'latest'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"module\"` with `'module'`",
        "line": 108,
        "column": 19,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 108,
        "endColumn": 27,
        "fix": { "range": [3632, 3640], "text": "'module'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"writable\"` with `'writable'`",
        "line": 110,
        "column": 17,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 110,
        "endColumn": 27,
        "fix": { "range": [3677, 3687], "text": "'writable'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"writable\"` with `'writable'`",
        "line": 111,
        "column": 18,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 111,
        "endColumn": 28,
        "fix": { "range": [3707, 3717], "text": "'writable'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"writable\"` with `'writable'`",
        "line": 112,
        "column": 20,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 112,
        "endColumn": 30,
        "fix": { "range": [3739, 3749], "text": "'writable'" }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"readonly\"` with `'readonly',`",
        "line": 113,
        "column": 18,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 113,
        "endColumn": 28,
        "fix": { "range": [3769, 3779], "text": "'readonly'," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Insert `,`",
        "line": 114,
        "column": 8,
        "nodeType": null,
        "messageId": "insert",
        "endLine": 114,
        "endColumn": 8,
        "fix": { "range": [3788, 3788], "text": "," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Replace `\"no-undef\":┬À\"off\"┬À}` with `'no-undef':┬À'off'┬À},`",
        "line": 116,
        "column": 14,
        "nodeType": null,
        "messageId": "replace",
        "endLine": 116,
        "endColumn": 33,
        "fix": { "range": [3811, 3830], "text": "'no-undef': 'off' }," }
      },
      {
        "ruleId": "prettier/prettier",
        "severity": 2,
        "message": "Insert `,`",
        "line": 117,
        "column": 4,
        "nodeType": null,
        "messageId": "insert",
        "endLine": 117,
        "endColumn": 4,
        "fix": { "range": [3835, 3835], "text": "," }
      }
    ],
    "suppressedMessages": [],
    "errorCount": 68,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 67,
    "fixableWarningCount": 0,
    "source": "// eslint.config.js (ESLint v9 flat config)\r\nimport js from \"@eslint/js\";\r\nimport reactPlugin from \"eslint-plugin-react\";\r\nimport hooksPlugin from \"eslint-plugin-react-hooks\";\r\nimport a11yPlugin from \"eslint-plugin-jsx-a11y\";\r\nimport prettierPlugin from \"eslint-plugin-prettier\";\r\nimport tsParser from \"@typescript-eslint/parser\";\r\nimport tsPlugin from \"@typescript-eslint/eslint-plugin\";\r\n// Optional: silence react-refresh warnings shown in your logs\r\n// If you don't have this plugin installed, you can skip it entirely.\r\nlet reactRefresh = {};\r\ntry {\r\n  reactRefresh = (await import(\"eslint-plugin-react-refresh\")).default;\r\n} catch (_) {}\r\n\r\nexport default [\r\n  // 0) Ignores (replaces .eslintignore)\r\n  {\r\n    ignores: [\"node_modules/**\", \"dist/**\", \"build/**\", \".vercel/**\", \"public/**\"]\r\n  },\r\n\r\n  // 1) JS/JSX\r\n  {\r\n    files: [\"**/*.{js,jsx}\"],\r\n    languageOptions: {\r\n      ecmaVersion: \"latest\",\r\n      sourceType: \"module\",\r\n      globals: { window: \"readonly\", document: \"readonly\" }\r\n    },\r\n    plugins: {\r\n      react: reactPlugin,\r\n      \"react-hooks\": hooksPlugin,\r\n      \"jsx-a11y\": a11yPlugin,\r\n      prettier: prettierPlugin,\r\n      ...(reactRefresh ? { \"react-refresh\": reactRefresh } : {})\r\n    },\r\n    settings: { react: { version: \"detect\" } },\r\n    rules: {\r\n      ...js.configs.recommended.rules,\r\n      ...reactPlugin.configs.recommended.rules,\r\n      ...hooksPlugin.configs.recommended.rules,\r\n      ...a11yPlugin.configs.recommended.rules,\r\n\r\n      // ­ƒöç Big noise reducers\r\n      \"react/prop-types\": \"off\",\r\n      \"react-refresh/only-export-components\": \"off\",\r\n\r\n      // Reasonable defaults\r\n      \"react/react-in-jsx-scope\": \"off\",\r\n      \"no-unused-vars\": [\"warn\", { argsIgnorePattern: \"^_\", varsIgnorePattern: \"^_\" }],\r\n      \"no-console\": [\"warn\", { allow: [\"warn\", \"error\"] }],\r\n      \"jsx-a11y/anchor-is-valid\": \"off\",\r\n      \"jsx-a11y/no-autofocus\": \"off\",\r\n      \"jsx-a11y/no-static-element-interactions\": \"off\",\r\n      \"jsx-a11y/click-events-have-key-events\": \"off\",\r\n      \"react/no-unescaped-entities\": \"warn\",\r\n\r\n      // Keep formatting consistent\r\n      \"prettier/prettier\": [\r\n        \"error\",\r\n        { singleQuote: true, semi: true, tabWidth: 2, trailingComma: \"es5\", endOfLine: \"auto\" }\r\n      ]\r\n    }\r\n  },\r\n\r\n  // 2) TS/TSX\r\n  {\r\n    files: [\"**/*.{ts,tsx}\"],\r\n    languageOptions: {\r\n      ecmaVersion: \"latest\",\r\n      sourceType: \"module\",\r\n      parser: tsParser\r\n    },\r\n    plugins: {\r\n      \"@typescript-eslint\": tsPlugin,\r\n      react: reactPlugin,\r\n      \"react-hooks\": hooksPlugin,\r\n      \"jsx-a11y\": a11yPlugin,\r\n      prettier: prettierPlugin\r\n    },\r\n    settings: { react: { version: \"detect\" } },\r\n    rules: {\r\n      ...tsPlugin.configs.recommended.rules,\r\n      \"react/prop-types\": \"off\",\r\n      \"react/react-in-jsx-scope\": \"off\",\r\n      \"@typescript-eslint/no-unused-vars\": [\r\n        \"warn\",\r\n        { argsIgnorePattern: \"^_\", varsIgnorePattern: \"^_\" }\r\n      ],\r\n      \"no-console\": [\"warn\", { allow: [\"warn\", \"error\"] }],\r\n      \"jsx-a11y/anchor-is-valid\": \"off\",\r\n      \"jsx-a11y/no-autofocus\": \"off\",\r\n      \"jsx-a11y/no-static-element-interactions\": \"off\",\r\n      \"jsx-a11y/click-events-have-key-events\": \"off\",\r\n      \"react/no-unescaped-entities\": \"warn\",\r\n      \"prettier/prettier\": [\r\n        \"error\",\r\n        { singleQuote: true, semi: true, tabWidth: 2, trailingComma: \"es5\", endOfLine: \"auto\" }\r\n      ]\r\n    }\r\n  },\r\n\r\n  // 3) Node config files (no-undef off for __dirname, module, require)\r\n  {\r\n    files: [\"vite.config.js\", \"tailwind.config.js\", \"**/*.config.js\"],\r\n    languageOptions: {\r\n      ecmaVersion: \"latest\",\r\n      sourceType: \"module\",\r\n      globals: {\r\n        module: \"writable\",\r\n        require: \"writable\",\r\n        __dirname: \"writable\",\r\n        process: \"readonly\"\r\n      }\r\n    },\r\n    rules: { \"no-undef\": \"off\" }\r\n  }\r\n];\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\postcss.config.js",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\App.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 7,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import './App.css';\r\nimport Pages from '@/pages/index.jsx';\r\nimport { Toaster } from '@/components/ui/toaster';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Pages />\r\n      <Toaster />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\api\\base44Client.js",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\api\\entities.js",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\api\\functions.js",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\api\\integrations.js",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\calculators\\CalculatorWrapper.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 5,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\n\r\nexport default function CalculatorWrapper({ children }) {\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900 py-12 non-printable\">\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"p-8 bg-gray-50 dark:bg-gray-800/50 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\calculators\\ExportActions.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 59,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Download, Printer } from 'lucide-react';\r\n\r\nexport default function ExportActions({ csvData, fileName, title }) {\r\n  const handlePrint = () => {\r\n    // Set a title for the print page\r\n    const originalTitle = document.title;\r\n    document.title = title || 'Calculation Results';\r\n\r\n    // Track GA4 event\r\n    if (typeof window !== 'undefined' && window.gtag) {\r\n      window.gtag('event', 'result_print', {\r\n        page_name: document.title,\r\n        file_name: title || 'Calculation Results',\r\n      });\r\n    }\r\n\r\n    window.print();\r\n    document.title = originalTitle;\r\n  };\r\n\r\n  const handleCSVExport = () => {\r\n    if (!csvData) return;\r\n\r\n    // Track GA4 event\r\n    if (typeof window !== 'undefined' && window.gtag) {\r\n      window.gtag('event', 'result_download', {\r\n        page_name: document.title,\r\n        file_name: `${fileName}.csv`,\r\n        format: 'csv',\r\n      });\r\n    }\r\n\r\n    // Convert array of arrays to CSV string\r\n    const csvString = csvData\r\n      .map((rowArray) => rowArray.map((item) => `\"${String(item).replace(/\"/g, '\"\"')}\"`).join(','))\r\n      .join('\\n');\r\n\r\n    // Create blob with proper UTF-8 encoding and BOM\r\n    const BOM = '\\uFEFF';\r\n    const blob = new Blob([BOM + csvString], {\r\n      type: 'text/csv;charset=utf-8;',\r\n    });\r\n\r\n    // Create download link\r\n    const link = document.createElement('a');\r\n    const url = URL.createObjectURL(blob);\r\n    link.setAttribute('href', url);\r\n    link.setAttribute('download', `${fileName}.csv`);\r\n    link.style.visibility = 'hidden';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex gap-3\">\r\n      <Button variant=\"outline\" onClick={handlePrint} className=\"flex-1 md:flex-none\">\r\n        <Printer className=\"w-4 h-4 mr-2\" />\r\n        Print / Save PDF\r\n      </Button>\r\n      <Button\r\n        variant=\"outline\"\r\n        onClick={handleCSVExport}\r\n        className=\"flex-1 md:flex-none\"\r\n        disabled={!csvData}\r\n      >\r\n        <Download className=\"w-4 h-4 mr-2\" />\r\n        Export to CSV\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\calculators\\FAQSection.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 13,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { ChevronDown, ChevronUp, HelpCircle } from 'lucide-react';\r\n\r\nexport default function FAQSection({ faqs, title = 'Frequently Asked Questions' }) {\r\n  const [openIndex, setOpenIndex] = useState(null);\r\n\r\n  const toggleFAQ = (index) => {\r\n    setOpenIndex(openIndex === index ? null : index);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"bg-blue-50 dark:bg-gray-800 border-blue-200 dark:border-gray-700\">\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2 text-blue-900 dark:text-blue-400\">\r\n          <HelpCircle className=\"w-5 h-5\" />\r\n          {title}\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        {faqs.map((faq, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"border border-blue-200 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800/50 overflow-hidden\"\r\n          >\r\n            <button\r\n              onClick={() => toggleFAQ(index)}\r\n              className=\"w-full p-4 text-left flex justify-between items-center hover:bg-blue-50 dark:hover:bg-gray-700/50 transition-colors\"\r\n            >\r\n              <span className=\"font-medium text-gray-900 dark:text-gray-100\">{faq.question}</span>\r\n              <ChevronDown\r\n                className={`w-5 h-5 text-blue-600 dark:text-blue-400 transform transition-transform duration-300 ${openIndex === index ? 'rotate-180' : 'rotate-0'}`}\r\n              />\r\n            </button>\r\n            <div\r\n              className={`transition-all duration-500 ease-in-out grid ${openIndex === index ? 'grid-rows-[1fr]' : 'grid-rows-[0fr]'}`}\r\n            >\r\n              <div className=\"overflow-hidden\">\r\n                <div className=\"px-4 pb-4 pt-1\">\r\n                  <div className=\"text-gray-700 dark:text-gray-300 text-sm leading-relaxed\">\r\n                    {faq.answer}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\calculators\\RelatedCalculators.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 7,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArrowRight } from 'lucide-react';\r\n\r\nexport default function RelatedCalculators({ calculators }) {\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900 py-12 non-printable\">\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <h2 className=\"text-2xl font-bold text-center text-gray-900 dark:text-gray-100 mb-8\">\r\n          Related Financial Tools\r\n        </h2>\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {calculators.map((calc, index) => (\r\n            <Link\r\n              key={index}\r\n              to={calc.url}\r\n              className=\"group block p-6 bg-gray-50 dark:bg-gray-800/50 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-blue-500 dark:hover:border-blue-500 hover:shadow-lg transition-all duration-300\"\r\n            >\r\n              <h3 className=\"font-semibold text-lg text-gray-900 dark:text-gray-100 group-hover:text-blue-600 dark:group-hover:text-blue-400 mb-2\">\r\n                {calc.name}\r\n              </h3>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-300 mb-4\">{calc.description}</p>\r\n              <div className=\"flex items-center text-sm font-medium text-blue-600 dark:text-blue-400\">\r\n                <span>Use Calculator</span>\r\n                <ArrowRight className=\"w-4 h-4 ml-2 transition-transform group-hover:translate-x-1\" />\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\data\\calculatorConfig.jsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\data\\seo-data.jsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\general\\AnimatedNumber.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 38,
        "column": 10,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\n\r\n// A component to animate a number counting up\r\nexport default function AnimatedNumber({\r\n  value,\r\n  className,\r\n  locale = 'en-GB',\r\n  options = { minimumFractionDigits: 1, maximumFractionDigits: 1 },\r\n}) {\r\n  const [currentValue, setCurrentValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let startTimestamp = null;\r\n    const startValue = currentValue;\r\n    const duration = 800; // Animation duration in ms\r\n\r\n    const step = (timestamp) => {\r\n      if (!startTimestamp) startTimestamp = timestamp;\r\n      const progress = Math.min((timestamp - startTimestamp) / duration, 1);\r\n      // Allow for decimal animation by removing Math.floor\r\n      const nextValue = progress * (value - startValue) + startValue;\r\n\r\n      setCurrentValue(nextValue);\r\n\r\n      if (progress < 1) {\r\n        window.requestAnimationFrame(step);\r\n      } else {\r\n        setCurrentValue(value); // Ensure final value is exact\r\n      }\r\n    };\r\n\r\n    window.requestAnimationFrame(step);\r\n\r\n    // Cleanup function\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [value]);\r\n\r\n  return <span className={className}>{currentValue.toLocaleString(locale, options)}</span>;\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\general\\Breadcrumbs.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 11,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ChevronRight, Home } from 'lucide-react';\r\n\r\nexport default function Breadcrumbs({ path }) {\r\n  if (!path || path.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <nav className=\"text-sm text-gray-500 mb-4\" aria-label=\"Breadcrumb\">\r\n      <ol className=\"list-none p-0 inline-flex flex-wrap items-center\">\r\n        <li className=\"flex items-center\">\r\n          <Link\r\n            to={path[0].url}\r\n            className=\"text-blue-600 hover:text-blue-800 hover:underline flex items-center gap-1\"\r\n          >\r\n            <Home className=\"w-4 h-4\" />\r\n            {path[0].name}\r\n          </Link>\r\n        </li>\r\n        {path.slice(1).map((item, index) => (\r\n          <li key={index + 1} className=\"flex items-center\">\r\n            <ChevronRight className=\"w-4 h-4 mx-1\" />\r\n            {item.url ? (\r\n              <Link to={item.url} className=\"text-blue-600 hover:text-blue-800 hover:underline\">\r\n                {item.name}\r\n              </Link>\r\n            ) : (\r\n              <span className=\"text-gray-700 font-medium\" aria-current=\"page\">\r\n                {item.name}\r\n              </span>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\general\\CalculatorIndex.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 8,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { calculatorCategories } from '../data/calculatorConfig';\r\nimport { createPageUrl } from '@/utils';\r\n\r\nexport default function CalculatorIndex() {\r\n  return (\r\n    <section className=\"bg-white border-t border-gray-200 non-printable\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-10\">\r\n        <details className=\"group\">\r\n          <summary className=\"cursor-pointer list-none\">\r\n            <div className=\"flex items-center justify-between bg-gray-50 hover:bg-gray-100 border border-gray-200 rounded-lg p-4 transition-colors\">\r\n              <div>\r\n                <h2 className=\"text-lg md:text-xl font-semibold text-gray-900\">\r\n                  Browse all calculators (AÔÇôZ by category)\r\n                </h2>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  Open this index to quickly jump to any tool across the site.\r\n                </p>\r\n              </div>\r\n              <span className=\"text-blue-600 text-sm font-medium\">Show/Hide</span>\r\n            </div>\r\n          </summary>\r\n\r\n          <div className=\"mt-6 space-y-10\">\r\n            {calculatorCategories.map((category) => (\r\n              <div key={category.slug}>\r\n                <div className=\"flex items-center gap-3 mb-3\">\r\n                  <h3 className=\"text-xl font-bold text-gray-900\">{category.name}</h3>\r\n                  <span className=\"text-xs text-gray-500\">\r\n                    {/* anchor to homepage category for users who prefer the hub */}\r\n                    <a\r\n                      href={`${createPageUrl('Home')}#${category.slug}`}\r\n                      className=\"text-blue-600 hover:underline\"\r\n                    >\r\n                      View on directory\r\n                    </a>\r\n                  </span>\r\n                </div>\r\n                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  {category.subCategories.map((sub) => (\r\n                    <div key={sub.name}>\r\n                      <h4 className=\"text-sm font-semibold text-gray-700 mb-2\">{sub.name}</h4>\r\n                      <ul className=\"space-y-1\">\r\n                        {sub.calculators\r\n                          .filter((c) => c.status === 'active')\r\n                          .map((calc) => (\r\n                            <li key={calc.name}>\r\n                              <Link\r\n                                to={calc.url}\r\n                                className=\"text-blue-600 hover:text-blue-800 hover:underline text-sm\"\r\n                              >\r\n                                {calc.name}\r\n                              </Link>\r\n                            </li>\r\n                          ))}\r\n                      </ul>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </details>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\general\\CookieConsentBanner.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 101,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Cookie, X, Settings } from 'lucide-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\n\r\nexport default function CookieConsentBanner() {\r\n  const [showBanner, setShowBanner] = useState(false);\r\n  const [showManageDialog, setShowManageDialog] = useState(false);\r\n  const [cookiePreferences, setCookiePreferences] = useState({\r\n    essential: true, // Always required\r\n    analytics: false,\r\n    marketing: false,\r\n    preferences: false,\r\n  });\r\n  // NEW: show a persistent \"Cookie Settings\" button for returning users\r\n  const [showFloatingManage, setShowFloatingManage] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Support query param to reset consent for testing or when user wants to resurface the banner\r\n    const url = new URL(window.location.href);\r\n    const resetParam =\r\n      url.searchParams.get('consent') === 'reset' || url.searchParams.get('cookie_reset') === '1';\r\n    if (resetParam) {\r\n      localStorage.removeItem('cookieConsent');\r\n      localStorage.removeItem('cookiePreferences');\r\n      setShowBanner(true);\r\n      setShowFloatingManage(false);\r\n      return;\r\n    }\r\n\r\n    // Check if user has already consented\r\n    const hasConsented = localStorage.getItem('cookieConsent');\r\n    if (!hasConsented) {\r\n      // Show banner after a short delay\r\n      const timer = setTimeout(() => {\r\n        setShowBanner(true);\r\n      }, 2000);\r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      // If consent exists, surface floating manage button for easy access\r\n      setShowFloatingManage(true);\r\n      // Also restore saved preferences (if present)\r\n      try {\r\n        const saved = JSON.parse(localStorage.getItem('cookiePreferences') || '{}');\r\n        setCookiePreferences((prev) => ({ ...prev, ...saved, essential: true }));\r\n      } catch (error) {\r\n        // ignore parse errors, default preferences will be used\r\n        console.error('Error parsing cookie preferences from localStorage:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleAcceptAll = () => {\r\n    const allAccepted = {\r\n      essential: true,\r\n      analytics: true,\r\n      marketing: true,\r\n      preferences: true,\r\n    };\r\n    localStorage.setItem('cookieConsent', 'accepted');\r\n    localStorage.setItem('cookiePreferences', JSON.stringify(allAccepted));\r\n    setCookiePreferences(allAccepted);\r\n    setShowBanner(false);\r\n    setShowManageDialog(false);\r\n    setShowFloatingManage(true);\r\n  };\r\n\r\n  const handleDeclineAll = () => {\r\n    const essentialOnly = {\r\n      essential: true,\r\n      analytics: false,\r\n      marketing: false,\r\n      preferences: false,\r\n    };\r\n    localStorage.setItem('cookieConsent', 'declined');\r\n    localStorage.setItem('cookiePreferences', JSON.stringify(essentialOnly));\r\n    setCookiePreferences(essentialOnly);\r\n    setShowBanner(false);\r\n    setShowManageDialog(false);\r\n    setShowFloatingManage(true);\r\n  };\r\n\r\n  const handleSavePreferences = () => {\r\n    localStorage.setItem('cookieConsent', 'customized');\r\n    localStorage.setItem('cookiePreferences', JSON.stringify(cookiePreferences));\r\n    setShowBanner(false);\r\n    setShowManageDialog(false);\r\n    setShowFloatingManage(true);\r\n  };\r\n\r\n  const updatePreference = (type, value) => {\r\n    setCookiePreferences((prev) => ({\r\n      ...prev,\r\n      [type]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* NEW: Floating manage button (visible once a consent state exists) */}\r\n      {showFloatingManage && (\r\n        <Button\r\n          variant=\"outline\"\r\n          onClick={() => setShowManageDialog(true)}\r\n          className=\"fixed bottom-4 right-4 z-[9999] shadow-md bg-white dark:bg-gray-800 dark:border-gray-700 dark:text-gray-100 hover:dark:bg-gray-700\"\r\n        >\r\n          <Settings className=\"w-4 h-4 mr-2\" />\r\n          Cookie Settings\r\n        </Button>\r\n      )}\r\n\r\n      {/* Main Cookie Banner */}\r\n      {showBanner && (\r\n        <div className=\"fixed bottom-0 left-0 right-0 z-[9998] p-4\">\r\n          <div className=\"max-w-6xl mx-auto bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg\">\r\n            <div className=\"p-6\">\r\n              <div className=\"flex items-start gap-4\">\r\n                <Cookie className=\"w-6 h-6 text-blue-600 dark:text-blue-400 mt-1\" />\r\n                <div className=\"flex-1\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2\">\r\n                    We Use Cookies\r\n                  </h3>\r\n                  <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-4\">\r\n                    We use cookies to enhance your experience, analyze site usage, and assist with\r\n                    our marketing efforts. Your data is processed in your browser - we don't store\r\n                    any of your financial calculations on our servers.\r\n                    <br />\r\n                    {/* Fixed: use SPA routing to the Cookie Policy page */}\r\n                    <Link\r\n                      to={createPageUrl('CookiePolicy')}\r\n                      className=\"text-blue-600 dark:text-blue-400 hover:underline\"\r\n                    >\r\n                      Learn more about our cookies\r\n                    </Link>\r\n                  </p>\r\n                  <div className=\"flex flex-wrap gap-3\">\r\n                    <Button onClick={handleAcceptAll} className=\"bg-blue-600 hover:bg-blue-700\">\r\n                      Accept All Cookies\r\n                    </Button>\r\n                    <Button variant=\"outline\" onClick={() => setShowManageDialog(true)}>\r\n                      <Settings className=\"w-4 h-4 mr-2\" />\r\n                      Manage Cookies\r\n                    </Button>\r\n                    <Button variant=\"outline\" onClick={handleDeclineAll}>\r\n                      Decline All\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"icon\"\r\n                  onClick={handleDeclineAll}\r\n                  className=\"text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300\"\r\n                >\r\n                  <X className=\"w-5 h-5\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Cookie Management Dialog */}\r\n      <Dialog open={showManageDialog} onOpenChange={setShowManageDialog}>\r\n        <DialogContent className=\"max-w-2xl bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"text-gray-900 dark:text-gray-100\">\r\n              Manage Cookie Preferences\r\n            </DialogTitle>\r\n          </DialogHeader>\r\n          <div className=\"space-y-6 py-4\">\r\n            <p className=\"text-gray-600 dark:text-gray-300 text-sm\">\r\n              Choose which cookies you'd like to accept. You can change these settings at any time.\r\n            </p>\r\n\r\n            <div className=\"space-y-4\">\r\n              {/* Essential Cookies */}\r\n              <div className=\"flex items-start justify-between p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                <div className=\"flex-1\">\r\n                  <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                    Essential Cookies\r\n                  </h4>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                    Required for basic site functionality. These cannot be disabled.\r\n                  </p>\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <div className=\"w-12 h-6 bg-green-500 rounded-full flex items-center justify-end px-1\">\r\n                    <div className=\"w-4 h-4 bg-white rounded-full\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Analytics Cookies */}\r\n              <div className=\"flex items-start justify-between p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                <div className=\"flex-1\">\r\n                  <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                    Analytics Cookies\r\n                  </h4>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                    Help us understand how visitors use our site to improve user experience.\r\n                  </p>\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <button\r\n                    onClick={() => updatePreference('analytics', !cookiePreferences.analytics)}\r\n                    className={`w-12 h-6 rounded-full flex items-center transition-colors ${\r\n                      cookiePreferences.analytics\r\n                        ? 'bg-blue-500 justify-end'\r\n                        : 'bg-gray-300 dark:bg-gray-600 justify-start'\r\n                    }`}\r\n                  >\r\n                    <div className=\"w-4 h-4 bg-white rounded-full mx-1\"></div>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Marketing Cookies */}\r\n              <div className=\"flex items-start justify-between p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                <div className=\"flex-1\">\r\n                  <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                    Marketing Cookies\r\n                  </h4>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                    Used to track visitors for advertising and marketing purposes.\r\n                  </p>\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <button\r\n                    onClick={() => updatePreference('marketing', !cookiePreferences.marketing)}\r\n                    className={`w-12 h-6 rounded-full flex items-center transition-colors ${\r\n                      cookiePreferences.marketing\r\n                        ? 'bg-blue-500 justify-end'\r\n                        : 'bg-gray-300 dark:bg-gray-600 justify-start'\r\n                    }`}\r\n                  >\r\n                    <div className=\"w-4 h-4 bg-white rounded-full mx-1\"></div>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Preference Cookies */}\r\n              <div className=\"flex items-start justify-between p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\r\n                <div className=\"flex-1\">\r\n                  <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                    Preference Cookies\r\n                  </h4>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                    Remember your settings and preferences (like dark mode).\r\n                  </p>\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <button\r\n                    onClick={() => updatePreference('preferences', !cookiePreferences.preferences)}\r\n                    className={`w-12 h-6 rounded-full flex items-center transition-colors ${\r\n                      cookiePreferences.preferences\r\n                        ? 'bg-blue-500 justify-end'\r\n                        : 'bg-gray-300 dark:bg-gray-600 justify-start'\r\n                    }`}\r\n                  >\r\n                    <div className=\"w-4 h-4 bg-white rounded-full mx-1\"></div>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200 dark:border-gray-700\">\r\n              <Button variant=\"outline\" onClick={handleDeclineAll}>\r\n                Decline All\r\n              </Button>\r\n              <Button onClick={handleSavePreferences} className=\"bg-blue-600 hover:bg-blue-700\">\r\n                Save Preferences\r\n              </Button>\r\n              <Button onClick={handleAcceptAll} className=\"bg-green-600 hover:bg-green-700\">\r\n                Accept All\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\general\\ScrollToTop.jsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\accordion.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 10,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as AccordionPrimitive from '@radix-ui/react-accordion';\r\nimport { ChevronDown } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Accordion = AccordionPrimitive.Root;\r\n\r\nconst AccordionItem = React.forwardRef(({ className, ...props }, ref) => (\r\n  <AccordionPrimitive.Item ref={ref} className={cn('border-b', className)} {...props} />\r\n));\r\nAccordionItem.displayName = 'AccordionItem';\r\n\r\nconst AccordionTrigger = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Header className=\"flex\">\r\n    <AccordionPrimitive.Trigger\r\n      ref={ref}\r\n      className={cn(\r\n        'flex flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline text-left [&[data-state=open]>svg]:rotate-180',\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <ChevronDown className=\"h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200\" />\r\n    </AccordionPrimitive.Trigger>\r\n  </AccordionPrimitive.Header>\r\n));\r\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName;\r\n\r\nconst AccordionContent = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Content\r\n    ref={ref}\r\n    className=\"overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\r\n    {...props}\r\n  >\r\n    <div className={cn('pb-4 pt-0', className)}>{children}</div>\r\n  </AccordionPrimitive.Content>\r\n));\r\nAccordionContent.displayName = AccordionPrimitive.Content.displayName;\r\n\r\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\alert-dialog.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 14,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as AlertDialogPrimitive from '@radix-ui/react-alert-dialog';\r\n\r\nimport { cn } from '@/lib/utils';\r\nimport { buttonVariants } from '@/components/ui/button';\r\n\r\nconst AlertDialog = AlertDialogPrimitive.Root;\r\n\r\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger;\r\n\r\nconst AlertDialogPortal = AlertDialogPrimitive.Portal;\r\n\r\nconst AlertDialogOverlay = React.forwardRef(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Overlay\r\n    className={cn(\r\n      'fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n));\r\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;\r\n\r\nconst AlertDialogContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <AlertDialogPortal>\r\n    <AlertDialogOverlay />\r\n    <AlertDialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </AlertDialogPortal>\r\n));\r\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName;\r\n\r\nconst AlertDialogHeader = ({ className, ...props }) => (\r\n  <div className={cn('flex flex-col space-y-2 text-center sm:text-left', className)} {...props} />\r\n);\r\nAlertDialogHeader.displayName = 'AlertDialogHeader';\r\n\r\nconst AlertDialogFooter = ({ className, ...props }) => (\r\n  <div\r\n    className={cn('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', className)}\r\n    {...props}\r\n  />\r\n);\r\nAlertDialogFooter.displayName = 'AlertDialogFooter';\r\n\r\nconst AlertDialogTitle = React.forwardRef(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn('text-lg font-semibold', className)}\r\n    {...props}\r\n  />\r\n));\r\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName;\r\n\r\nconst AlertDialogDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn('text-sm text-muted-foreground', className)}\r\n    {...props}\r\n  />\r\n));\r\nAlertDialogDescription.displayName = AlertDialogPrimitive.Description.displayName;\r\n\r\nconst AlertDialogAction = React.forwardRef(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Action ref={ref} className={cn(buttonVariants(), className)} {...props} />\r\n));\r\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName;\r\n\r\nconst AlertDialogCancel = React.forwardRef(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Cancel\r\n    ref={ref}\r\n    className={cn(buttonVariants({ variant: 'outline' }), 'mt-2 sm:mt-0', className)}\r\n    {...props}\r\n  />\r\n));\r\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName;\r\n\r\nexport {\r\n  AlertDialog,\r\n  AlertDialogPortal,\r\n  AlertDialogOverlay,\r\n  AlertDialogTrigger,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogFooter,\r\n  AlertDialogTitle,\r\n  AlertDialogDescription,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\alert.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 23,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport { cva } from 'class-variance-authority';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst alertVariants = cva(\r\n  'relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'bg-background text-foreground',\r\n        destructive:\r\n          'border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n    },\r\n  }\r\n);\r\n\r\nconst Alert = React.forwardRef(({ className, variant, ...props }, ref) => (\r\n  <div ref={ref} role=\"alert\" className={cn(alertVariants({ variant }), className)} {...props} />\r\n));\r\nAlert.displayName = 'Alert';\r\n\r\nconst AlertTitle = React.forwardRef(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={cn('mb-1 font-medium leading-none tracking-tight', className)}\r\n    {...props}\r\n  />\r\n));\r\nAlertTitle.displayName = 'AlertTitle';\r\n\r\nconst AlertDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn('text-sm [&_p]:leading-relaxed', className)} {...props} />\r\n));\r\nAlertDescription.displayName = 'AlertDescription';\r\n\r\nexport { Alert, AlertTitle, AlertDescription };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\aspect-ratio.jsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\avatar.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 9,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\n\r\nimport * as React from 'react';\r\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Avatar = React.forwardRef(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Root\r\n    ref={ref}\r\n    className={cn('relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full', className)}\r\n    {...props}\r\n  />\r\n));\r\nAvatar.displayName = AvatarPrimitive.Root.displayName;\r\n\r\nconst AvatarImage = React.forwardRef(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Image\r\n    ref={ref}\r\n    className={cn('aspect-square h-full w-full', className)}\r\n    {...props}\r\n  />\r\n));\r\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\r\n\r\nconst AvatarFallback = React.forwardRef(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Fallback\r\n    ref={ref}\r\n    className={cn(\r\n      'flex h-full w-full items-center justify-center rounded-full bg-muted',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\r\n\r\nexport { Avatar, AvatarImage, AvatarFallback };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\badge.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 26,
        "column": 10,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport { cva } from 'class-variance-authority';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst badgeVariants = cva(\r\n  'inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80',\r\n        secondary:\r\n          'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\r\n        destructive:\r\n          'border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80',\r\n        outline: 'text-foreground',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n    },\r\n  }\r\n);\r\n\r\nfunction Badge({ className, variant, ...props }) {\r\n  return <div className={cn(badgeVariants({ variant }), className)} {...props} />;\r\n}\r\n\r\nexport { Badge, badgeVariants };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\breadcrumb.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 8,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport { Slot } from '@radix-ui/react-slot';\r\nimport { ChevronRight, MoreHorizontal } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Breadcrumb = React.forwardRef(({ ...props }, ref) => (\r\n  <nav ref={ref} aria-label=\"breadcrumb\" {...props} />\r\n));\r\nBreadcrumb.displayName = 'Breadcrumb';\r\n\r\nconst BreadcrumbList = React.forwardRef(({ className, ...props }, ref) => (\r\n  <ol\r\n    ref={ref}\r\n    className={cn(\r\n      'flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nBreadcrumbList.displayName = 'BreadcrumbList';\r\n\r\nconst BreadcrumbItem = React.forwardRef(({ className, ...props }, ref) => (\r\n  <li ref={ref} className={cn('inline-flex items-center gap-1.5', className)} {...props} />\r\n));\r\nBreadcrumbItem.displayName = 'BreadcrumbItem';\r\n\r\nconst BreadcrumbLink = React.forwardRef(({ asChild, className, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : 'a';\r\n\r\n  return (\r\n    <Comp\r\n      ref={ref}\r\n      className={cn('transition-colors hover:text-foreground', className)}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nBreadcrumbLink.displayName = 'BreadcrumbLink';\r\n\r\nconst BreadcrumbPage = React.forwardRef(({ className, ...props }, ref) => (\r\n  <span\r\n    ref={ref}\r\n    role=\"link\"\r\n    aria-disabled=\"true\"\r\n    aria-current=\"page\"\r\n    className={cn('font-normal text-foreground', className)}\r\n    {...props}\r\n  />\r\n));\r\nBreadcrumbPage.displayName = 'BreadcrumbPage';\r\n\r\nconst BreadcrumbSeparator = ({ children, className, ...props }) => (\r\n  <li\r\n    role=\"presentation\"\r\n    aria-hidden=\"true\"\r\n    className={cn('[&>svg]:w-3.5 [&>svg]:h-3.5', className)}\r\n    {...props}\r\n  >\r\n    {children ?? <ChevronRight />}\r\n  </li>\r\n);\r\nBreadcrumbSeparator.displayName = 'BreadcrumbSeparator';\r\n\r\nconst BreadcrumbEllipsis = ({ className, ...props }) => (\r\n  <span\r\n    role=\"presentation\"\r\n    aria-hidden=\"true\"\r\n    className={cn('flex h-9 w-9 items-center justify-center', className)}\r\n    {...props}\r\n  >\r\n    <MoreHorizontal className=\"h-4 w-4\" />\r\n    <span className=\"sr-only\">More</span>\r\n  </span>\r\n);\r\nBreadcrumbEllipsis.displayName = 'BreadcrumbElipssis';\r\n\r\nexport {\r\n  Breadcrumb,\r\n  BreadcrumbList,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  BreadcrumbPage,\r\n  BreadcrumbSeparator,\r\n  BreadcrumbEllipsis,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\button.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 36,
        "column": 10,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport { Slot } from '@radix-ui/react-slot';\r\nimport { cva } from 'class-variance-authority';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst buttonVariants = cva(\r\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'bg-primary text-primary-foreground shadow hover:bg-primary/90',\r\n        destructive: 'bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90',\r\n        outline:\r\n          'border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground',\r\n        secondary: 'bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80',\r\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\r\n        link: 'text-primary underline-offset-4 hover:underline',\r\n      },\r\n      size: {\r\n        default: 'h-9 px-4 py-2',\r\n        sm: 'h-8 rounded-md px-3 text-xs',\r\n        lg: 'h-10 rounded-md px-8',\r\n        icon: 'h-9 w-9',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n      size: 'default',\r\n    },\r\n  }\r\n);\r\n\r\nconst Button = React.forwardRef(({ className, variant, size, asChild = false, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : 'button';\r\n  return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />;\r\n});\r\nButton.displayName = 'Button';\r\n\r\nexport { Button, buttonVariants };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\calendar.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 10,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\nimport { DayPicker } from 'react-day-picker';\r\n\r\nimport { cn } from '@/lib/utils';\r\nimport { buttonVariants } from '@/components/ui/button';\r\n\r\nfunction Calendar({ className, classNames, showOutsideDays = true, ...props }) {\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn('p-3', className)}\r\n      classNames={{\r\n        months: 'flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0',\r\n        month: 'space-y-4',\r\n        caption: 'flex justify-center pt-1 relative items-center',\r\n        caption_label: 'text-sm font-medium',\r\n        nav: 'space-x-1 flex items-center',\r\n        nav_button: cn(\r\n          buttonVariants({ variant: 'outline' }),\r\n          'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100'\r\n        ),\r\n        nav_button_previous: 'absolute left-1',\r\n        nav_button_next: 'absolute right-1',\r\n        table: 'w-full border-collapse space-y-1',\r\n        head_row: 'flex',\r\n        head_cell: 'text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]',\r\n        row: 'flex w-full mt-2',\r\n        cell: cn(\r\n          'relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected].day-range-end)]:rounded-r-md',\r\n          props.mode === 'range'\r\n            ? '[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md'\r\n            : '[&:has([aria-selected])]:rounded-md'\r\n        ),\r\n        day: cn(\r\n          buttonVariants({ variant: 'ghost' }),\r\n          'h-8 w-8 p-0 font-normal aria-selected:opacity-100'\r\n        ),\r\n        day_range_start: 'day-range-start',\r\n        day_range_end: 'day-range-end',\r\n        day_selected:\r\n          'bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground',\r\n        day_today: 'bg-accent text-accent-foreground',\r\n        day_outside:\r\n          'day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground',\r\n        day_disabled: 'text-muted-foreground opacity-50',\r\n        day_range_middle: 'aria-selected:bg-accent aria-selected:text-accent-foreground',\r\n        day_hidden: 'invisible',\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        IconLeft: ({ className, ...props }) => (\r\n          <ChevronLeft className={cn('h-4 w-4', className)} {...props} />\r\n        ),\r\n        IconRight: ({ className, ...props }) => (\r\n          <ChevronRight className={cn('h-4 w-4', className)} {...props} />\r\n        ),\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\nCalendar.displayName = 'Calendar';\r\n\r\nexport { Calendar };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\card.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 6,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn('rounded-xl border bg-card text-card-foreground shadow', className)}\r\n    {...props}\r\n  />\r\n));\r\nCard.displayName = 'Card';\r\n\r\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn('flex flex-col space-y-1.5 p-6', className)} {...props} />\r\n));\r\nCardHeader.displayName = 'CardHeader';\r\n\r\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn('font-semibold leading-none tracking-tight', className)}\r\n    {...props}\r\n  />\r\n));\r\nCardTitle.displayName = 'CardTitle';\r\n\r\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn('text-sm text-muted-foreground', className)} {...props} />\r\n));\r\nCardDescription.displayName = 'CardDescription';\r\n\r\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\r\n));\r\nCardContent.displayName = 'CardContent';\r\n\r\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn('flex items-center p-6 pt-0', className)} {...props} />\r\n));\r\nCardFooter.displayName = 'CardFooter';\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\carousel.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 85,
        "column": 7,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport useEmblaCarousel from 'embla-carousel-react';\r\nimport { ArrowLeft, ArrowRight } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\nimport { Button } from '@/components/ui/button';\r\n\r\nconst CarouselContext = React.createContext(null);\r\n\r\nfunction useCarousel() {\r\n  const context = React.useContext(CarouselContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useCarousel must be used within a <Carousel />');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nconst Carousel = React.forwardRef(\r\n  ({ orientation = 'horizontal', opts, setApi, plugins, className, children, ...props }, ref) => {\r\n    const [carouselRef, api] = useEmblaCarousel(\r\n      {\r\n        ...opts,\r\n        axis: orientation === 'horizontal' ? 'x' : 'y',\r\n      },\r\n      plugins\r\n    );\r\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false);\r\n    const [canScrollNext, setCanScrollNext] = React.useState(false);\r\n\r\n    const onSelect = React.useCallback((api) => {\r\n      if (!api) {\r\n        return;\r\n      }\r\n\r\n      setCanScrollPrev(api.canScrollPrev());\r\n      setCanScrollNext(api.canScrollNext());\r\n    }, []);\r\n\r\n    const scrollPrev = React.useCallback(() => {\r\n      api?.scrollPrev();\r\n    }, [api]);\r\n\r\n    const scrollNext = React.useCallback(() => {\r\n      api?.scrollNext();\r\n    }, [api]);\r\n\r\n    const handleKeyDown = React.useCallback(\r\n      (event) => {\r\n        if (event.key === 'ArrowLeft') {\r\n          event.preventDefault();\r\n          scrollPrev();\r\n        } else if (event.key === 'ArrowRight') {\r\n          event.preventDefault();\r\n          scrollNext();\r\n        }\r\n      },\r\n      [scrollPrev, scrollNext]\r\n    );\r\n\r\n    React.useEffect(() => {\r\n      if (!api || !setApi) {\r\n        return;\r\n      }\r\n\r\n      setApi(api);\r\n    }, [api, setApi]);\r\n\r\n    React.useEffect(() => {\r\n      if (!api) {\r\n        return;\r\n      }\r\n\r\n      onSelect(api);\r\n      api.on('reInit', onSelect);\r\n      api.on('select', onSelect);\r\n\r\n      return () => {\r\n        api?.off('select', onSelect);\r\n      };\r\n    }, [api, onSelect]);\r\n\r\n    return (\r\n      <CarouselContext.Provider\r\n        value={{\r\n          carouselRef,\r\n          api: api,\r\n          opts,\r\n          orientation: orientation || (opts?.axis === 'y' ? 'vertical' : 'horizontal'),\r\n          scrollPrev,\r\n          scrollNext,\r\n          canScrollPrev,\r\n          canScrollNext,\r\n        }}\r\n      >\r\n        <div\r\n          ref={ref}\r\n          onKeyDownCapture={handleKeyDown}\r\n          className={cn('relative', className)}\r\n          role=\"region\"\r\n          aria-roledescription=\"carousel\"\r\n          {...props}\r\n        >\r\n          {children}\r\n        </div>\r\n      </CarouselContext.Provider>\r\n    );\r\n  }\r\n);\r\nCarousel.displayName = 'Carousel';\r\n\r\nconst CarouselContent = React.forwardRef(({ className, ...props }, ref) => {\r\n  const { carouselRef, orientation } = useCarousel();\r\n\r\n  return (\r\n    <div ref={carouselRef} className=\"overflow-hidden\">\r\n      <div\r\n        ref={ref}\r\n        className={cn('flex', orientation === 'horizontal' ? '-ml-4' : '-mt-4 flex-col', className)}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n});\r\nCarouselContent.displayName = 'CarouselContent';\r\n\r\nconst CarouselItem = React.forwardRef(({ className, ...props }, ref) => {\r\n  const { orientation } = useCarousel();\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      role=\"group\"\r\n      aria-roledescription=\"slide\"\r\n      className={cn(\r\n        'min-w-0 shrink-0 grow-0 basis-full',\r\n        orientation === 'horizontal' ? 'pl-4' : 'pt-4',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nCarouselItem.displayName = 'CarouselItem';\r\n\r\nconst CarouselPrevious = React.forwardRef(\r\n  ({ className, variant = 'outline', size = 'icon', ...props }, ref) => {\r\n    const { orientation, scrollPrev, canScrollPrev } = useCarousel();\r\n\r\n    return (\r\n      <Button\r\n        ref={ref}\r\n        variant={variant}\r\n        size={size}\r\n        className={cn(\r\n          'absolute  h-8 w-8 rounded-full',\r\n          orientation === 'horizontal'\r\n            ? '-left-12 top-1/2 -translate-y-1/2'\r\n            : '-top-12 left-1/2 -translate-x-1/2 rotate-90',\r\n          className\r\n        )}\r\n        disabled={!canScrollPrev}\r\n        onClick={scrollPrev}\r\n        {...props}\r\n      >\r\n        <ArrowLeft className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Previous slide</span>\r\n      </Button>\r\n    );\r\n  }\r\n);\r\nCarouselPrevious.displayName = 'CarouselPrevious';\r\n\r\nconst CarouselNext = React.forwardRef(\r\n  ({ className, variant = 'outline', size = 'icon', ...props }, ref) => {\r\n    const { orientation, scrollNext, canScrollNext } = useCarousel();\r\n\r\n    return (\r\n      <Button\r\n        ref={ref}\r\n        variant={variant}\r\n        size={size}\r\n        className={cn(\r\n          'absolute h-8 w-8 rounded-full',\r\n          orientation === 'horizontal'\r\n            ? '-right-12 top-1/2 -translate-y-1/2'\r\n            : '-bottom-12 left-1/2 -translate-x-1/2 rotate-90',\r\n          className\r\n        )}\r\n        disabled={!canScrollNext}\r\n        onClick={scrollNext}\r\n        {...props}\r\n      >\r\n        <ArrowRight className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Next slide</span>\r\n      </Button>\r\n    );\r\n  }\r\n);\r\nCarouselNext.displayName = 'CarouselNext';\r\n\r\nexport { Carousel, CarouselContent, CarouselItem, CarouselPrevious, CarouselNext };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\chart.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 30,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\nimport * as React from 'react';\r\nimport * as RechartsPrimitive from 'recharts';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\n// Format: { THEME_NAME: CSS_SELECTOR }\r\nconst THEMES = {\r\n  light: '',\r\n  dark: '.dark',\r\n};\r\n\r\nconst ChartContext = React.createContext(null);\r\n\r\nfunction useChart() {\r\n  const context = React.useContext(ChartContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useChart must be used within a <ChartContainer />');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nconst ChartContainer = React.forwardRef(({ id, className, children, config, ...props }, ref) => {\r\n  const uniqueId = React.useId();\r\n  const chartId = `chart-${id || uniqueId.replace(/:/g, '')}`;\r\n\r\n  return (\r\n    <ChartContext.Provider value={{ config }}>\r\n      <div\r\n        data-chart={chartId}\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        <ChartStyle id={chartId} config={config} />\r\n        <RechartsPrimitive.ResponsiveContainer>{children}</RechartsPrimitive.ResponsiveContainer>\r\n      </div>\r\n    </ChartContext.Provider>\r\n  );\r\n});\r\nChartContainer.displayName = 'Chart';\r\n\r\nconst ChartStyle = ({ id, config }) => {\r\n  const colorConfig = Object.entries(config).filter(([, config]) => config.theme || config.color);\r\n\r\n  if (!colorConfig.length) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <style\r\n      dangerouslySetInnerHTML={{\r\n        __html: Object.entries(THEMES)\r\n          .map(\r\n            ([theme, prefix]) => `\r\n${prefix} [data-chart=${id}] {\r\n${colorConfig\r\n  .map(([key, itemConfig]) => {\r\n    const color = itemConfig.theme?.[theme] || itemConfig.color;\r\n    return color ? `  --color-${key}: ${color};` : null;\r\n  })\r\n  .join('\\n')}\r\n}\r\n`\r\n          )\r\n          .join('\\n'),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst ChartTooltip = RechartsPrimitive.Tooltip;\r\n\r\nconst ChartTooltipContent = React.forwardRef(\r\n  (\r\n    {\r\n      active,\r\n      payload,\r\n      className,\r\n      indicator = 'dot',\r\n      hideLabel = false,\r\n      hideIndicator = false,\r\n      label,\r\n      labelFormatter,\r\n      labelClassName,\r\n      formatter,\r\n      color,\r\n      nameKey,\r\n      labelKey,\r\n    },\r\n    ref\r\n  ) => {\r\n    const { config } = useChart();\r\n\r\n    const tooltipLabel = React.useMemo(() => {\r\n      if (hideLabel || !payload?.length) {\r\n        return null;\r\n      }\r\n\r\n      const [item] = payload;\r\n      const key = `${labelKey || item.dataKey || item.name || 'value'}`;\r\n      const itemConfig = getPayloadConfigFromPayload(config, item, key);\r\n      const value =\r\n        !labelKey && typeof label === 'string' ? config[label]?.label || label : itemConfig?.label;\r\n\r\n      if (labelFormatter) {\r\n        return (\r\n          <div className={cn('font-medium', labelClassName)}>{labelFormatter(value, payload)}</div>\r\n        );\r\n      }\r\n\r\n      if (!value) {\r\n        return null;\r\n      }\r\n\r\n      return <div className={cn('font-medium', labelClassName)}>{value}</div>;\r\n    }, [label, labelFormatter, payload, hideLabel, labelClassName, config, labelKey]);\r\n\r\n    if (!active || !payload?.length) {\r\n      return null;\r\n    }\r\n\r\n    const nestLabel = payload.length === 1 && indicator !== 'dot';\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          'grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl',\r\n          className\r\n        )}\r\n      >\r\n        {!nestLabel ? tooltipLabel : null}\r\n        <div className=\"grid gap-1.5\">\r\n          {payload.map((item, index) => {\r\n            const key = `${nameKey || item.name || item.dataKey || 'value'}`;\r\n            const itemConfig = getPayloadConfigFromPayload(config, item, key);\r\n            const indicatorColor = color || item.payload.fill || item.color;\r\n\r\n            return (\r\n              <div\r\n                key={item.dataKey}\r\n                className={cn(\r\n                  'flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground',\r\n                  indicator === 'dot' && 'items-center'\r\n                )}\r\n              >\r\n                {formatter && item?.value !== undefined && item.name ? (\r\n                  formatter(item.value, item.name, item, index, item.payload)\r\n                ) : (\r\n                  <>\r\n                    {itemConfig?.icon ? (\r\n                      <itemConfig.icon />\r\n                    ) : (\r\n                      !hideIndicator && (\r\n                        <div\r\n                          className={cn(\r\n                            'shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]',\r\n                            {\r\n                              'h-2.5 w-2.5': indicator === 'dot',\r\n                              'w-1': indicator === 'line',\r\n                              'w-0 border-[1.5px] border-dashed bg-transparent':\r\n                                indicator === 'dashed',\r\n                              'my-0.5': nestLabel && indicator === 'dashed',\r\n                            }\r\n                          )}\r\n                          style={{\r\n                            '--color-bg': indicatorColor,\r\n                            '--color-border': indicatorColor,\r\n                          }}\r\n                        />\r\n                      )\r\n                    )}\r\n                    <div\r\n                      className={cn(\r\n                        'flex flex-1 justify-between leading-none',\r\n                        nestLabel ? 'items-end' : 'items-center'\r\n                      )}\r\n                    >\r\n                      <div className=\"grid gap-1.5\">\r\n                        {nestLabel ? tooltipLabel : null}\r\n                        <span className=\"text-muted-foreground\">\r\n                          {itemConfig?.label || item.name}\r\n                        </span>\r\n                      </div>\r\n                      {item.value && (\r\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\r\n                          {item.value.toLocaleString()}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\nChartTooltipContent.displayName = 'ChartTooltip';\r\n\r\nconst ChartLegend = RechartsPrimitive.Legend;\r\n\r\nconst ChartLegendContent = React.forwardRef(\r\n  ({ className, hideIcon = false, payload, verticalAlign = 'bottom', nameKey }, ref) => {\r\n    const { config } = useChart();\r\n\r\n    if (!payload?.length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          'flex items-center justify-center gap-4',\r\n          verticalAlign === 'top' ? 'pb-3' : 'pt-3',\r\n          className\r\n        )}\r\n      >\r\n        {payload.map((item) => {\r\n          const key = `${nameKey || item.dataKey || 'value'}`;\r\n          const itemConfig = getPayloadConfigFromPayload(config, item, key);\r\n\r\n          return (\r\n            <div\r\n              key={item.value}\r\n              className={cn(\r\n                'flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground'\r\n              )}\r\n            >\r\n              {itemConfig?.icon && !hideIcon ? (\r\n                <itemConfig.icon />\r\n              ) : (\r\n                <div\r\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\r\n                  style={{\r\n                    backgroundColor: item.color,\r\n                  }}\r\n                />\r\n              )}\r\n              {itemConfig?.label}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n);\r\nChartLegendContent.displayName = 'ChartLegend';\r\n\r\n// Helper to extract item config from a payload.\r\nfunction getPayloadConfigFromPayload(config, payload, key) {\r\n  if (typeof payload !== 'object' || payload === null) {\r\n    return undefined;\r\n  }\r\n\r\n  const payloadPayload =\r\n    'payload' in payload && typeof payload.payload === 'object' && payload.payload !== null\r\n      ? payload.payload\r\n      : undefined;\r\n\r\n  let configLabelKey = key;\r\n\r\n  if (key in payload && typeof payload[key] === 'string') {\r\n    configLabelKey = payload[key];\r\n  } else if (payloadPayload && key in payloadPayload && typeof payloadPayload[key] === 'string') {\r\n    configLabelKey = payloadPayload[key];\r\n  }\r\n\r\n  return configLabelKey in config ? config[configLabelKey] : config[key];\r\n}\r\n\r\nexport {\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n  ChartLegend,\r\n  ChartLegendContent,\r\n  ChartStyle,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\checkbox.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 8,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\r\nimport { Check } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Checkbox = React.forwardRef(({ className, ...props }, ref) => (\r\n  <CheckboxPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      'peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <CheckboxPrimitive.Indicator className={cn('flex items-center justify-center text-current')}>\r\n      <Check className=\"h-4 w-4\" />\r\n    </CheckboxPrimitive.Indicator>\r\n  </CheckboxPrimitive.Root>\r\n));\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\r\n\r\nexport { Checkbox };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\collapsible.jsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\command.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 9,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport { Command as CommandPrimitive } from 'cmdk';\r\nimport { Search } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\nimport { Dialog, DialogContent } from '@/components/ui/dialog';\r\n\r\nconst Command = React.forwardRef(({ className, ...props }, ref) => (\r\n  <CommandPrimitive\r\n    ref={ref}\r\n    className={cn(\r\n      'flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nCommand.displayName = CommandPrimitive.displayName;\r\n\r\nconst CommandDialog = ({ children, ...props }) => {\r\n  return (\r\n    <Dialog {...props}>\r\n      <DialogContent className=\"overflow-hidden p-0\">\r\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\r\n          {children}\r\n        </Command>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst CommandInput = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div className=\"flex items-center border-b px-3 cmdk-input-wrapper\">\r\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\r\n    <CommandPrimitive.Input\r\n      ref={ref}\r\n      className={cn(\r\n        'flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </div>\r\n));\r\n\r\nCommandInput.displayName = CommandPrimitive.Input.displayName;\r\n\r\nconst CommandList = React.forwardRef(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.List\r\n    ref={ref}\r\n    className={cn('max-h-[300px] overflow-y-auto overflow-x-hidden', className)}\r\n    {...props}\r\n  />\r\n));\r\n\r\nCommandList.displayName = CommandPrimitive.List.displayName;\r\n\r\nconst CommandEmpty = React.forwardRef((props, ref) => (\r\n  <CommandPrimitive.Empty ref={ref} className=\"py-6 text-center text-sm\" {...props} />\r\n));\r\n\r\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName;\r\n\r\nconst CommandGroup = React.forwardRef(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.Group\r\n    ref={ref}\r\n    className={cn(\r\n      'overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\n\r\nCommandGroup.displayName = CommandPrimitive.Group.displayName;\r\n\r\nconst CommandSeparator = React.forwardRef(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.Separator\r\n    ref={ref}\r\n    className={cn('-mx-1 h-px bg-border', className)}\r\n    {...props}\r\n  />\r\n));\r\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName;\r\n\r\nconst CommandItem = React.forwardRef(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      'relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\n\r\nCommandItem.displayName = CommandPrimitive.Item.displayName;\r\n\r\nconst CommandShortcut = ({ className, ...props }) => {\r\n  return (\r\n    <span\r\n      className={cn('ml-auto text-xs tracking-widest text-muted-foreground', className)}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\nCommandShortcut.displayName = 'CommandShortcut';\r\n\r\nexport {\r\n  Command,\r\n  CommandDialog,\r\n  CommandInput,\r\n  CommandList,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandItem,\r\n  CommandShortcut,\r\n  CommandSeparator,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\context-menu.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 20,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as ContextMenuPrimitive from '@radix-ui/react-context-menu';\r\nimport { Check, ChevronRight, Circle } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst ContextMenu = ContextMenuPrimitive.Root;\r\n\r\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger;\r\n\r\nconst ContextMenuGroup = ContextMenuPrimitive.Group;\r\n\r\nconst ContextMenuPortal = ContextMenuPrimitive.Portal;\r\n\r\nconst ContextMenuSub = ContextMenuPrimitive.Sub;\r\n\r\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup;\r\n\r\nconst ContextMenuSubTrigger = React.forwardRef(({ className, inset, children, ...props }, ref) => (\r\n  <ContextMenuPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      'flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\r\n      inset && 'pl-8',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\r\n  </ContextMenuPrimitive.SubTrigger>\r\n));\r\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName;\r\n\r\nconst ContextMenuSubContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <ContextMenuPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName;\r\n\r\nconst ContextMenuContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <ContextMenuPrimitive.Portal>\r\n    <ContextMenuPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </ContextMenuPrimitive.Portal>\r\n));\r\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName;\r\n\r\nconst ContextMenuItem = React.forwardRef(({ className, inset, ...props }, ref) => (\r\n  <ContextMenuPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      'relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n      inset && 'pl-8',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName;\r\n\r\nconst ContextMenuCheckboxItem = React.forwardRef(\r\n  ({ className, children, checked, ...props }, ref) => (\r\n    <ContextMenuPrimitive.CheckboxItem\r\n      ref={ref}\r\n      className={cn(\r\n        'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n        className\r\n      )}\r\n      checked={checked}\r\n      {...props}\r\n    >\r\n      <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n        <ContextMenuPrimitive.ItemIndicator>\r\n          <Check className=\"h-4 w-4\" />\r\n        </ContextMenuPrimitive.ItemIndicator>\r\n      </span>\r\n      {children}\r\n    </ContextMenuPrimitive.CheckboxItem>\r\n  )\r\n);\r\nContextMenuCheckboxItem.displayName = ContextMenuPrimitive.CheckboxItem.displayName;\r\n\r\nconst ContextMenuRadioItem = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <ContextMenuPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <ContextMenuPrimitive.ItemIndicator>\r\n        <Circle className=\"h-4 w-4 fill-current\" />\r\n      </ContextMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </ContextMenuPrimitive.RadioItem>\r\n));\r\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName;\r\n\r\nconst ContextMenuLabel = React.forwardRef(({ className, inset, ...props }, ref) => (\r\n  <ContextMenuPrimitive.Label\r\n    ref={ref}\r\n    className={cn('px-2 py-1.5 text-sm font-semibold text-foreground', inset && 'pl-8', className)}\r\n    {...props}\r\n  />\r\n));\r\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName;\r\n\r\nconst ContextMenuSeparator = React.forwardRef(({ className, ...props }, ref) => (\r\n  <ContextMenuPrimitive.Separator\r\n    ref={ref}\r\n    className={cn('-mx-1 my-1 h-px bg-border', className)}\r\n    {...props}\r\n  />\r\n));\r\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName;\r\n\r\nconst ContextMenuShortcut = ({ className, ...props }) => {\r\n  return (\r\n    <span\r\n      className={cn('ml-auto text-xs tracking-widest text-muted-foreground', className)}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\nContextMenuShortcut.displayName = 'ContextMenuShortcut';\r\n\r\nexport {\r\n  ContextMenu,\r\n  ContextMenuTrigger,\r\n  ContextMenuContent,\r\n  ContextMenuItem,\r\n  ContextMenuCheckboxItem,\r\n  ContextMenuRadioItem,\r\n  ContextMenuLabel,\r\n  ContextMenuSeparator,\r\n  ContextMenuShortcut,\r\n  ContextMenuGroup,\r\n  ContextMenuPortal,\r\n  ContextMenuSub,\r\n  ContextMenuSubContent,\r\n  ContextMenuSubTrigger,\r\n  ContextMenuRadioGroup,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\dialog.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 18,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\n\r\nimport * as React from 'react';\r\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\r\nimport { X } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Dialog = DialogPrimitive.Root;\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger;\r\n\r\nconst DialogPortal = DialogPrimitive.Portal;\r\n\r\nconst DialogClose = DialogPrimitive.Close;\r\n\r\nconst DialogOverlay = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\r\n\r\nconst DialogContent = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n));\r\nDialogContent.displayName = DialogPrimitive.Content.displayName;\r\n\r\nconst DialogHeader = ({ className, ...props }) => (\r\n  <div className={cn('flex flex-col space-y-1.5 text-center sm:text-left', className)} {...props} />\r\n);\r\nDialogHeader.displayName = 'DialogHeader';\r\n\r\nconst DialogFooter = ({ className, ...props }) => (\r\n  <div\r\n    className={cn('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', className)}\r\n    {...props}\r\n  />\r\n);\r\nDialogFooter.displayName = 'DialogFooter';\r\n\r\nconst DialogTitle = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn('text-lg font-semibold leading-none tracking-tight', className)}\r\n    {...props}\r\n  />\r\n));\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\r\n\r\nconst DialogDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn('text-sm text-muted-foreground', className)}\r\n    {...props}\r\n  />\r\n));\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogTrigger,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\drawer.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 9,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\n\r\nimport * as React from 'react';\r\nimport { Drawer as DrawerPrimitive } from 'vaul';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Drawer = ({ shouldScaleBackground = true, ...props }) => (\r\n  <DrawerPrimitive.Root shouldScaleBackground={shouldScaleBackground} {...props} />\r\n);\r\nDrawer.displayName = 'Drawer';\r\n\r\nconst DrawerTrigger = DrawerPrimitive.Trigger;\r\n\r\nconst DrawerPortal = DrawerPrimitive.Portal;\r\n\r\nconst DrawerClose = DrawerPrimitive.Close;\r\n\r\nconst DrawerOverlay = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DrawerPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn('fixed inset-0 z-50 bg-black/80', className)}\r\n    {...props}\r\n  />\r\n));\r\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName;\r\n\r\nconst DrawerContent = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <DrawerPortal>\r\n    <DrawerOverlay />\r\n    <DrawerPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        'fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background',\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\r\n      {children}\r\n    </DrawerPrimitive.Content>\r\n  </DrawerPortal>\r\n));\r\nDrawerContent.displayName = 'DrawerContent';\r\n\r\nconst DrawerHeader = ({ className, ...props }) => (\r\n  <div className={cn('grid gap-1.5 p-4 text-center sm:text-left', className)} {...props} />\r\n);\r\nDrawerHeader.displayName = 'DrawerHeader';\r\n\r\nconst DrawerFooter = ({ className, ...props }) => (\r\n  <div className={cn('mt-auto flex flex-col gap-2 p-4', className)} {...props} />\r\n);\r\nDrawerFooter.displayName = 'DrawerFooter';\r\n\r\nconst DrawerTitle = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DrawerPrimitive.Title\r\n    ref={ref}\r\n    className={cn('text-lg font-semibold leading-none tracking-tight', className)}\r\n    {...props}\r\n  />\r\n));\r\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName;\r\n\r\nconst DrawerDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DrawerPrimitive.Description\r\n    ref={ref}\r\n    className={cn('text-sm text-muted-foreground', className)}\r\n    {...props}\r\n  />\r\n));\r\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName;\r\n\r\nexport {\r\n  Drawer,\r\n  DrawerPortal,\r\n  DrawerOverlay,\r\n  DrawerTrigger,\r\n  DrawerClose,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerFooter,\r\n  DrawerTitle,\r\n  DrawerDescription,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\dropdown-menu.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 20,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\r\nimport { Check, ChevronRight, Circle } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst DropdownMenu = DropdownMenuPrimitive.Root;\r\n\r\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\r\n\r\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group;\r\n\r\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\r\n\r\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub;\r\n\r\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\r\n\r\nconst DropdownMenuSubTrigger = React.forwardRef(({ className, inset, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      'flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\r\n      inset && 'pl-8',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRight className=\"ml-auto\" />\r\n  </DropdownMenuPrimitive.SubTrigger>\r\n));\r\nDropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName;\r\n\r\nconst DropdownMenuSubContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName;\r\n\r\nconst DropdownMenuContent = React.forwardRef(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Portal>\r\n    <DropdownMenuPrimitive.Content\r\n      ref={ref}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md',\r\n        'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </DropdownMenuPrimitive.Portal>\r\n));\r\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\r\n\r\nconst DropdownMenuItem = React.forwardRef(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      'relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0',\r\n      inset && 'pl-8',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\r\n\r\nconst DropdownMenuCheckboxItem = React.forwardRef(\r\n  ({ className, children, checked, ...props }, ref) => (\r\n    <DropdownMenuPrimitive.CheckboxItem\r\n      ref={ref}\r\n      className={cn(\r\n        'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n        className\r\n      )}\r\n      checked={checked}\r\n      {...props}\r\n    >\r\n      <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n        <DropdownMenuPrimitive.ItemIndicator>\r\n          <Check className=\"h-4 w-4\" />\r\n        </DropdownMenuPrimitive.ItemIndicator>\r\n      </span>\r\n      {children}\r\n    </DropdownMenuPrimitive.CheckboxItem>\r\n  )\r\n);\r\nDropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName;\r\n\r\nconst DropdownMenuRadioItem = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <Circle className=\"h-2 w-2 fill-current\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.RadioItem>\r\n));\r\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;\r\n\r\nconst DropdownMenuLabel = React.forwardRef(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Label\r\n    ref={ref}\r\n    className={cn('px-2 py-1.5 text-sm font-semibold', inset && 'pl-8', className)}\r\n    {...props}\r\n  />\r\n));\r\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\r\n\r\nconst DropdownMenuSeparator = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Separator\r\n    ref={ref}\r\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\r\n    {...props}\r\n  />\r\n));\r\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\r\n\r\nconst DropdownMenuShortcut = ({ className, ...props }) => {\r\n  return (\r\n    <span className={cn('ml-auto text-xs tracking-widest opacity-60', className)} {...props} />\r\n  );\r\n};\r\nDropdownMenuShortcut.displayName = 'DropdownMenuShortcut';\r\n\r\nexport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuRadioItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuShortcut,\r\n  DropdownMenuGroup,\r\n  DropdownMenuPortal,\r\n  DropdownMenuSub,\r\n  DropdownMenuSubContent,\r\n  DropdownMenuSubTrigger,\r\n  DropdownMenuRadioGroup,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\form.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 15,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\nimport * as React from 'react';\r\nimport { Slot } from '@radix-ui/react-slot';\r\nimport { Controller, FormProvider, useFormContext } from 'react-hook-form';\r\n\r\nimport { cn } from '@/lib/utils';\r\nimport { Label } from '@/components/ui/label';\r\n\r\nconst Form = FormProvider;\r\n\r\nconst FormFieldContext = React.createContext({});\r\n\r\nconst FormField = ({ ...props }) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  );\r\n};\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext);\r\n  const itemContext = React.useContext(FormItemContext);\r\n  const { getFieldState, formState } = useFormContext();\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState);\r\n\r\n  if (!fieldContext) {\r\n    throw new Error('useFormField should be used within <FormField>');\r\n  }\r\n\r\n  const { id } = itemContext;\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  };\r\n};\r\n\r\nconst FormItemContext = React.createContext({});\r\n\r\nconst FormItem = React.forwardRef(({ className, ...props }, ref) => {\r\n  const id = React.useId();\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn('space-y-2', className)} {...props} />\r\n    </FormItemContext.Provider>\r\n  );\r\n});\r\nFormItem.displayName = 'FormItem';\r\n\r\nconst FormLabel = React.forwardRef(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField();\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && 'text-destructive', className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nFormLabel.displayName = 'FormLabel';\r\n\r\nconst FormControl = React.forwardRef(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField();\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={!error ? `${formDescriptionId}` : `${formDescriptionId} ${formMessageId}`}\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nFormControl.displayName = 'FormControl';\r\n\r\nconst FormDescription = React.forwardRef(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField();\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn('text-[0.8rem] text-muted-foreground', className)}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nFormDescription.displayName = 'FormDescription';\r\n\r\nconst FormMessage = React.forwardRef(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField();\r\n  const body = error ? String(error?.message) : children;\r\n\r\n  if (!body) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn('text-[0.8rem] font-medium text-destructive', className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  );\r\n});\r\nFormMessage.displayName = 'FormMessage';\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\hover-card.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 14,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\n\r\nimport * as React from 'react';\r\nimport * as HoverCardPrimitive from '@radix-ui/react-hover-card';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst HoverCard = HoverCardPrimitive.Root;\r\n\r\nconst HoverCardTrigger = HoverCardPrimitive.Trigger;\r\n\r\nconst HoverCardContent = React.forwardRef(\r\n  ({ className, align = 'center', sideOffset = 4, ...props }, ref) => (\r\n    <HoverCardPrimitive.Content\r\n      ref={ref}\r\n      align={align}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        'z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n);\r\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName;\r\n\r\nexport { HoverCard, HoverCardTrigger, HoverCardContent };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\input-otp.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 8,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport { OTPInput, OTPInputContext } from 'input-otp';\r\nimport { Minus } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst InputOTP = React.forwardRef(({ className, containerClassName, ...props }, ref) => (\r\n  <OTPInput\r\n    ref={ref}\r\n    containerClassName={cn(\r\n      'flex items-center gap-2 has-[:disabled]:opacity-50',\r\n      containerClassName\r\n    )}\r\n    className={cn('disabled:cursor-not-allowed', className)}\r\n    {...props}\r\n  />\r\n));\r\nInputOTP.displayName = 'InputOTP';\r\n\r\nconst InputOTPGroup = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn('flex items-center', className)} {...props} />\r\n));\r\nInputOTPGroup.displayName = 'InputOTPGroup';\r\n\r\nconst InputOTPSlot = React.forwardRef(({ index, className, ...props }, ref) => {\r\n  const inputOTPContext = React.useContext(OTPInputContext);\r\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index];\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\r\n        'relative flex h-9 w-9 items-center justify-center border-y border-r border-input text-sm shadow-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md',\r\n        isActive && 'z-10 ring-1 ring-ring',\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {char}\r\n      {hasFakeCaret && (\r\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\r\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\nInputOTPSlot.displayName = 'InputOTPSlot';\r\n\r\nconst InputOTPSeparator = React.forwardRef(({ ...props }, ref) => (\r\n  <div ref={ref} role=\"separator\" {...props}>\r\n    <Minus />\r\n  </div>\r\n));\r\nInputOTPSeparator.displayName = 'InputOTPSeparator';\r\n\r\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\input.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 7,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\r\n  return (\r\n    <input\r\n      type={type}\r\n      className={cn(\r\n        'flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nInput.displayName = 'Input';\r\n\r\nexport { Input };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\label.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 12,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as LabelPrimitive from '@radix-ui/react-label';\r\nimport { cva } from 'class-variance-authority';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst labelVariants = cva(\r\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\r\n);\r\n\r\nconst Label = React.forwardRef(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />\r\n));\r\nLabel.displayName = LabelPrimitive.Root.displayName;\r\n\r\nexport { Label };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\menubar.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 10,
        "column": 10,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\n\r\nimport * as React from 'react';\r\nimport * as MenubarPrimitive from '@radix-ui/react-menubar';\r\nimport { Check, ChevronRight, Circle } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nfunction MenubarMenu({ ...props }) {\r\n  return <MenubarPrimitive.Menu {...props} />;\r\n}\r\n\r\nfunction MenubarGroup({ ...props }) {\r\n  return <MenubarPrimitive.Group {...props} />;\r\n}\r\n\r\nfunction MenubarPortal({ ...props }) {\r\n  return <MenubarPrimitive.Portal {...props} />;\r\n}\r\n\r\nfunction MenubarRadioGroup({ ...props }) {\r\n  return <MenubarPrimitive.RadioGroup {...props} />;\r\n}\r\n\r\nfunction MenubarSub({ ...props }) {\r\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />;\r\n}\r\n\r\nconst Menubar = React.forwardRef(({ className, ...props }, ref) => (\r\n  <MenubarPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      'flex h-9 items-center space-x-1 rounded-md border bg-background p-1 shadow-sm',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nMenubar.displayName = MenubarPrimitive.Root.displayName;\r\n\r\nconst MenubarTrigger = React.forwardRef(({ className, ...props }, ref) => (\r\n  <MenubarPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      'flex cursor-default select-none items-center rounded-sm px-3 py-1 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName;\r\n\r\nconst MenubarSubTrigger = React.forwardRef(({ className, inset, children, ...props }, ref) => (\r\n  <MenubarPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      'flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\r\n      inset && 'pl-8',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\r\n  </MenubarPrimitive.SubTrigger>\r\n));\r\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName;\r\n\r\nconst MenubarSubContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <MenubarPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName;\r\n\r\nconst MenubarContent = React.forwardRef(\r\n  ({ className, align = 'start', alignOffset = -4, sideOffset = 8, ...props }, ref) => (\r\n    <MenubarPrimitive.Portal>\r\n      <MenubarPrimitive.Content\r\n        ref={ref}\r\n        align={align}\r\n        alignOffset={alignOffset}\r\n        sideOffset={sideOffset}\r\n        className={cn(\r\n          'z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    </MenubarPrimitive.Portal>\r\n  )\r\n);\r\nMenubarContent.displayName = MenubarPrimitive.Content.displayName;\r\n\r\nconst MenubarItem = React.forwardRef(({ className, inset, ...props }, ref) => (\r\n  <MenubarPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      'relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n      inset && 'pl-8',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nMenubarItem.displayName = MenubarPrimitive.Item.displayName;\r\n\r\nconst MenubarCheckboxItem = React.forwardRef(({ className, children, checked, ...props }, ref) => (\r\n  <MenubarPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n      className\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <MenubarPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </MenubarPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </MenubarPrimitive.CheckboxItem>\r\n));\r\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName;\r\n\r\nconst MenubarRadioItem = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <MenubarPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <MenubarPrimitive.ItemIndicator>\r\n        <Circle className=\"h-4 w-4 fill-current\" />\r\n      </MenubarPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </MenubarPrimitive.RadioItem>\r\n));\r\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName;\r\n\r\nconst MenubarLabel = React.forwardRef(({ className, inset, ...props }, ref) => (\r\n  <MenubarPrimitive.Label\r\n    ref={ref}\r\n    className={cn('px-2 py-1.5 text-sm font-semibold', inset && 'pl-8', className)}\r\n    {...props}\r\n  />\r\n));\r\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName;\r\n\r\nconst MenubarSeparator = React.forwardRef(({ className, ...props }, ref) => (\r\n  <MenubarPrimitive.Separator\r\n    ref={ref}\r\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\r\n    {...props}\r\n  />\r\n));\r\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName;\r\n\r\nconst MenubarShortcut = ({ className, ...props }) => {\r\n  return (\r\n    <span\r\n      className={cn('ml-auto text-xs tracking-widest text-muted-foreground', className)}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\nMenubarShortcut.displayname = 'MenubarShortcut';\r\n\r\nexport {\r\n  Menubar,\r\n  MenubarMenu,\r\n  MenubarTrigger,\r\n  MenubarContent,\r\n  MenubarItem,\r\n  MenubarSeparator,\r\n  MenubarLabel,\r\n  MenubarCheckboxItem,\r\n  MenubarRadioGroup,\r\n  MenubarRadioItem,\r\n  MenubarPortal,\r\n  MenubarSubContent,\r\n  MenubarSubTrigger,\r\n  MenubarGroup,\r\n  MenubarSub,\r\n  MenubarShortcut,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\navigation-menu.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 9,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as NavigationMenuPrimitive from '@radix-ui/react-navigation-menu';\r\nimport { cva } from 'class-variance-authority';\r\nimport { ChevronDown } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst NavigationMenu = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.Root\r\n    ref={ref}\r\n    className={cn('relative z-10 flex max-w-max flex-1 items-center justify-center', className)}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <NavigationMenuViewport />\r\n  </NavigationMenuPrimitive.Root>\r\n));\r\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName;\r\n\r\nconst NavigationMenuList = React.forwardRef(({ className, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.List\r\n    ref={ref}\r\n    className={cn('group flex flex-1 list-none items-center justify-center space-x-1', className)}\r\n    {...props}\r\n  />\r\n));\r\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName;\r\n\r\nconst NavigationMenuItem = NavigationMenuPrimitive.Item;\r\n\r\nconst navigationMenuTriggerStyle = cva(\r\n  'group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50'\r\n);\r\n\r\nconst NavigationMenuTrigger = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(navigationMenuTriggerStyle(), 'group', className)}\r\n    {...props}\r\n  >\r\n    {children}{' '}\r\n    <ChevronDown\r\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-300 group-data-[state=open]:rotate-180\"\r\n      aria-hidden=\"true\"\r\n    />\r\n  </NavigationMenuPrimitive.Trigger>\r\n));\r\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName;\r\n\r\nconst NavigationMenuContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      'left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto ',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName;\r\n\r\nconst NavigationMenuLink = NavigationMenuPrimitive.Link;\r\n\r\nconst NavigationMenuViewport = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div className={cn('absolute left-0 top-full flex justify-center')}>\r\n    <NavigationMenuPrimitive.Viewport\r\n      className={cn(\r\n        'origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]',\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  </div>\r\n));\r\nNavigationMenuViewport.displayName = NavigationMenuPrimitive.Viewport.displayName;\r\n\r\nconst NavigationMenuIndicator = React.forwardRef(({ className, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.Indicator\r\n    ref={ref}\r\n    className={cn(\r\n      'top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\r\n  </NavigationMenuPrimitive.Indicator>\r\n));\r\nNavigationMenuIndicator.displayName = NavigationMenuPrimitive.Indicator.displayName;\r\n\r\nexport {\r\n  navigationMenuTriggerStyle,\r\n  NavigationMenu,\r\n  NavigationMenuList,\r\n  NavigationMenuItem,\r\n  NavigationMenuContent,\r\n  NavigationMenuTrigger,\r\n  NavigationMenuLink,\r\n  NavigationMenuIndicator,\r\n  NavigationMenuViewport,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\pagination.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 8,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\nimport { buttonVariants } from '@/components/ui/button';\r\n\r\nconst Pagination = ({ className, ...props }) => (\r\n  <nav\r\n    role=\"navigation\"\r\n    aria-label=\"pagination\"\r\n    className={cn('mx-auto flex w-full justify-center', className)}\r\n    {...props}\r\n  />\r\n);\r\nPagination.displayName = 'Pagination';\r\n\r\nconst PaginationContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <ul ref={ref} className={cn('flex flex-row items-center gap-1', className)} {...props} />\r\n));\r\nPaginationContent.displayName = 'PaginationContent';\r\n\r\nconst PaginationItem = React.forwardRef(({ className, ...props }, ref) => (\r\n  <li ref={ref} className={cn('', className)} {...props} />\r\n));\r\nPaginationItem.displayName = 'PaginationItem';\r\n\r\nconst PaginationLink = ({ className, isActive, size = 'icon', ...props }) => (\r\n  <a\r\n    aria-current={isActive ? 'page' : undefined}\r\n    className={cn(\r\n      buttonVariants({\r\n        variant: isActive ? 'outline' : 'ghost',\r\n        size,\r\n      }),\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\nPaginationLink.displayName = 'PaginationLink';\r\n\r\nconst PaginationPrevious = ({ className, ...props }) => (\r\n  <PaginationLink\r\n    aria-label=\"Go to previous page\"\r\n    size=\"default\"\r\n    className={cn('gap-1 pl-2.5', className)}\r\n    {...props}\r\n  >\r\n    <ChevronLeft className=\"h-4 w-4\" />\r\n    <span>Previous</span>\r\n  </PaginationLink>\r\n);\r\nPaginationPrevious.displayName = 'PaginationPrevious';\r\n\r\nconst PaginationNext = ({ className, ...props }) => (\r\n  <PaginationLink\r\n    aria-label=\"Go to next page\"\r\n    size=\"default\"\r\n    className={cn('gap-1 pr-2.5', className)}\r\n    {...props}\r\n  >\r\n    <span>Next</span>\r\n    <ChevronRight className=\"h-4 w-4\" />\r\n  </PaginationLink>\r\n);\r\nPaginationNext.displayName = 'PaginationNext';\r\n\r\nconst PaginationEllipsis = ({ className, ...props }) => (\r\n  <span\r\n    aria-hidden\r\n    className={cn('flex h-9 w-9 items-center justify-center', className)}\r\n    {...props}\r\n  >\r\n    <MoreHorizontal className=\"h-4 w-4\" />\r\n    <span className=\"sr-only\">More pages</span>\r\n  </span>\r\n);\r\nPaginationEllipsis.displayName = 'PaginationEllipsis';\r\n\r\nexport {\r\n  Pagination,\r\n  PaginationContent,\r\n  PaginationLink,\r\n  PaginationItem,\r\n  PaginationPrevious,\r\n  PaginationNext,\r\n  PaginationEllipsis,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\popover.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 14,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as PopoverPrimitive from '@radix-ui/react-popover';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Popover = PopoverPrimitive.Root;\r\n\r\nconst PopoverTrigger = PopoverPrimitive.Trigger;\r\n\r\nconst PopoverAnchor = PopoverPrimitive.Anchor;\r\n\r\nconst PopoverContent = React.forwardRef(\r\n  ({ className, align = 'center', sideOffset = 4, ...props }, ref) => (\r\n    <PopoverPrimitive.Portal>\r\n      <PopoverPrimitive.Content\r\n        ref={ref}\r\n        align={align}\r\n        sideOffset={sideOffset}\r\n        className={cn(\r\n          'z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    </PopoverPrimitive.Portal>\r\n  )\r\n);\r\nPopoverContent.displayName = PopoverPrimitive.Content.displayName;\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\progress.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 9,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\n\r\nimport * as React from 'react';\r\nimport * as ProgressPrimitive from '@radix-ui/react-progress';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Progress = React.forwardRef(({ className, value, ...props }, ref) => (\r\n  <ProgressPrimitive.Root\r\n    ref={ref}\r\n    className={cn('relative h-2 w-full overflow-hidden rounded-full bg-primary/20', className)}\r\n    {...props}\r\n  >\r\n    <ProgressPrimitive.Indicator\r\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\r\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\r\n    />\r\n  </ProgressPrimitive.Root>\r\n));\r\nProgress.displayName = ProgressPrimitive.Root.displayName;\r\n\r\nexport { Progress };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\radio-group.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 8,
        "column": 10,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as RadioGroupPrimitive from '@radix-ui/react-radio-group';\r\nimport { Circle } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst RadioGroup = React.forwardRef(({ className, ...props }, ref) => {\r\n  return <RadioGroupPrimitive.Root className={cn('grid gap-2', className)} {...props} ref={ref} />;\r\n});\r\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName;\r\n\r\nconst RadioGroupItem = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Item\r\n      ref={ref}\r\n      className={cn(\r\n        'aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50',\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\r\n        <Circle className=\"h-3.5 w-3.5 fill-primary\" />\r\n      </RadioGroupPrimitive.Indicator>\r\n    </RadioGroupPrimitive.Item>\r\n  );\r\n});\r\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName;\r\n\r\nexport { RadioGroup, RadioGroupItem };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\resizable.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 9,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\n\r\nimport { GripVertical } from 'lucide-react';\r\nimport * as ResizablePrimitive from 'react-resizable-panels';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst ResizablePanelGroup = ({ className, ...props }) => (\r\n  <ResizablePrimitive.PanelGroup\r\n    className={cn('flex h-full w-full data-[panel-group-direction=vertical]:flex-col', className)}\r\n    {...props}\r\n  />\r\n);\r\n\r\nconst ResizablePanel = ResizablePrimitive.Panel;\r\n\r\nconst ResizableHandle = ({ withHandle, className, ...props }) => (\r\n  <ResizablePrimitive.PanelResizeHandle\r\n    className={cn(\r\n      'relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {withHandle && (\r\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\r\n        <GripVertical className=\"h-2.5 w-2.5\" />\r\n      </div>\r\n    )}\r\n  </ResizablePrimitive.PanelResizeHandle>\r\n);\r\n\r\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\scroll-area.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 7,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as ScrollAreaPrimitive from '@radix-ui/react-scroll-area';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst ScrollArea = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn('relative overflow-hidden', className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n));\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName;\r\n\r\nconst ScrollBar = React.forwardRef(({ className, orientation = 'vertical', ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      'flex touch-none select-none transition-colors',\r\n      orientation === 'vertical' && 'h-full w-2.5 border-l border-l-transparent p-[1px]',\r\n      orientation === 'horizontal' && 'h-2.5 flex-col border-t border-t-transparent p-[1px]',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n));\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName;\r\n\r\nexport { ScrollArea, ScrollBar };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\select.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 16,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\n\r\nimport * as React from 'react';\r\nimport * as SelectPrimitive from '@radix-ui/react-select';\r\nimport { Check, ChevronDown, ChevronUp } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Select = SelectPrimitive.Root;\r\n\r\nconst SelectGroup = SelectPrimitive.Group;\r\n\r\nconst SelectValue = SelectPrimitive.Value;\r\n\r\nconst SelectTrigger = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      'flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n));\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\r\n\r\nconst SelectScrollUpButton = React.forwardRef(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn('flex cursor-default items-center justify-center py-1', className)}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n));\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\r\n\r\nconst SelectScrollDownButton = React.forwardRef(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn('flex cursor-default items-center justify-center py-1', className)}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n));\r\nSelectScrollDownButton.displayName = SelectPrimitive.ScrollDownButton.displayName;\r\n\r\nconst SelectContent = React.forwardRef(\r\n  ({ className, children, position = 'popper', ...props }, ref) => (\r\n    <SelectPrimitive.Portal>\r\n      <SelectPrimitive.Content\r\n        ref={ref}\r\n        className={cn(\r\n          'relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n          position === 'popper' &&\r\n            'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\r\n          className\r\n        )}\r\n        position={position}\r\n        {...props}\r\n      >\r\n        <SelectScrollUpButton />\r\n        <SelectPrimitive.Viewport\r\n          className={cn(\r\n            'p-1',\r\n            position === 'popper' &&\r\n              'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]'\r\n          )}\r\n        >\r\n          {children}\r\n        </SelectPrimitive.Viewport>\r\n        <SelectScrollDownButton />\r\n      </SelectPrimitive.Content>\r\n    </SelectPrimitive.Portal>\r\n  )\r\n);\r\nSelectContent.displayName = SelectPrimitive.Content.displayName;\r\n\r\nconst SelectLabel = React.forwardRef(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn('px-2 py-1.5 text-sm font-semibold', className)}\r\n    {...props}\r\n  />\r\n));\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\r\n\r\nconst SelectItem = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n));\r\nSelectItem.displayName = SelectPrimitive.Item.displayName;\r\n\r\nconst SelectSeparator = React.forwardRef(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\r\n    {...props}\r\n  />\r\n));\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\separator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 8,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as SeparatorPrimitive from '@radix-ui/react-separator';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Separator = React.forwardRef(\r\n  ({ className, orientation = 'horizontal', decorative = true, ...props }, ref) => (\r\n    <SeparatorPrimitive.Root\r\n      ref={ref}\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        'shrink-0 bg-border',\r\n        orientation === 'horizontal' ? 'h-[1px] w-full' : 'h-full w-[1px]',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n);\r\nSeparator.displayName = SeparatorPrimitive.Root.displayName;\r\n\r\nexport { Separator };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\sheet.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 18,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\nimport * as React from 'react';\r\nimport * as SheetPrimitive from '@radix-ui/react-dialog';\r\nimport { cva } from 'class-variance-authority';\r\nimport { X } from 'lucide-react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Sheet = SheetPrimitive.Root;\r\n\r\nconst SheetTrigger = SheetPrimitive.Trigger;\r\n\r\nconst SheetClose = SheetPrimitive.Close;\r\n\r\nconst SheetPortal = SheetPrimitive.Portal;\r\n\r\nconst SheetOverlay = React.forwardRef(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Overlay\r\n    className={cn(\r\n      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n));\r\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName;\r\n\r\nconst sheetVariants = cva(\r\n  'fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out',\r\n  {\r\n    variants: {\r\n      side: {\r\n        top: 'inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top',\r\n        bottom:\r\n          'inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom',\r\n        left: 'inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm',\r\n        right:\r\n          'inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      side: 'right',\r\n    },\r\n  }\r\n);\r\n\r\nconst SheetContent = React.forwardRef(({ side = 'right', className, children, ...props }, ref) => (\r\n  <SheetPortal>\r\n    <SheetOverlay />\r\n    <SheetPrimitive.Content ref={ref} className={cn(sheetVariants({ side }), className)} {...props}>\r\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </SheetPrimitive.Close>\r\n      {children}\r\n    </SheetPrimitive.Content>\r\n  </SheetPortal>\r\n));\r\nSheetContent.displayName = SheetPrimitive.Content.displayName;\r\n\r\nconst SheetHeader = ({ className, ...props }) => (\r\n  <div className={cn('flex flex-col space-y-2 text-center sm:text-left', className)} {...props} />\r\n);\r\nSheetHeader.displayName = 'SheetHeader';\r\n\r\nconst SheetFooter = ({ className, ...props }) => (\r\n  <div\r\n    className={cn('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', className)}\r\n    {...props}\r\n  />\r\n);\r\nSheetFooter.displayName = 'SheetFooter';\r\n\r\nconst SheetTitle = React.forwardRef(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Title\r\n    ref={ref}\r\n    className={cn('text-lg font-semibold text-foreground', className)}\r\n    {...props}\r\n  />\r\n));\r\nSheetTitle.displayName = SheetPrimitive.Title.displayName;\r\n\r\nconst SheetDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Description\r\n    ref={ref}\r\n    className={cn('text-sm text-muted-foreground', className)}\r\n    {...props}\r\n  />\r\n));\r\nSheetDescription.displayName = SheetPrimitive.Description.displayName;\r\n\r\nexport {\r\n  Sheet,\r\n  SheetPortal,\r\n  SheetOverlay,\r\n  SheetTrigger,\r\n  SheetClose,\r\n  SheetContent,\r\n  SheetHeader,\r\n  SheetFooter,\r\n  SheetTitle,\r\n  SheetDescription,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\sidebar.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 104,
        "column": 7,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport { Slot } from '@radix-ui/react-slot';\r\nimport { cva } from 'class-variance-authority';\r\nimport { PanelLeft } from 'lucide-react';\r\n\r\nimport { useIsMobile } from '@/hooks/use-mobile';\r\nimport { cn } from '@/lib/utils';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { Sheet, SheetContent } from '@/components/ui/sheet';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\n\r\nconst SIDEBAR_COOKIE_NAME = 'sidebar_state';\r\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7;\r\nconst SIDEBAR_WIDTH = '16rem';\r\nconst SIDEBAR_WIDTH_MOBILE = '18rem';\r\nconst SIDEBAR_WIDTH_ICON = '3rem';\r\nconst SIDEBAR_KEYBOARD_SHORTCUT = 'b';\r\n\r\nconst SidebarContext = React.createContext(null);\r\n\r\nfunction useSidebar() {\r\n  const context = React.useContext(SidebarContext);\r\n  if (!context) {\r\n    throw new Error('useSidebar must be used within a SidebarProvider.');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nconst SidebarProvider = React.forwardRef(\r\n  (\r\n    {\r\n      defaultOpen = true,\r\n      open: openProp,\r\n      onOpenChange: setOpenProp,\r\n      className,\r\n      style,\r\n      children,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const isMobile = useIsMobile();\r\n    const [openMobile, setOpenMobile] = React.useState(false);\r\n\r\n    // This is the internal state of the sidebar.\r\n    // We use openProp and setOpenProp for control from outside the component.\r\n    const [_open, _setOpen] = React.useState(defaultOpen);\r\n    const open = openProp ?? _open;\r\n    const setOpen = React.useCallback(\r\n      (value) => {\r\n        const openState = typeof value === 'function' ? value(open) : value;\r\n        if (setOpenProp) {\r\n          setOpenProp(openState);\r\n        } else {\r\n          _setOpen(openState);\r\n        }\r\n\r\n        // This sets the cookie to keep the sidebar state.\r\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;\r\n      },\r\n      [setOpenProp, open]\r\n    );\r\n\r\n    // Helper to toggle the sidebar.\r\n    const toggleSidebar = React.useCallback(() => {\r\n      return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open);\r\n    }, [isMobile, setOpen, setOpenMobile]);\r\n\r\n    // Adds a keyboard shortcut to toggle the sidebar.\r\n    React.useEffect(() => {\r\n      const handleKeyDown = (event) => {\r\n        if (event.key === SIDEBAR_KEYBOARD_SHORTCUT && (event.metaKey || event.ctrlKey)) {\r\n          event.preventDefault();\r\n          toggleSidebar();\r\n        }\r\n      };\r\n\r\n      window.addEventListener('keydown', handleKeyDown);\r\n      return () => window.removeEventListener('keydown', handleKeyDown);\r\n    }, [toggleSidebar]);\r\n\r\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\r\n    // This makes it easier to style the sidebar with Tailwind classes.\r\n    const state = open ? 'expanded' : 'collapsed';\r\n\r\n    const contextValue = React.useMemo(\r\n      () => ({\r\n        state,\r\n        open,\r\n        setOpen,\r\n        isMobile,\r\n        openMobile,\r\n        setOpenMobile,\r\n        toggleSidebar,\r\n      }),\r\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\r\n    );\r\n\r\n    return (\r\n      <SidebarContext.Provider value={contextValue}>\r\n        <TooltipProvider delayDuration={0}>\r\n          <div\r\n            style={{\r\n              '--sidebar-width': SIDEBAR_WIDTH,\r\n              '--sidebar-width-icon': SIDEBAR_WIDTH_ICON,\r\n              ...style,\r\n            }}\r\n            className={cn(\r\n              'group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar',\r\n              className\r\n            )}\r\n            ref={ref}\r\n            {...props}\r\n          >\r\n            {children}\r\n          </div>\r\n        </TooltipProvider>\r\n      </SidebarContext.Provider>\r\n    );\r\n  }\r\n);\r\nSidebarProvider.displayName = 'SidebarProvider';\r\n\r\nconst Sidebar = React.forwardRef(\r\n  (\r\n    {\r\n      side = 'left',\r\n      variant = 'sidebar',\r\n      collapsible = 'offcanvas',\r\n      className,\r\n      children,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar();\r\n\r\n    if (collapsible === 'none') {\r\n      return (\r\n        <div\r\n          className={cn(\r\n            'flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground',\r\n            className\r\n          )}\r\n          ref={ref}\r\n          {...props}\r\n        >\r\n          {children}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (isMobile) {\r\n      return (\r\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\r\n          <SheetContent\r\n            data-sidebar=\"sidebar\"\r\n            data-mobile=\"true\"\r\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\r\n            style={{\r\n              '--sidebar-width': SIDEBAR_WIDTH_MOBILE,\r\n            }}\r\n            side={side}\r\n          >\r\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\r\n          </SheetContent>\r\n        </Sheet>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className=\"group peer hidden text-sidebar-foreground md:block\"\r\n        data-state={state}\r\n        data-collapsible={state === 'collapsed' ? collapsible : ''}\r\n        data-variant={variant}\r\n        data-side={side}\r\n      >\r\n        {/* This is what handles the sidebar gap on desktop */}\r\n        <div\r\n          className={cn(\r\n            'relative h-svh w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear',\r\n            'group-data-[collapsible=offcanvas]:w-0',\r\n            'group-data-[side=right]:rotate-180',\r\n            variant === 'floating' || variant === 'inset'\r\n              ? 'group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]'\r\n              : 'group-data-[collapsible=icon]:w-[--sidebar-width-icon]'\r\n          )}\r\n        />\r\n        <div\r\n          className={cn(\r\n            'fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex',\r\n            side === 'left'\r\n              ? 'left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]'\r\n              : 'right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]',\r\n            // Adjust the padding for floating and inset variants.\r\n            variant === 'floating' || variant === 'inset'\r\n              ? 'p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]'\r\n              : 'group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l',\r\n            className\r\n          )}\r\n          {...props}\r\n        >\r\n          <div\r\n            data-sidebar=\"sidebar\"\r\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\nSidebar.displayName = 'Sidebar';\r\n\r\nconst SidebarTrigger = React.forwardRef(({ className, onClick, ...props }, ref) => {\r\n  const { toggleSidebar } = useSidebar();\r\n\r\n  return (\r\n    <Button\r\n      ref={ref}\r\n      data-sidebar=\"trigger\"\r\n      variant=\"ghost\"\r\n      size=\"icon\"\r\n      className={cn('h-7 w-7', className)}\r\n      onClick={(event) => {\r\n        onClick?.(event);\r\n        toggleSidebar();\r\n      }}\r\n      {...props}\r\n    >\r\n      <PanelLeft />\r\n      <span className=\"sr-only\">Toggle Sidebar</span>\r\n    </Button>\r\n  );\r\n});\r\nSidebarTrigger.displayName = 'SidebarTrigger';\r\n\r\nconst SidebarRail = React.forwardRef(({ className, ...props }, ref) => {\r\n  const { toggleSidebar } = useSidebar();\r\n\r\n  return (\r\n    <button\r\n      ref={ref}\r\n      data-sidebar=\"rail\"\r\n      aria-label=\"Toggle Sidebar\"\r\n      tabIndex={-1}\r\n      onClick={toggleSidebar}\r\n      title=\"Toggle Sidebar\"\r\n      className={cn(\r\n        'absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex',\r\n        '[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize',\r\n        '[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize',\r\n        'group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar',\r\n        '[[data-side=left][data-collapsible=offcanvas]_&]:-right-2',\r\n        '[[data-side=right][data-collapsible=offcanvas]_&]:-left-2',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarRail.displayName = 'SidebarRail';\r\n\r\nconst SidebarInset = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <main\r\n      ref={ref}\r\n      className={cn(\r\n        'relative flex min-h-svh flex-1 flex-col bg-background',\r\n        'peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarInset.displayName = 'SidebarInset';\r\n\r\nconst SidebarInput = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <Input\r\n      ref={ref}\r\n      data-sidebar=\"input\"\r\n      className={cn(\r\n        'h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarInput.displayName = 'SidebarInput';\r\n\r\nconst SidebarHeader = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"header\"\r\n      className={cn('flex flex-col gap-2 p-2', className)}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarHeader.displayName = 'SidebarHeader';\r\n\r\nconst SidebarFooter = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"footer\"\r\n      className={cn('flex flex-col gap-2 p-2', className)}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarFooter.displayName = 'SidebarFooter';\r\n\r\nconst SidebarSeparator = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <Separator\r\n      ref={ref}\r\n      data-sidebar=\"separator\"\r\n      className={cn('mx-2 w-auto bg-sidebar-border', className)}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarSeparator.displayName = 'SidebarSeparator';\r\n\r\nconst SidebarContent = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"content\"\r\n      className={cn(\r\n        'flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarContent.displayName = 'SidebarContent';\r\n\r\nconst SidebarGroup = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"group\"\r\n      className={cn('relative flex w-full min-w-0 flex-col p-2', className)}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarGroup.displayName = 'SidebarGroup';\r\n\r\nconst SidebarGroupLabel = React.forwardRef(({ className, asChild = false, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : 'div';\r\n\r\n  return (\r\n    <Comp\r\n      ref={ref}\r\n      data-sidebar=\"group-label\"\r\n      className={cn(\r\n        'flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0',\r\n        'group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarGroupLabel.displayName = 'SidebarGroupLabel';\r\n\r\nconst SidebarGroupAction = React.forwardRef(({ className, asChild = false, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : 'button';\r\n\r\n  return (\r\n    <Comp\r\n      ref={ref}\r\n      data-sidebar=\"group-action\"\r\n      className={cn(\r\n        'absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0',\r\n        // Increases the hit area of the button on mobile.\r\n        'after:absolute after:-inset-2 after:md:hidden',\r\n        'group-data-[collapsible=icon]:hidden',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nSidebarGroupAction.displayName = 'SidebarGroupAction';\r\n\r\nconst SidebarGroupContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    data-sidebar=\"group-content\"\r\n    className={cn('w-full text-sm', className)}\r\n    {...props}\r\n  />\r\n));\r\nSidebarGroupContent.displayName = 'SidebarGroupContent';\r\n\r\nconst SidebarMenu = React.forwardRef(({ className, ...props }, ref) => (\r\n  <ul\r\n    ref={ref}\r\n    data-sidebar=\"menu\"\r\n    className={cn('flex w-full min-w-0 flex-col gap-1', className)}\r\n    {...props}\r\n  />\r\n));\r\nSidebarMenu.displayName = 'SidebarMenu';\r\n\r\nconst SidebarMenuItem = React.forwardRef(({ className, ...props }, ref) => (\r\n  <li\r\n    ref={ref}\r\n    data-sidebar=\"menu-item\"\r\n    className={cn('group/menu-item relative', className)}\r\n    {...props}\r\n  />\r\n));\r\nSidebarMenuItem.displayName = 'SidebarMenuItem';\r\n\r\nconst sidebarMenuButtonVariants = cva(\r\n  'peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'hover:bg-sidebar-accent hover:text-sidebar-accent-foreground',\r\n        outline:\r\n          'bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]',\r\n      },\r\n      size: {\r\n        default: 'h-8 text-sm',\r\n        sm: 'h-7 text-xs',\r\n        lg: 'h-12 text-sm group-data-[collapsible=icon]:!p-0',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n      size: 'default',\r\n    },\r\n  }\r\n);\r\n\r\nconst SidebarMenuButton = React.forwardRef(\r\n  (\r\n    {\r\n      asChild = false,\r\n      isActive = false,\r\n      variant = 'default',\r\n      size = 'default',\r\n      tooltip,\r\n      className,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const Comp = asChild ? Slot : 'button';\r\n    const { isMobile, state } = useSidebar();\r\n\r\n    const button = (\r\n      <Comp\r\n        ref={ref}\r\n        data-sidebar=\"menu-button\"\r\n        data-size={size}\r\n        data-active={isActive}\r\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\r\n        {...props}\r\n      />\r\n    );\r\n\r\n    if (!tooltip) {\r\n      return button;\r\n    }\r\n\r\n    if (typeof tooltip === 'string') {\r\n      tooltip = {\r\n        children: tooltip,\r\n      };\r\n    }\r\n\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\r\n        <TooltipContent\r\n          side=\"right\"\r\n          align=\"center\"\r\n          hidden={state !== 'collapsed' || isMobile}\r\n          {...tooltip}\r\n        />\r\n      </Tooltip>\r\n    );\r\n  }\r\n);\r\nSidebarMenuButton.displayName = 'SidebarMenuButton';\r\n\r\nconst SidebarMenuAction = React.forwardRef(\r\n  ({ className, asChild = false, showOnHover = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : 'button';\r\n\r\n    return (\r\n      <Comp\r\n        ref={ref}\r\n        data-sidebar=\"menu-action\"\r\n        className={cn(\r\n          'absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0',\r\n          // Increases the hit area of the button on mobile.\r\n          'after:absolute after:-inset-2 after:md:hidden',\r\n          'peer-data-[size=sm]/menu-button:top-1',\r\n          'peer-data-[size=default]/menu-button:top-1.5',\r\n          'peer-data-[size=lg]/menu-button:top-2.5',\r\n          'group-data-[collapsible=icon]:hidden',\r\n          showOnHover &&\r\n            'group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0',\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nSidebarMenuAction.displayName = 'SidebarMenuAction';\r\n\r\nconst SidebarMenuBadge = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    data-sidebar=\"menu-badge\"\r\n    className={cn(\r\n      'pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground',\r\n      'peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground',\r\n      'peer-data-[size=sm]/menu-button:top-1',\r\n      'peer-data-[size=default]/menu-button:top-1.5',\r\n      'peer-data-[size=lg]/menu-button:top-2.5',\r\n      'group-data-[collapsible=icon]:hidden',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nSidebarMenuBadge.displayName = 'SidebarMenuBadge';\r\n\r\nconst SidebarMenuSkeleton = React.forwardRef(({ className, showIcon = false, ...props }, ref) => {\r\n  // Random width between 50 to 90%.\r\n  const width = React.useMemo(() => {\r\n    return `${Math.floor(Math.random() * 40) + 50}%`;\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"menu-skeleton\"\r\n      className={cn('flex h-8 items-center gap-2 rounded-md px-2', className)}\r\n      {...props}\r\n    >\r\n      {showIcon && <Skeleton className=\"size-4 rounded-md\" data-sidebar=\"menu-skeleton-icon\" />}\r\n      <Skeleton\r\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\r\n        data-sidebar=\"menu-skeleton-text\"\r\n        style={{\r\n          '--skeleton-width': width,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n});\r\nSidebarMenuSkeleton.displayName = 'SidebarMenuSkeleton';\r\n\r\nconst SidebarMenuSub = React.forwardRef(({ className, ...props }, ref) => (\r\n  <ul\r\n    ref={ref}\r\n    data-sidebar=\"menu-sub\"\r\n    className={cn(\r\n      'mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5',\r\n      'group-data-[collapsible=icon]:hidden',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nSidebarMenuSub.displayName = 'SidebarMenuSub';\r\n\r\nconst SidebarMenuSubItem = React.forwardRef(({ ...props }, ref) => <li ref={ref} {...props} />);\r\nSidebarMenuSubItem.displayName = 'SidebarMenuSubItem';\r\n\r\nconst SidebarMenuSubButton = React.forwardRef(\r\n  ({ asChild = false, size = 'md', isActive, className, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : 'a';\r\n\r\n    return (\r\n      <Comp\r\n        ref={ref}\r\n        data-sidebar=\"menu-sub-button\"\r\n        data-size={size}\r\n        data-active={isActive}\r\n        className={cn(\r\n          'flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground',\r\n          'data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground',\r\n          size === 'sm' && 'text-xs',\r\n          size === 'md' && 'text-sm',\r\n          'group-data-[collapsible=icon]:hidden',\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nSidebarMenuSubButton.displayName = 'SidebarMenuSubButton';\r\n\r\nexport {\r\n  Sidebar,\r\n  SidebarContent,\r\n  SidebarFooter,\r\n  SidebarGroup,\r\n  SidebarGroupAction,\r\n  SidebarGroupContent,\r\n  SidebarGroupLabel,\r\n  SidebarHeader,\r\n  SidebarInput,\r\n  SidebarInset,\r\n  SidebarMenu,\r\n  SidebarMenuAction,\r\n  SidebarMenuBadge,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n  SidebarMenuSkeleton,\r\n  SidebarMenuSub,\r\n  SidebarMenuSubButton,\r\n  SidebarMenuSubItem,\r\n  SidebarProvider,\r\n  SidebarRail,\r\n  SidebarSeparator,\r\n  SidebarTrigger,\r\n  useSidebar,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\skeleton.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 4,
        "column": 10,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import { cn } from '@/lib/utils';\r\n\r\nfunction Skeleton({ className, ...props }) {\r\n  return <div className={cn('animate-pulse rounded-md bg-primary/10', className)} {...props} />;\r\n}\r\n\r\nexport { Skeleton };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\slider.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 7,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as SliderPrimitive from '@radix-ui/react-slider';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Slider = React.forwardRef(({ className, ...props }, ref) => (\r\n  <SliderPrimitive.Root\r\n    ref={ref}\r\n    className={cn('relative flex w-full touch-none select-none items-center', className)}\r\n    {...props}\r\n  >\r\n    <SliderPrimitive.Track className=\"relative h-1.5 w-full grow overflow-hidden rounded-full bg-primary/20\">\r\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\r\n    </SliderPrimitive.Track>\r\n    <SliderPrimitive.Thumb className=\"block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\" />\r\n  </SliderPrimitive.Root>\r\n));\r\nSlider.displayName = SliderPrimitive.Root.displayName;\r\n\r\nexport { Slider };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\sonner.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 9,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\nimport { useTheme } from 'next-themes';\r\nimport { Toaster as Sonner } from 'sonner';\r\n\r\nconst Toaster = ({ ...props }) => {\r\n  const { theme = 'system' } = useTheme();\r\n\r\n  return (\r\n    <Sonner\r\n      theme={theme}\r\n      className=\"toaster group\"\r\n      toastOptions={{\r\n        classNames: {\r\n          toast:\r\n            'group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg',\r\n          description: 'group-[.toast]:text-muted-foreground',\r\n          actionButton: 'group-[.toast]:bg-primary group-[.toast]:text-primary-foreground',\r\n          cancelButton: 'group-[.toast]:bg-muted group-[.toast]:text-muted-foreground',\r\n        },\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport { Toaster };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\switch.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 7,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as SwitchPrimitives from '@radix-ui/react-switch';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Switch = React.forwardRef(({ className, ...props }, ref) => (\r\n  <SwitchPrimitives.Root\r\n    className={cn(\r\n      'peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input',\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  >\r\n    <SwitchPrimitives.Thumb\r\n      className={cn(\r\n        'pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0'\r\n      )}\r\n    />\r\n  </SwitchPrimitives.Root>\r\n));\r\nSwitch.displayName = SwitchPrimitives.Root.displayName;\r\n\r\nexport { Switch };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\table.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 6,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Table = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table ref={ref} className={cn('w-full caption-bottom text-sm', className)} {...props} />\r\n  </div>\r\n));\r\nTable.displayName = 'Table';\r\n\r\nconst TableHeader = React.forwardRef(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn('[&_tr]:border-b', className)} {...props} />\r\n));\r\nTableHeader.displayName = 'TableHeader';\r\n\r\nconst TableBody = React.forwardRef(({ className, ...props }, ref) => (\r\n  <tbody ref={ref} className={cn('[&_tr:last-child]:border-0', className)} {...props} />\r\n));\r\nTableBody.displayName = 'TableBody';\r\n\r\nconst TableFooter = React.forwardRef(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn('border-t bg-muted/50 font-medium [&>tr]:last:border-b-0', className)}\r\n    {...props}\r\n  />\r\n));\r\nTableFooter.displayName = 'TableFooter';\r\n\r\nconst TableRow = React.forwardRef(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      'border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nTableRow.displayName = 'TableRow';\r\n\r\nconst TableHead = React.forwardRef(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      'h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nTableHead.displayName = 'TableHead';\r\n\r\nconst TableCell = React.forwardRef(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\r\n      'p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nTableCell.displayName = 'TableCell';\r\n\r\nconst TableCaption = React.forwardRef(({ className, ...props }, ref) => (\r\n  <caption ref={ref} className={cn('mt-4 text-sm text-muted-foreground', className)} {...props} />\r\n));\r\nTableCaption.displayName = 'TableCaption';\r\n\r\nexport { Table, TableHeader, TableBody, TableFooter, TableHead, TableRow, TableCell, TableCaption };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\tabs.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 9,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Tabs = TabsPrimitive.Root;\r\n\r\nconst TabsList = React.forwardRef(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      'inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nTabsList.displayName = TabsPrimitive.List.displayName;\r\n\r\nconst TabsTrigger = React.forwardRef(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      'inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\r\n\r\nconst TabsContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      'mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nTabsContent.displayName = TabsPrimitive.Content.displayName;\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\textarea.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 7,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst Textarea = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <textarea\r\n      className={cn(\r\n        'flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nTextarea.displayName = 'Textarea';\r\n\r\nexport { Textarea };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\toast.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 7,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport { cva } from 'class-variance-authority';\r\nimport { X } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst ToastProvider = React.forwardRef(({ ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className=\"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\"\r\n    {...props}\r\n  />\r\n));\r\nToastProvider.displayName = 'ToastProvider';\r\n\r\nconst ToastViewport = React.forwardRef(({ ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className=\"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\"\r\n    {...props}\r\n  />\r\n));\r\nToastViewport.displayName = 'ToastViewport';\r\n\r\nconst toastVariants = cva(\r\n  'group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'border bg-background text-foreground',\r\n        destructive:\r\n          'destructive group border-destructive bg-destructive text-destructive-foreground',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n    },\r\n  }\r\n);\r\n\r\nconst Toast = React.forwardRef(({ className, variant, ...props }, ref) => {\r\n  return <div ref={ref} className={cn(toastVariants({ variant }), className)} {...props} />;\r\n});\r\nToast.displayName = 'Toast';\r\n\r\nconst ToastAction = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      'inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nToastAction.displayName = 'ToastAction';\r\n\r\nconst ToastClose = React.forwardRef(({ className, ...props }, ref) => (\r\n  <button\r\n    ref={ref}\r\n    className={cn(\r\n      'absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600',\r\n      className\r\n    )}\r\n    toast-close=\"\"\r\n    {...props}\r\n  >\r\n    <X className=\"h-4 w-4\" />\r\n  </button>\r\n));\r\nToastClose.displayName = 'ToastClose';\r\n\r\nconst ToastTitle = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn('text-sm font-semibold', className)} {...props} />\r\n));\r\nToastTitle.displayName = 'ToastTitle';\r\n\r\nconst ToastDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn('text-sm opacity-90', className)} {...props} />\r\n));\r\nToastDescription.displayName = 'ToastDescription';\r\n\r\nexport {\r\n  ToastProvider,\r\n  ToastViewport,\r\n  Toast,\r\n  ToastTitle,\r\n  ToastDescription,\r\n  ToastClose,\r\n  ToastAction,\r\n};\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\toaster.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 15,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import { useToast } from '@/components/ui/use-toast';\r\nimport {\r\n  Toast,\r\n  ToastClose,\r\n  ToastDescription,\r\n  ToastProvider,\r\n  ToastTitle,\r\n  ToastViewport,\r\n} from '@/components/ui/toast';\r\n\r\nexport function Toaster() {\r\n  const { toasts } = useToast();\r\n\r\n  return (\r\n    <ToastProvider>\r\n      {toasts.map(function ({ id, title, description, action, ...props }) {\r\n        return (\r\n          <Toast key={id} {...props}>\r\n            <div className=\"grid gap-1\">\r\n              {title && <ToastTitle>{title}</ToastTitle>}\r\n              {description && <ToastDescription>{description}</ToastDescription>}\r\n            </div>\r\n            {action}\r\n            <ToastClose />\r\n          </Toast>\r\n        );\r\n      })}\r\n      <ToastViewport />\r\n    </ToastProvider>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\toggle-group.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 14,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\nimport * as React from 'react';\r\nimport * as ToggleGroupPrimitive from '@radix-ui/react-toggle-group';\r\n\r\nimport { cn } from '@/lib/utils';\r\nimport { toggleVariants } from '@/components/ui/toggle';\r\n\r\nconst ToggleGroupContext = React.createContext({\r\n  size: 'default',\r\n  variant: 'default',\r\n});\r\n\r\nconst ToggleGroup = React.forwardRef(({ className, variant, size, children, ...props }, ref) => (\r\n  <ToggleGroupPrimitive.Root\r\n    ref={ref}\r\n    className={cn('flex items-center justify-center gap-1', className)}\r\n    {...props}\r\n  >\r\n    <ToggleGroupContext.Provider value={{ variant, size }}>{children}</ToggleGroupContext.Provider>\r\n  </ToggleGroupPrimitive.Root>\r\n));\r\n\r\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName;\r\n\r\nconst ToggleGroupItem = React.forwardRef(\r\n  ({ className, children, variant, size, ...props }, ref) => {\r\n    const context = React.useContext(ToggleGroupContext);\r\n\r\n    return (\r\n      <ToggleGroupPrimitive.Item\r\n        ref={ref}\r\n        className={cn(\r\n          toggleVariants({\r\n            variant: context.variant || variant,\r\n            size: context.size || size,\r\n          }),\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </ToggleGroupPrimitive.Item>\r\n    );\r\n  }\r\n);\r\n\r\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName;\r\n\r\nexport { ToggleGroup, ToggleGroupItem };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\toggle.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 30,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import * as React from 'react';\r\nimport * as TogglePrimitive from '@radix-ui/react-toggle';\r\nimport { cva } from 'class-variance-authority';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst toggleVariants = cva(\r\n  'inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'bg-transparent',\r\n        outline:\r\n          'border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground',\r\n      },\r\n      size: {\r\n        default: 'h-9 px-2 min-w-9',\r\n        sm: 'h-8 px-1.5 min-w-8',\r\n        lg: 'h-10 px-2.5 min-w-10',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n      size: 'default',\r\n    },\r\n  }\r\n);\r\n\r\nconst Toggle = React.forwardRef(({ className, variant, size, ...props }, ref) => (\r\n  <TogglePrimitive.Root\r\n    ref={ref}\r\n    className={cn(toggleVariants({ variant, size, className }))}\r\n    {...props}\r\n  />\r\n));\r\n\r\nToggle.displayName = TogglePrimitive.Root.displayName;\r\n\r\nexport { Toggle, toggleVariants };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\tooltip.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 15,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "'use client';\r\n\r\nimport * as React from 'react';\r\nimport * as TooltipPrimitive from '@radix-ui/react-tooltip';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst TooltipProvider = TooltipPrimitive.Provider;\r\n\r\nconst Tooltip = TooltipPrimitive.Root;\r\n\r\nconst TooltipTrigger = TooltipPrimitive.Trigger;\r\n\r\nconst TooltipContent = React.forwardRef(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <TooltipPrimitive.Portal>\r\n    <TooltipPrimitive.Content\r\n      ref={ref}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        'z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </TooltipPrimitive.Portal>\r\n));\r\nTooltipContent.displayName = TooltipPrimitive.Content.displayName;\r\n\r\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\components\\ui\\use-toast.jsx",
    "messages": [
      {
        "ruleId": "no-unused-vars",
        "severity": 1,
        "message": "'createContext' is defined but never used. Allowed unused vars must match /^_/u.",
        "line": 2,
        "column": 31,
        "nodeType": "Identifier",
        "messageId": "unusedVar",
        "endLine": 2,
        "endColumn": 44
      },
      {
        "ruleId": "no-unused-vars",
        "severity": 1,
        "message": "'useContext' is defined but never used. Allowed unused vars must match /^_/u.",
        "line": 2,
        "column": 46,
        "nodeType": "Identifier",
        "messageId": "unusedVar",
        "endLine": 2,
        "endColumn": 56
      },
      {
        "ruleId": "no-undef",
        "severity": 2,
        "message": "'setTimeout' is not defined.",
        "line": 28,
        "column": 19,
        "nodeType": "Identifier",
        "messageId": "undef",
        "endLine": 28,
        "endColumn": 29
      },
      {
        "ruleId": "no-unused-vars",
        "severity": 1,
        "message": "'clearFromRemoveQueue' is assigned a value but never used. Allowed unused vars must match /^_/u.",
        "line": 39,
        "column": 7,
        "nodeType": "Identifier",
        "messageId": "unusedVar",
        "endLine": 39,
        "endColumn": 27
      },
      {
        "ruleId": "no-undef",
        "severity": 2,
        "message": "'clearTimeout' is not defined.",
        "line": 42,
        "column": 5,
        "nodeType": "Identifier",
        "messageId": "undef",
        "endLine": 42,
        "endColumn": 17
      }
    ],
    "suppressedMessages": [],
    "errorCount": 2,
    "fatalErrorCount": 0,
    "warningCount": 3,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "// Inspired by react-hot-toast library\r\nimport { useState, useEffect, createContext, useContext } from 'react';\r\n\r\nconst TOAST_LIMIT = 20;\r\nconst TOAST_REMOVE_DELAY = 1000000;\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: 'ADD_TOAST',\r\n  UPDATE_TOAST: 'UPDATE_TOAST',\r\n  DISMISS_TOAST: 'DISMISS_TOAST',\r\n  REMOVE_TOAST: 'REMOVE_TOAST',\r\n};\r\n\r\nlet count = 0;\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_VALUE;\r\n  return count.toString();\r\n}\r\n\r\nconst toastTimeouts = new Map();\r\n\r\nconst addToRemoveQueue = (toastId) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return;\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId);\r\n    dispatch({\r\n      type: actionTypes.REMOVE_TOAST,\r\n      toastId,\r\n    });\r\n  }, TOAST_REMOVE_DELAY);\r\n\r\n  toastTimeouts.set(toastId, timeout);\r\n};\r\n\r\nconst clearFromRemoveQueue = (toastId) => {\r\n  const timeout = toastTimeouts.get(toastId);\r\n  if (timeout) {\r\n    clearTimeout(timeout);\r\n    toastTimeouts.delete(toastId);\r\n  }\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TOAST:\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      };\r\n\r\n    case actionTypes.UPDATE_TOAST:\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) => (t.id === action.toast.id ? { ...t, ...action.toast } : t)),\r\n      };\r\n\r\n    case actionTypes.DISMISS_TOAST: {\r\n      const { toastId } = action;\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId);\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id);\r\n        });\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t\r\n        ),\r\n      };\r\n    }\r\n    case actionTypes.REMOVE_TOAST:\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      };\r\n  }\r\n};\r\n\r\nconst listeners = [];\r\n\r\nlet memoryState = { toasts: [] };\r\n\r\nfunction dispatch(action) {\r\n  memoryState = reducer(memoryState, action);\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState);\r\n  });\r\n}\r\n\r\nfunction toast({ ...props }) {\r\n  const id = genId();\r\n\r\n  const update = (props) =>\r\n    dispatch({\r\n      type: actionTypes.UPDATE_TOAST,\r\n      toast: { ...props, id },\r\n    });\r\n\r\n  const dismiss = () => dispatch({ type: actionTypes.DISMISS_TOAST, toastId: id });\r\n\r\n  dispatch({\r\n    type: actionTypes.ADD_TOAST,\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss();\r\n      },\r\n    },\r\n  });\r\n\r\n  return {\r\n    id,\r\n    dismiss,\r\n    update,\r\n  };\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = useState(memoryState);\r\n\r\n  useEffect(() => {\r\n    listeners.push(setState);\r\n    return () => {\r\n      const index = listeners.indexOf(setState);\r\n      if (index > -1) {\r\n        listeners.splice(index, 1);\r\n      }\r\n    };\r\n  }, [state]);\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId) => dispatch({ type: actionTypes.DISMISS_TOAST, toastId }),\r\n  };\r\n}\r\n\r\nexport { useToast, toast };\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\eslint.config.js",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\hooks\\use-mobile.jsx",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\lib\\utils.js",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\main.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 6,
        "column": 61,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from '@/App.jsx';\r\nimport '@/index.css';\r\n\r\nReactDOM.createRoot(document.getElementById('root')).render(<App />);\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\About.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 17,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\n\r\nexport default function About() {\r\n  const origin =\r\n    typeof window !== 'undefined' ? window.location.origin : 'https://www.calcmymoney.co.uk';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      { '@type': 'ListItem', position: 2, name: 'About', item: `${origin}/About` },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200\">\r\n          <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-12 text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\r\n              About Calculate My Money\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto mt-3\">\r\n              Who we are and how we build accurate, transparent UK financial calculators.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-10 space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Mission</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"p-6\">\r\n              <p>\r\n                Our mission is simple: to make UK money calculations clear, accurate, and accessible\r\n                for everyone. Whether youÔÇÖre checking your take-home pay, planning a mortgage, or\r\n                projecting savings, we want you to have fast, reliable tools that reflect the latest\r\n                rules.\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Who We Are</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"p-6\">\r\n              <p>\r\n                We are a team of financial experts and IT specialists who are passionate about\r\n                building transparent, trustworthy, and user-friendly tools. Each calculator is\r\n                designed with a balance of financial expertise and technical precision to ensure\r\n                accuracy, clarity, and ease of use.\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Our Approach</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"p-6\">\r\n              <ul className=\"list-disc list-inside space-y-2 text-gray-700\">\r\n                <li>\r\n                  <strong>Accuracy first</strong> ÔÇô always based on HMRC and Bank of England sources\r\n                </li>\r\n                <li>\r\n                  <strong>Regular updates</strong> ÔÇô new thresholds integrated promptly\r\n                </li>\r\n                <li>\r\n                  <strong>Transparency</strong> ÔÇô clear assumptions and disclaimers on every\r\n                  calculator\r\n                </li>\r\n                <li>\r\n                  <strong>Accessibility</strong> ÔÇô free and mobile-friendly for everyone in the UK\r\n                </li>\r\n              </ul>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Contact</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"p-6\">\r\n              <p>For questions, corrections, or feedback, please email:</p>\r\n              <p className=\"mt-2\">\r\n                ­ƒôº{' '}\r\n                <a\r\n                  href=\"mailto:support@calcmymoney.co.uk\"\r\n                  className=\"text-blue-600 hover:underline\"\r\n                >\r\n                  support@calcmymoney.co.uk\r\n                </a>\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\AmortizationCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 120,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { PoundSterling, Calculator, Percent, Calendar, FileSpreadsheet } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\nconst amortizationFAQs = [\r\n  {\r\n    question: 'What is a loan amortization schedule?',\r\n    answer:\r\n      'An amortization schedule is a complete table of periodic loan payments, showing the amount of principal and the amount of interest that comprise each payment until the loan is paid off at the end of its term.',\r\n  },\r\n  {\r\n    question: 'How does amortization work?',\r\n    answer:\r\n      'With each payment, a portion goes towards paying off the interest accrued for that period, and the remaining portion goes towards reducing the principal loan balance. Early in the loan term, a larger portion of your payment goes to interest. As the loan matures, more of your payment goes towards the principal.',\r\n  },\r\n  {\r\n    question: 'Why is an amortization schedule useful?',\r\n    answer:\r\n      \"It's useful for understanding how your loan works, seeing the total interest you'll pay, and identifying opportunities to save money. For example, by making extra payments, you can see how much faster you'll pay off the loan and how much interest you'll save.\",\r\n  },\r\n];\r\n\r\nconst generateAmortizationSchedule = (loanAmount, monthlyRate, term) => {\r\n  const schedule = [];\r\n  let balance = loanAmount;\r\n  let totalInterest = 0;\r\n  const monthlyPayment = (loanAmount * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -term));\r\n\r\n  for (let month = 1; month <= term; month++) {\r\n    const interestPayment = balance * monthlyRate;\r\n    totalInterest += interestPayment;\r\n    const principalPayment = monthlyPayment - interestPayment;\r\n    balance -= principalPayment;\r\n    schedule.push({\r\n      month,\r\n      'Remaining Balance': balance > 0 ? balance : 0,\r\n      'Cumulative Interest': totalInterest,\r\n      'Principal Paid': principalPayment,\r\n    });\r\n  }\r\n  return schedule;\r\n};\r\n\r\nexport default function AmortizationCalculator() {\r\n  const [loanAmount, setLoanAmount] = useState('250000');\r\n  const [interestRate, setInterestRate] = useState('5');\r\n  const [loanTerm, setLoanTerm] = useState('30'); // in years\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const amount = Number(loanAmount) || 0;\r\n    const rate = Number(interestRate) / 100;\r\n    const termYears = Number(loanTerm) || 0;\r\n    const termMonths = termYears * 12;\r\n\r\n    if (amount <= 0 || rate <= 0 || termMonths <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const monthlyRate = rate / 12;\r\n    const monthlyPayment = (amount * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -termMonths));\r\n    const totalRepayment = monthlyPayment * termMonths;\r\n    const totalInterest = totalRepayment - amount;\r\n    const schedule = generateAmortizationSchedule(amount, monthlyRate, termMonths);\r\n\r\n    const newResults = {\r\n      monthlyPayment,\r\n      totalRepayment,\r\n      totalInterest,\r\n      schedule,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Loan Amount', `┬ú${amount.toFixed(2)}`],\r\n      ['Interest Rate', `${interestRate}%`],\r\n      ['Loan Term', `${termYears} years`],\r\n      ['Monthly Payment', `┬ú${monthlyPayment.toFixed(2)}`],\r\n      ['Total Interest Paid', `┬ú${totalInterest.toFixed(2)}`],\r\n      ['---'],\r\n      ['Month', 'Principal Paid', 'Cumulative Interest', 'Remaining Balance'],\r\n      ...schedule.map((row) => [\r\n        row.month,\r\n        `┬ú${row['Principal Paid'].toFixed(2)}`,\r\n        `┬ú${row['Cumulative Interest'].toFixed(2)}`,\r\n        `┬ú${row['Remaining Balance'].toFixed(2)}`,\r\n      ]),\r\n    ];\r\n    setCsvData(csvExportData);\r\n  }, [loanAmount, interestRate, loanTerm]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Loan Amortization Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Generate a complete payment schedule for your mortgage or loan. See how much of each\r\n              payment goes to principal vs. interest.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Loan Amortization Schedule</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Loan Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label htmlFor=\"loanAmount\" className=\"flex justify-between\">\r\n                    <span>Loan Amount</span>\r\n                    <span className=\"font-semibold\">┬ú{Number(loanAmount).toLocaleString()}</span>\r\n                  </Label>\r\n                  <Slider\r\n                    value={[Number(loanAmount)]}\r\n                    onValueChange={(value) => setLoanAmount(String(value[0]))}\r\n                    max={1000000}\r\n                    step={10000}\r\n                    className=\"mt-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"interestRate\" className=\"flex justify-between\">\r\n                    <span>Annual Interest Rate</span>\r\n                    <span className=\"font-semibold\">{Number(interestRate).toFixed(2)}%</span>\r\n                  </Label>\r\n                  <Slider\r\n                    value={[Number(interestRate)]}\r\n                    onValueChange={(value) => setInterestRate(String(value[0]))}\r\n                    max={20}\r\n                    step={0.1}\r\n                    className=\"mt-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"loanTerm\" className=\"flex justify-between\">\r\n                    <span>Loan Term (Years)</span>\r\n                    <span className=\"font-semibold\">{loanTerm} years</span>\r\n                  </Label>\r\n                  <Slider\r\n                    value={[Number(loanTerm)]}\r\n                    onValueChange={(value) => setLoanTerm(String(value[0]))}\r\n                    max={40}\r\n                    step={1}\r\n                    className=\"mt-2\"\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your Amortization Schedule</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"amortization-schedule\"\r\n                    title=\"Amortization Schedule\"\r\n                  />\r\n                </div>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Loan Summary</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"grid md:grid-cols-3 gap-4 text-center\">\r\n                    <div>\r\n                      <p className=\"text-sm text-gray-500\">Monthly Payment</p>\r\n                      <p className=\"text-2xl font-bold\">┬ú{results.monthlyPayment.toFixed(2)}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-sm text-gray-500\">Total Interest Paid</p>\r\n                      <p className=\"text-2xl font-bold text-red-600\">\r\n                        ┬ú\r\n                        {results.totalInterest.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 0,\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-sm text-gray-500\">Total Repayment</p>\r\n                      <p className=\"text-2xl font-bold\">\r\n                        ┬ú\r\n                        {results.totalRepayment.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 0,\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Principal vs. Interest</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                      <AreaChart data={results.schedule}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis\r\n                          dataKey=\"month\"\r\n                          label={{ value: 'Month', position: 'insideBottom', offset: -5 }}\r\n                        />\r\n                        <YAxis tickFormatter={(value) => `┬ú${(value / 1000).toFixed(0)}k`} />\r\n                        <Tooltip\r\n                          formatter={(value) =>\r\n                            `┬ú${Number(value).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n                          }\r\n                        />\r\n                        <Legend />\r\n                        <Area\r\n                          type=\"monotone\"\r\n                          dataKey=\"Remaining Balance\"\r\n                          stackId=\"1\"\r\n                          stroke=\"#3b82f6\"\r\n                          fill=\"#3b82f6\"\r\n                        />\r\n                        <Area\r\n                          type=\"monotone\"\r\n                          dataKey=\"Cumulative Interest\"\r\n                          stackId=\"2\"\r\n                          stroke=\"#ef4444\"\r\n                          fill=\"#ef4444\"\r\n                        />\r\n                      </AreaChart>\r\n                    </ResponsiveContainer>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <FileSpreadsheet className=\"w-5 h-5\" />\r\n                      Full Payment Schedule\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"max-h-96 overflow-y-auto\">\r\n                    <table className=\"w-full text-sm text-left\">\r\n                      <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 sticky top-0\">\r\n                        <tr>\r\n                          <th className=\"px-4 py-2\">Month</th>\r\n                          <th className=\"px-4 py-2\">Interest</th>\r\n                          <th className=\"px-4 py-2\">Principal</th>\r\n                          <th className=\"px-4 py-2\">Balance</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {results.schedule.map((row) => (\r\n                          <tr key={row.month} className=\"bg-white border-b hover:bg-gray-50\">\r\n                            <td className=\"px-4 py-2\">{row.month}</td>\r\n                            <td className=\"px-4 py-2 text-red-600\">\r\n                              ┬ú\r\n                              {(\r\n                                row['Cumulative Interest'] -\r\n                                (results.schedule[row.month - 2]?.['Cumulative Interest'] || 0)\r\n                              ).toFixed(2)}\r\n                            </td>\r\n                            <td className=\"px-4 py-2 text-green-600\">\r\n                              ┬ú{row['Principal Paid'].toFixed(2)}\r\n                            </td>\r\n                            <td className=\"px-4 py-2 font-medium\">\r\n                              ┬ú{row['Remaining Balance'].toFixed(2)}\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Generate your loan schedule</h3>\r\n                  <p>Enter your loan details to see the full breakdown.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={amortizationFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\AnnuityCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 71,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { PoundSterling, Calculator, TrendingUp, Calendar, Percent } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst annuityFAQs = [\r\n  {\r\n    question: 'What is an annuity?',\r\n    answer:\r\n      'An annuity is a financial product, typically sold by insurance companies, that you purchase with a lump sum (often from your pension pot). In return, it provides you with a guaranteed regular income for a set period or for the rest of your life.',\r\n  },\r\n  {\r\n    question: \"What's the difference between a lifetime and fixed-term annuity?\",\r\n    answer:\r\n      \"A lifetime annuity pays out for the rest of your life, providing certainty that you won't outlive your savings. A fixed-term annuity pays out for a specific number of years, after which you may receive a lump sum. This calculator models a fixed-term annuity payout.\",\r\n  },\r\n  {\r\n    question: 'How are annuity rates determined?',\r\n    answer:\r\n      'Annuity rates are influenced by several factors, including your age, your health, the size of your pension pot, prevailing interest rates (including government bond yields), and the type of annuity you choose (e.g., whether it increases with inflation or provides for a spouse after your death).',\r\n  },\r\n  {\r\n    question: 'A Note on Trustworthiness',\r\n    answer:\r\n      'This calculator uses standard financial formulas to estimate annuity payouts. The results are for illustrative purposes only. The actual annuity rate you are offered will depend on the provider and market conditions at the time of purchase. For precise quotes and financial advice, please consult a regulated financial advisor and compare offerings from multiple providers.',\r\n  },\r\n];\r\n\r\nexport default function AnnuityCalculator() {\r\n  const [annuityPot, setAnnuityPot] = useState('');\r\n  const [interestRate, setInterestRate] = useState('5');\r\n  const [annuityTerm, setAnnuityTerm] = useState('20');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const pot = Number(annuityPot) || 0;\r\n    const rate = Number(interestRate) / 100;\r\n    const term = Number(annuityTerm) || 0;\r\n\r\n    if (pot <= 0 || rate <= 0 || term <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true); // Indicate that a calculation attempt was made, even if invalid\r\n      return;\r\n    }\r\n\r\n    const monthlyRate = rate / 12;\r\n    const numberOfPayments = term * 12;\r\n\r\n    // Formula for Present Value of an Ordinary Annuity, solved for Payment (PMT)\r\n    const monthlyPayout = pot / ((1 - Math.pow(1 + monthlyRate, -numberOfPayments)) / monthlyRate);\r\n    const totalPayout = monthlyPayout * numberOfPayments;\r\n    const totalInterest = totalPayout - pot;\r\n\r\n    setResults({\r\n      monthlyPayout,\r\n      annualPayout: monthlyPayout * 12,\r\n      totalPayout,\r\n      totalInterest,\r\n    });\r\n    setHasCalculated(true);\r\n  }, [annuityPot, interestRate, annuityTerm]);\r\n\r\n  // Removed: useEffect for auto-calculation\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Annuity Calculator UK\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Estimate the regular income you could receive from your pension pot with an annuity.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid lg:grid-cols-5 gap-8\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Annuity Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label htmlFor=\"annuityPot\">Annuity Pot (┬ú)</Label>\r\n                  <div className=\"relative mt-1\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"annuityPot\"\r\n                      type=\"number\"\r\n                      value={annuityPot}\r\n                      onChange={(e) => setAnnuityPot(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 100000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"interestRate\">Estimated Annual Rate (%)</Label>\r\n                  <div className=\"flex items-center gap-4 mt-1\">\r\n                    <Slider\r\n                      id=\"interestRate\"\r\n                      value={[parseFloat(interestRate)]}\r\n                      onValueChange={([val]) => setInterestRate(val.toString())}\r\n                      max={10}\r\n                      step={0.1}\r\n                      className=\"flex-1\"\r\n                    />\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={interestRate}\r\n                      onChange={(e) => setInterestRate(e.target.value)}\r\n                      className=\"w-24 text-center\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"annuityTerm\">Annuity Term (Years)</Label>\r\n                  <div className=\"flex items-center gap-4 mt-1\">\r\n                    <Slider\r\n                      id=\"annuityTerm\"\r\n                      value={[parseFloat(annuityTerm)]}\r\n                      onValueChange={([val]) => setAnnuityTerm(val.toString())}\r\n                      max={40}\r\n                      step={1}\r\n                      className=\"flex-1\"\r\n                    />\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={annuityTerm}\r\n                      onChange={(e) => setAnnuityTerm(e.target.value)}\r\n                      className=\"w-24 text-center\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3\">\r\n            {hasCalculated && results ? (\r\n              <div className=\"space-y-6\">\r\n                <Card className=\"bg-blue-50 border-blue-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-blue-900\">Estimated Annual Income</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center\">\r\n                    <p className=\"text-5xl font-bold text-blue-900\">\r\n                      ┬ú{results.annualPayout.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                    </p>\r\n                    <p className=\"text-sm text-blue-700 mt-1\">per year</p>\r\n                  </CardContent>\r\n                </Card>\r\n                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                  <Card>\r\n                    <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\r\n                      <CardTitle className=\"text-sm font-medium\">Monthly Payout</CardTitle>\r\n                      <Calendar className=\"w-4 h-4 text-gray-500\" />\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"text-2xl font-bold\">\r\n                        ┬ú\r\n                        {results.monthlyPayout.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\r\n                      <CardTitle className=\"text-sm font-medium\">Total Payout</CardTitle>\r\n                      <TrendingUp className=\"w-4 h-4 text-gray-500\" />\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"text-2xl font-bold\">\r\n                        ┬ú{results.totalPayout.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n                <div className=\"text-sm text-gray-600 p-4 bg-gray-50 rounded-lg\">\r\n                  Based on a pot of ┬ú{Number(annuityPot).toLocaleString()} and an estimated rate of{' '}\r\n                  {interestRate}%, you could receive ┬ú\r\n                  {results.annualPayout.toLocaleString('en-GB', { maximumFractionDigits: 0 })} per\r\n                  year for {annuityTerm} years. The total interest portion of this payout would be ┬ú\r\n                  {results.totalInterest.toLocaleString('en-GB', { maximumFractionDigits: 0 })}.\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <TrendingUp className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Estimate your annuity income</h3>\r\n                  <p className=\"text-gray-500\">Enter your pot details to get started.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={annuityFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\BRRRRCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 217,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport {\r\n  PoundSterling,\r\n  Percent,\r\n  Calculator,\r\n  Home,\r\n  Wrench,\r\n  Repeat,\r\n  Banknote,\r\n  TrendingUp,\r\n  AlertCircle,\r\n  Info,\r\n} from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\nimport {\r\n  Accordion,\r\n  AccordionContent,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n} from '@/components/ui/accordion';\r\n\r\nconst brrrCalculatorJsonLd = {\r\n  '@context': 'https://schema.org',\r\n  '@type': 'WebApplication',\r\n  name: 'UK Property Investment Calculator - BRRRR & Flip Strategy 2025/26',\r\n  applicationCategory: 'FinanceApplication',\r\n  operatingSystem: 'Web Browser',\r\n  description:\r\n    'Free UK property investment calculator for BRRRR and flip strategies. Calculate rental yields, refinance returns, and property flip profits with accurate UK rates for 2025/26.',\r\n  offers: {\r\n    '@type': 'Offer',\r\n    price: '0',\r\n    priceCurrency: 'GBP',\r\n  },\r\n  featureList: [\r\n    'Property flip profit calculation',\r\n    'BRRRR strategy analysis',\r\n    'Rental yield calculation',\r\n    '70% rule checking',\r\n    'Cash-on-cash return analysis',\r\n    'Capital efficiency tracking',\r\n  ],\r\n};\r\n\r\nexport default function BRRRRCalculator() {\r\n  // Core Flip Inputs\r\n  const [purchasePrice, setPurchasePrice] = useState('');\r\n  const [closingCosts, setClosingCosts] = useState('');\r\n  const [rehabCosts, setRehabCosts] = useState('');\r\n  const [arv, setArv] = useState('');\r\n  const [sellingCosts, setSellingCosts] = useState('');\r\n\r\n  // Optional Rental/BRRRR inputs\r\n  const [includeRental, setIncludeRental] = useState(false);\r\n  const [monthlyRent, setMonthlyRent] = useState('');\r\n  const [monthlyExpenses, setMonthlyExpenses] = useState('');\r\n  const [refinanceLTV, setRefinanceLTV] = useState('75');\r\n  const [refinanceRate, setRefinanceRate] = useState('');\r\n  const [refinanceTerm, setRefinanceTerm] = useState('25');\r\n  const [refinanceClosingCosts, setRefinanceClosingCosts] = useState('');\r\n\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const pPrice = Number(purchasePrice) || 0;\r\n    const cCosts = Number(closingCosts) || 0;\r\n    const rCosts = Number(rehabCosts) || 0;\r\n    const afterRepairValue = Number(arv) || 0;\r\n    const sCosts = Number(sellingCosts) || 0;\r\n\r\n    if (pPrice <= 0 || afterRepairValue <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    // Core Flip Calculations\r\n    const totalProjectCost = pPrice + cCosts + rCosts;\r\n    const netSaleProceeds = afterRepairValue - sCosts;\r\n    const flipProfit = netSaleProceeds - totalProjectCost;\r\n    const flipROI = totalProjectCost > 0 ? (flipProfit / totalProjectCost) * 100 : 0;\r\n\r\n    // 70% Rule Check\r\n    const seventyPercentRuleMaxPrice = afterRepairValue * 0.7 - rCosts;\r\n\r\n    let brrrResults = null;\r\n\r\n    // Optional BRRRR Calculations\r\n    if (includeRental) {\r\n      const mRent = Number(monthlyRent) || 0;\r\n      const mExpenses = Number(monthlyExpenses) || 0;\r\n      const refiLTV = Number(refinanceLTV) / 100 || 0;\r\n      const refiRate = Number(refinanceRate) / 100 || 0;\r\n      const refiTerm = Number(refinanceTerm) || 0;\r\n      const refiClosingCosts = Number(refinanceClosingCosts) || 0;\r\n\r\n      // Refinance calculations\r\n      const newLoanAmount = afterRepairValue * refiLTV;\r\n      const cashOut = newLoanAmount - totalProjectCost - refiClosingCosts;\r\n      const moneyLeftInDeal = Math.max(0, totalProjectCost - newLoanAmount + refiClosingCosts);\r\n\r\n      // New mortgage payment (post-refinance)\r\n      const monthlyRefiRate = refiRate / 12;\r\n      const numPayments = refiTerm * 12;\r\n      let newMonthlyMortgage = 0;\r\n      if (monthlyRefiRate > 0 && numPayments > 0) {\r\n        newMonthlyMortgage =\r\n          (newLoanAmount * (monthlyRefiRate * Math.pow(1 + monthlyRefiRate, numPayments))) /\r\n          (Math.pow(1 + monthlyRefiRate, numPayments) - 1);\r\n      } else if (newLoanAmount > 0 && numPayments > 0) {\r\n        // Handle 0 interest rate\r\n        newMonthlyMortgage = newLoanAmount / numPayments;\r\n      }\r\n\r\n      // Cash Flow\r\n      const monthlyCashFlow = mRent - mExpenses - newMonthlyMortgage;\r\n      const annualCashFlow = monthlyCashFlow * 12;\r\n\r\n      // ROI - Fix the infinite case\r\n      let cashOnCashROI;\r\n      if (moneyLeftInDeal <= 0) {\r\n        cashOnCashROI = 'All Capital Returned';\r\n      } else {\r\n        cashOnCashROI = (annualCashFlow / moneyLeftInDeal) * 100;\r\n      }\r\n\r\n      brrrResults = {\r\n        newLoanAmount,\r\n        cashOut,\r\n        moneyLeftInDeal,\r\n        newMonthlyMortgage,\r\n        monthlyCashFlow,\r\n        annualCashFlow,\r\n        cashOnCashROI,\r\n      };\r\n    }\r\n\r\n    const newResults = {\r\n      // Flip results\r\n      totalProjectCost,\r\n      netSaleProceeds,\r\n      flipProfit,\r\n      flipROI,\r\n      seventyPercentRuleMaxPrice,\r\n      isDealGoodBy70Rule: pPrice <= seventyPercentRuleMaxPrice,\r\n      // BRRRR results (if applicable)\r\n      brrrrResults: brrrResults,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    // CSV data\r\n    const csvExportData = [\r\n      ['FLIP ANALYSIS', ''],\r\n      ['Metric', 'Value'],\r\n      ['Property Purchase Price', `┬ú${pPrice.toFixed(2)}`],\r\n      ['Purchase Closing Costs', `┬ú${cCosts.toFixed(2)}`],\r\n      ['Rehab/Repair Costs', `┬ú${rCosts.toFixed(2)}`],\r\n      ['Total Project Cost', `┬ú${newResults.totalProjectCost.toFixed(2)}`],\r\n      ['Property After Repair Value (ARV)', `┬ú${afterRepairValue.toFixed(2)}`],\r\n      ['Selling Costs', `┬ú${sCosts.toFixed(2)}`],\r\n      ['Net Sale Proceeds', `┬ú${newResults.netSaleProceeds.toFixed(2)}`],\r\n      ['Flip Profit', `┬ú${newResults.flipProfit.toFixed(2)}`],\r\n      ['Flip ROI', `${newResults.flipROI.toFixed(2)}%`],\r\n      ['70% Rule Max Price', `┬ú${newResults.seventyPercentRuleMaxPrice.toFixed(2)}`],\r\n    ];\r\n\r\n    if (includeRental && brrrResults) {\r\n      csvExportData.push(\r\n        ['', ''],\r\n        ['BRRRR ANALYSIS', ''],\r\n        ['Refinance Loan Amount', `┬ú${brrrResults.newLoanAmount.toFixed(2)}`],\r\n        ['Cash Back to You', `┬ú${brrrResults.cashOut.toFixed(2)}`],\r\n        ['Money Left in Deal', `┬ú${brrrResults.moneyLeftInDeal.toFixed(2)}`],\r\n        ['Monthly Cash Flow', `┬ú${brrrResults.monthlyCashFlow.toFixed(2)}`],\r\n        ['Annual Cash Flow', `┬ú${brrrResults.annualCashFlow.toFixed(2)}`],\r\n        [\r\n          'Cash-on-Cash ROI',\r\n          typeof brrrResults.cashOnCashROI === 'string'\r\n            ? brrrResults.cashOnCashROI\r\n            : `${brrrResults.cashOnCashROI.toFixed(2)}%`,\r\n        ]\r\n      );\r\n    }\r\n\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [\r\n    purchasePrice,\r\n    closingCosts,\r\n    rehabCosts,\r\n    arv,\r\n    sellingCosts,\r\n    includeRental,\r\n    monthlyRent,\r\n    monthlyExpenses,\r\n    refinanceLTV,\r\n    refinanceRate,\r\n    refinanceTerm,\r\n    refinanceClosingCosts,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <script\r\n        type=\"application/ld+json\"\r\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(brrrCalculatorJsonLd) }}\r\n      />\r\n\r\n      <TooltipProvider>\r\n        <div className=\"bg-white dark:bg-gray-900\">\r\n          <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n              <div className=\"text-center\">\r\n                <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n                  UK Property Investment Calculator\r\n                </h1>\r\n                <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n                  Analyse your property deal: Calculate flip profits or full BRRRR strategy returns.\r\n                  Perfect for UK property investors and developers.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n            <div className=\"print-title hidden\">Property Investment Analysis Results</div>\r\n\r\n            <div className=\"grid lg:grid-cols-3 gap-8 printable-grid-cols-1\">\r\n              <div className=\"lg:col-span-1 space-y-6 non-printable\">\r\n                {/* Core Property Deal */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <Home className=\"w-5 h-5\" /> Property Deal\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <InputGroup\r\n                      label=\"Property Purchase Price\"\r\n                      value={purchasePrice}\r\n                      onChange={setPurchasePrice}\r\n                      placeholder=\"e.g. 150000\"\r\n                    />\r\n                    <InputGroup\r\n                      label=\"Purchase Closing Costs\"\r\n                      value={closingCosts}\r\n                      onChange={setClosingCosts}\r\n                      placeholder=\"e.g. 5000\"\r\n                    />\r\n                    <InputGroup\r\n                      label=\"Rehab / Repair Costs\"\r\n                      value={rehabCosts}\r\n                      onChange={setRehabCosts}\r\n                      placeholder=\"e.g. 20000\"\r\n                    />\r\n                    <InputGroup\r\n                      label=\"Property After Repair Value (ARV)\"\r\n                      value={arv}\r\n                      onChange={setArv}\r\n                      placeholder=\"e.g. 250000\"\r\n                    />\r\n                    <InputGroup\r\n                      label=\"Selling Costs\"\r\n                      value={sellingCosts}\r\n                      onChange={setSellingCosts}\r\n                      placeholder=\"e.g. 7500\"\r\n                      tooltip=\"Estate agent fees, solicitor costs, etc.\"\r\n                    />\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Optional Rental Strategy */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <Repeat className=\"w-5 h-5\" />\r\n                      Also Analyse as Buy-to-Let?\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Switch\r\n                        id=\"include-rental\"\r\n                        checked={includeRental}\r\n                        onCheckedChange={setIncludeRental}\r\n                      />\r\n                      <Label htmlFor=\"include-rental\">Include rental & refinance analysis</Label>\r\n                    </div>\r\n\r\n                    {includeRental && (\r\n                      <>\r\n                        <div className=\"pt-4 space-y-4\">\r\n                          <InputGroup\r\n                            label=\"Monthly Rental Income\"\r\n                            value={monthlyRent}\r\n                            onChange={setMonthlyRent}\r\n                            placeholder=\"e.g. 1200\"\r\n                          />\r\n                          <InputGroup\r\n                            label=\"Monthly Property Expenses\"\r\n                            value={monthlyExpenses}\r\n                            onChange={setMonthlyExpenses}\r\n                            placeholder=\"e.g. 250\"\r\n                            tooltip=\"Excluding mortgage. Include insurance, maintenance, management fees, etc.\"\r\n                          />\r\n\r\n                          <div className=\"pt-2\">\r\n                            <h4 className=\"text-sm font-medium text-gray-700 mb-3\">\r\n                              Refinance Details\r\n                            </h4>\r\n                            <div className=\"space-y-4\">\r\n                              <InputGroup\r\n                                label=\"Refinance LTV\"\r\n                                value={refinanceLTV}\r\n                                onChange={setRefinanceLTV}\r\n                                placeholder=\"e.g. 75\"\r\n                                isPercent\r\n                              />\r\n                              <InputGroup\r\n                                label=\"New Interest Rate\"\r\n                                value={refinanceRate}\r\n                                onChange={setRefinanceRate}\r\n                                placeholder=\"e.g. 5.5\"\r\n                                isPercent\r\n                              />\r\n                              <InputGroup\r\n                                label=\"New Mortgage Term (Years)\"\r\n                                value={refinanceTerm}\r\n                                onChange={setRefinanceTerm}\r\n                                placeholder=\"e.g. 25\"\r\n                              />\r\n                              <InputGroup\r\n                                label=\"Refinance Closing Costs\"\r\n                                value={refinanceClosingCosts}\r\n                                onChange={setRefinanceClosingCosts}\r\n                                placeholder=\"e.g. 3000\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Analyse Deal\r\n                </Button>\r\n              </div>\r\n\r\n              <div className=\"lg:col-span-2 space-y-6 printable-area\">\r\n                {hasCalculated && results ? (\r\n                  <>\r\n                    <div className=\"flex justify-between items-center non-printable\">\r\n                      <h2 className=\"text-2xl font-bold text-gray-800\">Property Deal Analysis</h2>\r\n                      <ExportActions\r\n                        csvData={csvData}\r\n                        fileName=\"property-deal-analysis\"\r\n                        title=\"Property Deal Analysis\"\r\n                      />\r\n                    </div>\r\n\r\n                    {/* Flip Analysis - Primary Results */}\r\n                    <Card className=\"bg-gradient-to-r from-blue-50 to-green-50 border-blue-200\">\r\n                      <CardHeader>\r\n                        <CardTitle className=\"flex items-center gap-2\">\r\n                          <TrendingUp className=\"w-5 h-5\" /> Flip Strategy Results\r\n                        </CardTitle>\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <div className=\"grid md:grid-cols-2 gap-6\">\r\n                          <div className=\"space-y-4\">\r\n                            <DetailRow\r\n                              label=\"Total Project Cost\"\r\n                              value={results.totalProjectCost}\r\n                              isCurrency\r\n                            />\r\n                            <DetailRow\r\n                              label=\"Net Sale Proceeds\"\r\n                              value={results.netSaleProceeds}\r\n                              isCurrency\r\n                            />\r\n                            <div className=\"border-t pt-2 mt-2\">\r\n                              <DetailRow\r\n                                label=\"Flip Profit\"\r\n                                value={results.flipProfit}\r\n                                isCurrency\r\n                                isBold\r\n                                isFinal\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-center p-6 bg-white rounded-lg\">\r\n                            <p className=\"text-sm font-medium text-gray-600\">\r\n                              Return on Investment\r\n                            </p>\r\n                            <p\r\n                              className={`text-4xl font-bold mt-2 ${results.flipROI >= 0 ? 'text-green-700' : 'text-red-700'}`}\r\n                            >\r\n                              {results.flipROI.toFixed(1)}%\r\n                            </p>\r\n                            <p className=\"text-xs text-gray-500 mt-1\">\r\n                              Based on total project cost\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n\r\n                    {/* 70% Rule Analysis */}\r\n                    <Card className={results.isDealGoodBy70Rule ? 'bg-green-50' : 'bg-amber-50'}>\r\n                      <CardHeader>\r\n                        <CardTitle className=\"flex items-center gap-2\">\r\n                          <Info className=\"w-5 h-5\" /> The 70% Rule Check\r\n                        </CardTitle>\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <p className=\"text-sm mb-4\">\r\n                          A common rule of thumb for investors is to pay no more than 70% of the ARV\r\n                          minus repair costs. This helps ensure profitability.\r\n                        </p>\r\n                        <div className=\"space-y-2\">\r\n                          <DetailRow\r\n                            label=\"Max Offer Price by 70% Rule\"\r\n                            value={results.seventyPercentRuleMaxPrice}\r\n                            isCurrency\r\n                            isBold\r\n                          />\r\n                          <DetailRow\r\n                            label=\"Your Purchase Price\"\r\n                            value={Number(purchasePrice)}\r\n                            isCurrency\r\n                            isBold\r\n                          />\r\n                          <div\r\n                            className={`p-3 rounded-lg mt-4 ${results.isDealGoodBy70Rule ? 'bg-green-100 text-green-800' : 'bg-amber-100 text-amber-800'}`}\r\n                          >\r\n                            <strong>Verdict:</strong>{' '}\r\n                            {results.isDealGoodBy70Rule\r\n                              ? 'This deal meets the 70% rule. Good sign!'\r\n                              : 'This deal does not meet the 70% rule. Proceed with caution.'}\r\n                          </div>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n\r\n                    {/* BRRRR Analysis - Only if rental option is enabled */}\r\n                    {includeRental && results.brrrrResults && (\r\n                      <>\r\n                        <Card className=\"bg-gradient-to-r from-purple-50 to-blue-50 border-purple-200\">\r\n                          <CardHeader>\r\n                            <CardTitle className=\"flex items-center gap-2\">\r\n                              <Repeat className=\"w-5 h-5\" /> BRRRR Strategy Results\r\n                            </CardTitle>\r\n                          </CardHeader>\r\n                          <CardContent>\r\n                            <div className=\"grid md:grid-cols-3 gap-4 mb-6\">\r\n                              <MetricCard\r\n                                title=\"Cash Back to You\"\r\n                                value={Math.max(0, results.brrrrResults.cashOut)}\r\n                                isCurrency\r\n                                color=\"green\"\r\n                              />\r\n                              <MetricCard\r\n                                title=\"Money Left in Deal\"\r\n                                value={results.brrrrResults.moneyLeftInDeal}\r\n                                isCurrency\r\n                                color=\"purple\"\r\n                              />\r\n                              <MetricCard\r\n                                title=\"Monthly Cash Flow\"\r\n                                value={results.brrrrResults.monthlyCashFlow}\r\n                                isCurrency\r\n                                color=\"blue\"\r\n                              />\r\n                            </div>\r\n\r\n                            <div className=\"text-center p-6 bg-white rounded-lg\">\r\n                              <p className=\"text-lg font-medium text-gray-600\">Cash-on-Cash ROI</p>\r\n                              <p className=\"text-4xl font-bold text-purple-700 mt-2\">\r\n                                {typeof results.brrrrResults.cashOnCashROI === 'string'\r\n                                  ? results.brrrrResults.cashOnCashROI\r\n                                  : `${results.brrrrResults.cashOnCashROI.toFixed(1)}%`}\r\n                              </p>\r\n                              <p className=\"text-xs text-gray-500 mt-2\">\r\n                                {typeof results.brrrrResults.cashOnCashROI === 'string'\r\n                                  ? 'All your initial capital returned - any positive cash flow is pure profit!'\r\n                                  : 'Based on annual cash flow vs money left in the deal'}\r\n                              </p>\r\n                            </div>\r\n                          </CardContent>\r\n                        </Card>\r\n\r\n                        {/* Capital Investment Analysis */}\r\n                        <Card>\r\n                          <CardHeader>\r\n                            <CardTitle>Capital Investment Analysis</CardTitle>\r\n                          </CardHeader>\r\n                          <CardContent>\r\n                            <div className=\"space-y-4\">\r\n                              <div>\r\n                                <h4 className=\"font-semibold text-gray-700 mb-3\">\r\n                                  Initial Capital Required\r\n                                </h4>\r\n                                <div className=\"space-y-2\">\r\n                                  <DetailRow\r\n                                    label=\"Property Purchase Price\"\r\n                                    value={Number(purchasePrice)}\r\n                                    isCurrency\r\n                                  />\r\n                                  <DetailRow\r\n                                    label=\"Purchase Closing Costs\"\r\n                                    value={Number(closingCosts)}\r\n                                    isCurrency\r\n                                  />\r\n                                  <DetailRow\r\n                                    label=\"Rehab/Repair Costs\"\r\n                                    value={Number(rehabCosts)}\r\n                                    isCurrency\r\n                                  />\r\n                                  <DetailRow\r\n                                    label=\"Refinance Closing Costs\"\r\n                                    value={Number(refinanceClosingCosts)}\r\n                                    isCurrency\r\n                                  />\r\n                                  <div className=\"border-t pt-2 mt-2\">\r\n                                    <DetailRow\r\n                                      label=\"Total Initial Investment\"\r\n                                      value={\r\n                                        results.totalProjectCost + Number(refinanceClosingCosts)\r\n                                      }\r\n                                      isCurrency\r\n                                      isBold\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div>\r\n                                <h4 className=\"font-semibold text-gray-700 mb-3\">\r\n                                  Capital Recovery Through Refinance\r\n                                </h4>\r\n                                <div className=\"space-y-2\">\r\n                                  <DetailRow\r\n                                    label=\"Property After Repair Value (ARV)\"\r\n                                    value={Number(arv)}\r\n                                    isCurrency\r\n                                  />\r\n                                  <DetailRow\r\n                                    label={`Refinance LTV (${refinanceLTV}%)`}\r\n                                    value={results.brrrrResults.newLoanAmount}\r\n                                    isCurrency\r\n                                  />\r\n                                  <DetailRow\r\n                                    label=\"Less: Remaining Project Cost\"\r\n                                    value={-results.totalProjectCost}\r\n                                    isCurrency\r\n                                    isNegative\r\n                                  />\r\n                                  <DetailRow\r\n                                    label=\"Less: Refinance Closing Costs\"\r\n                                    value={-Number(refinanceClosingCosts)}\r\n                                    isCurrency\r\n                                    isNegative\r\n                                  />\r\n                                  <div className=\"border-t pt-2 mt-2\">\r\n                                    <DetailRow\r\n                                      label={\r\n                                        results.brrrrResults.cashOut >= 0\r\n                                          ? 'Cash Returned to You'\r\n                                          : 'Additional Cash Needed'\r\n                                      }\r\n                                      value={Math.abs(results.brrrrResults.cashOut)}\r\n                                      isCurrency\r\n                                      isBold\r\n                                      isFinal\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n                                <h4 className=\"font-semibold text-purple-800 mb-2\">\r\n                                  Capital Efficiency Summary\r\n                                </h4>\r\n                                <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                                  <div>\r\n                                    <p className=\"text-purple-600\">Money Left in Deal:</p>\r\n                                    <p className=\"font-bold text-purple-800\">\r\n                                      ┬ú\r\n                                      {results.brrrrResults.moneyLeftInDeal.toLocaleString(\r\n                                        'en-GB',\r\n                                        { maximumFractionDigits: 0 }\r\n                                      )}\r\n                                    </p>\r\n                                  </div>\r\n                                  <div>\r\n                                    <p className=\"text-purple-600\">Capital Efficiency:</p>\r\n                                    <p className=\"font-bold text-purple-800\">\r\n                                      {results.totalProjectCost > 0\r\n                                        ? `${(((results.totalProjectCost - results.brrrrResults.moneyLeftInDeal) / results.totalProjectCost) * 100).toFixed(1)}%`\r\n                                        : '0%'}\r\n                                    </p>\r\n                                    <p className=\"text-xs text-purple-600\">Capital recovered</p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {results.brrrrResults.cashOut > 0 && (\r\n                                <div className=\"bg-green-50 p-3 rounded-lg\">\r\n                                  <p className=\"text-sm text-green-800\">\r\n                                    ­ƒÄë <strong>Excellent!</strong> You'll receive ┬ú\r\n                                    {results.brrrrResults.cashOut.toLocaleString('en-GB', {\r\n                                      maximumFractionDigits: 0,\r\n                                    })}{' '}\r\n                                    back, which you can use for your next BRRRR deal while still\r\n                                    owning this cash-flowing property!\r\n                                  </p>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </CardContent>\r\n                        </Card>\r\n\r\n                        {/* Strategy Comparison */}\r\n                        <Card>\r\n                          <CardHeader>\r\n                            <CardTitle>Strategy Comparison</CardTitle>\r\n                          </CardHeader>\r\n                          <CardContent>\r\n                            <div className=\"grid md:grid-cols-2 gap-6\">\r\n                              <div className=\"p-4 bg-blue-50 rounded-lg\">\r\n                                <h4 className=\"font-semibold text-blue-800 mb-2\">Flip Strategy</h4>\r\n                                <p className=\"text-2xl font-bold text-blue-900\">\r\n                                  ┬ú\r\n                                  {results.flipProfit.toLocaleString('en-GB', {\r\n                                    maximumFractionDigits: 0,\r\n                                  })}\r\n                                </p>\r\n                                <p className=\"text-sm text-blue-700\">\r\n                                  One-time profit ({results.flipROI.toFixed(1)}% ROI)\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"p-4 bg-purple-50 rounded-lg\">\r\n                                <h4 className=\"font-semibold text-purple-800 mb-2\">\r\n                                  BRRRR Strategy\r\n                                </h4>\r\n                                <p className=\"text-2xl font-bold text-purple-900\">\r\n                                  ┬ú\r\n                                  {results.brrrrResults.annualCashFlow.toLocaleString('en-GB', {\r\n                                    maximumFractionDigits: 0,\r\n                                  })}\r\n                                  /year\r\n                                </p>\r\n                                <p className=\"text-sm text-purple-700\">\r\n                                  Recurring income +\r\n                                  {typeof results.brrrrResults.cashOnCashROI === 'string'\r\n                                    ? ' all capital back'\r\n                                    : ` ${results.brrrrResults.cashOnCashROI.toFixed(1)}% annual ROI`}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                          </CardContent>\r\n                        </Card>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Card className=\"lg:col-span-2 flex items-center justify-center h-[400px]\">\r\n                    <div className=\"text-center text-gray-500\">\r\n                      <Repeat className=\"w-12 h-12 mx-auto mb-4\" />\r\n                      <h3 className=\"text-xl font-semibold\">Analyse your property deal</h3>\r\n                      <p>Enter your deal numbers to see flip profits and optional BRRRR returns.</p>\r\n                    </div>\r\n                  </Card>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* FAQ Section */}\r\n          <div className=\"bg-gray-50 dark:bg-gray-800/50 py-12 non-printable\">\r\n            <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n              <FAQSection\r\n                faqs={propertyInvestmentFAQs}\r\n                title=\"Property Investment - Frequently Asked Questions\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </TooltipProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nconst InputGroup = ({ label, value, onChange, placeholder, isPercent = false, tooltip }) => (\r\n  <div className=\"space-y-2\">\r\n    <div className=\"flex items-center gap-1\">\r\n      <Label htmlFor={label}>{label}</Label>\r\n      {tooltip && (\r\n        <Tooltip>\r\n          <TooltipTrigger asChild>\r\n            <Info className=\"w-3 h-3 text-gray-500 cursor-pointer\" />\r\n          </TooltipTrigger>\r\n          <TooltipContent>\r\n            <p>{tooltip}</p>\r\n          </TooltipContent>\r\n        </Tooltip>\r\n      )}\r\n    </div>\r\n    <div className=\"relative\">\r\n      {!isPercent && (\r\n        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n      )}\r\n      <Input\r\n        id={label}\r\n        type=\"number\"\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        className={isPercent ? 'pr-10' : 'pl-10'}\r\n        placeholder={placeholder}\r\n      />\r\n      {isPercent && (\r\n        <Percent className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst MetricCard = ({ title, value, isCurrency = false, color = 'blue' }) => {\r\n  const colors = {\r\n    blue: 'bg-blue-50 text-blue-900',\r\n    green: 'bg-green-50 text-green-900',\r\n    purple: 'bg-purple-50 text-purple-900',\r\n  };\r\n  return (\r\n    <Card className={colors[color]}>\r\n      <CardContent className=\"p-6\">\r\n        <p className=\"text-sm font-medium\">{title}</p>\r\n        <p className=\"text-2xl font-bold mt-1\">\r\n          {isCurrency\r\n            ? value.toLocaleString('en-GB', {\r\n                style: 'currency',\r\n                currency: 'GBP',\r\n                maximumFractionDigits: 0,\r\n              })\r\n            : value}\r\n        </p>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst DetailRow = ({\r\n  label,\r\n  value,\r\n  isCurrency = false,\r\n  isBold = false,\r\n  isFinal = false,\r\n  isNegative = false,\r\n}) => {\r\n  const finalValue = isCurrency\r\n    ? value.toLocaleString('en-GB', {\r\n        style: 'currency',\r\n        currency: 'GBP',\r\n        maximumFractionDigits: 0,\r\n      })\r\n    : value;\r\n  const valueColor = isFinal\r\n    ? value >= 0\r\n      ? 'text-green-700'\r\n      : 'text-red-700'\r\n    : isNegative\r\n      ? 'text-red-600'\r\n      : 'text-gray-900';\r\n  return (\r\n    <div className=\"flex justify-between items-center\">\r\n      <span className={isBold ? 'font-semibold' : ''}>{label}:</span>\r\n      <span className={`${isBold ? 'font-bold' : 'font-semibold'} ${valueColor}`}>\r\n        {finalValue}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FAQSection = ({ faqs, title }) => (\r\n  <div className=\"py-8\">\r\n    <h2 className=\"text-2xl md::text-3xl font-bold text-gray-900 dark:text-gray-100 mb-6 text-center\">\r\n      {title}\r\n    </h2>\r\n    <Accordion type=\"single\" collapsible className=\"w-full\">\r\n      {faqs.map((faq, index) => (\r\n        <AccordionItem key={`faq-${index}`} value={`item-${index}`}>\r\n          <AccordionTrigger className=\"text-left\">{faq.question}</AccordionTrigger>\r\n          <AccordionContent>\r\n            <p className=\"text-gray-700 dark:text-gray-300\">{faq.answer}</p>\r\n          </AccordionContent>\r\n        </AccordionItem>\r\n      ))}\r\n    </Accordion>\r\n  </div>\r\n);\r\n\r\nconst propertyInvestmentFAQs = [\r\n  {\r\n    question: \"What's the difference between a flip and BRRRR strategy?\",\r\n    answer:\r\n      'A flip involves buying a property, renovating it, and selling it quickly for a profit. BRRRR (Buy, Rehab, Rent, Refinance, Repeat) involves buying and renovating a property, but then renting it out, refinancing to recover your capital, and using that capital for the next deal. Flipping gives immediate profit but no ongoing income, while BRRRR builds a portfolio of income-producing assets.',\r\n  },\r\n  {\r\n    question: 'What is the 70% Rule in property investment?',\r\n    answer:\r\n      \"The 70% Rule is a quick screening tool used by property investors. It states that you should pay no more than 70% of the After Repair Value (ARV) minus repair costs. For example, if a property will be worth ┬ú200,000 after repairs and needs ┬ú20,000 in repairs, you shouldn't pay more than ┬ú120,000 (70% of ┬ú200,000 = ┬ú140,000 - ┬ú20,000 repairs = ┬ú120,000).\",\r\n  },\r\n  {\r\n    question: 'How do I calculate After Repair Value (ARV)?',\r\n    answer:\r\n      'ARV is the estimated market value of a property after renovations are complete. Calculate it by researching comparable sales (comps) of similar properties in the same area that have been recently sold. Look at properties with similar size, condition, and features. You can also get a professional appraisal or BPO (Broker Price Opinion).',\r\n  },\r\n  {\r\n    question: 'What should I budget for selling costs when flipping?',\r\n    answer:\r\n      'Typical selling costs include estate agent fees (1-3% of sale price), solicitor fees (┬ú500-┬ú1,500), Energy Performance Certificate (┬ú100-┬ú300), and potential capital gains tax. Budget around 3-5% of the sale price for total selling costs.',\r\n  },\r\n  {\r\n    question: 'What Loan-to-Value (LTV) can I expect for a refinance?',\r\n    answer:\r\n      'Most UK buy-to-let mortgage lenders offer 75-80% LTV for refinancing, though some specialist lenders may go up to 85%. The exact LTV depends on the property type, location, rental income coverage, and your financial profile. Higher LTV ratios typically come with higher interest rates.',\r\n  },\r\n  {\r\n    question: 'How much should I budget for rehab costs?',\r\n    answer:\r\n      \"Rehab costs vary widely depending on the property's condition and your renovation scope. Get quotes from contractors for major work, add 10-20% contingency for unexpected issues, and budget for: structural repairs, plumbing/electrical updates, kitchen and bathroom renovations, flooring, painting, and any necessary safety/compliance work.\",\r\n  },\r\n  {\r\n    question: 'What expenses should I include in monthly property expenses for BRRRR?',\r\n    answer:\r\n      'Include all operating expenses except the mortgage payment: property insurance, property management fees (typically 8-12% of rent), regular maintenance and repairs, vacancy allowance (typically 5-10% of rent), and any service charges or ground rent for leasehold properties.',\r\n  },\r\n  {\r\n    question: 'Which strategy is better - flipping or BRRRR?',\r\n    answer:\r\n      'It depends on your goals and situation. Flipping provides immediate cash profits but requires finding new deals constantly and pays income tax on profits. BRRRR builds long-term wealth through cash flow and appreciation, offers better tax advantages, but ties up capital longer and requires active property management. Many investors use both strategies depending on the specific deal and market conditions.',\r\n  },\r\n  {\r\n    question: 'Are there tax implications with property investment strategies?',\r\n    answer:\r\n      'Yes, significant tax considerations apply. Flipping profits are typically subject to income tax (or corporation tax if through a company). BRRRR involves rental income tax, but with many allowable expenses. Stamp duty applies on purchase, and capital gains tax may apply when selling. Consider professional tax advice as the optimal structure depends on your circumstances and investment scale.',\r\n  },\r\n];\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\Blog.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 56,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Calendar, User, ArrowRight, Clock } from 'lucide-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\n\r\nconst blogPosts = [\r\n  {\r\n    title: 'Smart Money-Saving Tips for UK Families: Tackling Groceries & Energy Bills',\r\n    excerpt:\r\n      'A guide to cutting costs on two of the biggest drains on family finances ÔÇô groceries and energy bills.',\r\n    date: 'October 26, 2023',\r\n    author: 'CalcMyMoney Team',\r\n    category: 'Money Saving',\r\n    readTime: '7 min read',\r\n    url: createPageUrl('BlogSmartMoneySavingTips'),\r\n    image:\r\n      'https://images.unsplash.com/photo-1542838132-92c53300491e?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n  },\r\n  {\r\n    title: 'Debt Snowball vs. Debt Avalanche: Which UK Debt Repayment Strategy is Right for You?',\r\n    excerpt:\r\n      'The two most popular debt repayment strategies explained, helping you choose the right path to a debt-free life in the UK.',\r\n    date: 'October 24, 2023',\r\n    author: 'CalcMyMoney Team',\r\n    category: 'Debt Management',\r\n    readTime: '6 min read',\r\n    url: createPageUrl('BlogDebtRepaymentStrategies'),\r\n    image:\r\n      'https://images.unsplash.com/photo-1554224155-6726b3ff858f?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n  },\r\n  {\r\n    title: 'My Relationship with Money: A Guide to Financial Psychology',\r\n    excerpt:\r\n      \"Understand the 'why' behind your financial decisions. Explore your money mindset and learn how to build a healthier, more prosperous future.\",\r\n    date: 'October 22, 2023',\r\n    author: 'CalcMyMoney Team',\r\n    category: 'Mindset',\r\n    readTime: '8 min read',\r\n    url: createPageUrl('BlogFinancialPsychology'),\r\n    image:\r\n      'https://images.unsplash.com/photo-1579621970563-ebec7560ff3e?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n  },\r\n];\r\n\r\nconst categoryColors = {\r\n  'Money Saving': 'bg-blue-100 text-blue-800 dark:bg-blue-900/50 dark:text-blue-300',\r\n  'Debt Management': 'bg-red-100 text-red-800 dark:bg-red-900/50 dark:text-red-300',\r\n  Mindset: 'bg-purple-100 text-purple-800 dark:bg-purple-900/50 dark:text-purple-300',\r\n  'Tax Updates': 'bg-amber-100 text-amber-800 dark:bg-amber-900/50 dark:text-amber-300',\r\n  Budgeting: 'bg-green-100 text-green-800 dark:bg-green-900/50 dark:text-green-300',\r\n};\r\n\r\nexport default function Blog() {\r\n  return (\r\n    <div className=\"bg-gray-50 dark:bg-gray-900 py-12\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"text-center mb-16\">\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n            Financial Insights & Updates\r\n          </h1>\r\n          <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n            Stay informed with the latest UK financial news, tax updates, and money management\r\n            strategies.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n          {blogPosts.map((post, index) => (\r\n            <Link\r\n              to={post.url}\r\n              key={index}\r\n              className={`group ${post.url === '#' ? 'pointer-events-none' : ''}`}\r\n            >\r\n              <Card className=\"h-full flex flex-col hover:shadow-lg transition-shadow duration-300 bg-white dark:bg-gray-800\">\r\n                <img\r\n                  src={post.image}\r\n                  alt={post.title}\r\n                  className=\"w-full h-48 object-cover rounded-t-lg\"\r\n                />\r\n                <CardHeader>\r\n                  <div className=\"flex items-center justify-between text-sm text-gray-500 dark:text-gray-400 mb-2\">\r\n                    <span\r\n                      className={`px-2 py-1 rounded text-xs font-medium ${categoryColors[post.category] || 'bg-gray-100 text-gray-800'}`}\r\n                    >\r\n                      {post.category}\r\n                    </span>\r\n                    <div className=\"flex items-center gap-1\">\r\n                      <Clock className=\"w-4 h-4\" />\r\n                      {post.readTime}\r\n                    </div>\r\n                  </div>\r\n                  <CardTitle className=\"group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors\">\r\n                    {post.title}\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"flex-grow flex flex-col\">\r\n                  <p className=\"text-gray-600 dark:text-gray-300 mb-4 leading-relaxed flex-grow\">\r\n                    {post.excerpt}\r\n                  </p>\r\n                  <div className=\"flex items-center justify-between text-sm text-gray-500 dark:text-gray-400 mt-auto pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <User className=\"w-4 h-4\" />\r\n                      {post.author}\r\n                    </div>\r\n                    <div className=\"flex items-center gap-1 group-hover:gap-2 transition-all\">\r\n                      Read More <ArrowRight className=\"w-4 h-4 transition-transform\" />\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\BlogDebtRepaymentStrategies.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 21,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport { ArrowLeft, Calendar, User, Clock, TrendingDown, Target } from 'lucide-react';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Separator } from '@/components/ui/separator';\r\n\r\nexport default function BlogDebtRepaymentStrategies() {\r\n  const post = {\r\n    title: 'Debt Snowball vs. Debt Avalanche: Which UK Debt Repayment Strategy is Right for You?',\r\n    category: 'Debt Management',\r\n    readTime: '6 min read',\r\n    author: 'CalcMyMoney Team',\r\n    date: 'October 24, 2023',\r\n    imageUrl:\r\n      'https://images.unsplash.com/photo-1554224155-6726b3ff858f?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n    imageAlt: 'Person organizing financial documents and calculating debt payments',\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900 py-12\">\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <Link\r\n          to={createPageUrl('Blog')}\r\n          className=\"inline-flex items-center text-blue-600 dark:text-blue-400 hover:underline mb-8\"\r\n        >\r\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n          Back to all articles\r\n        </Link>\r\n\r\n        <article>\r\n          <header className=\"mb-8\">\r\n            <span className=\"bg-red-100 text-red-800 px-3 py-1 rounded-full text-sm font-medium dark:bg-red-900/50 dark:text-red-300\">\r\n              {post.category}\r\n            </span>\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mt-4 mb-4\">\r\n              {post.title}\r\n            </h1>\r\n            <div className=\"flex flex-wrap items-center gap-x-6 gap-y-2 text-sm text-gray-600 dark:text-gray-400\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <User className=\"w-4 h-4\" />\r\n                <span>{post.author}</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Calendar className=\"w-4 h-4\" />\r\n                <time dateTime={post.date}>{post.date}</time>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Clock className=\"w-4 h-4\" />\r\n                <span>{post.readTime}</span>\r\n              </div>\r\n            </div>\r\n          </header>\r\n\r\n          <img\r\n            src={post.imageUrl}\r\n            alt={post.imageAlt}\r\n            className=\"w-full h-auto max-h-[400px] object-cover rounded-lg mb-8\"\r\n          />\r\n\r\n          <div className=\"prose prose-lg dark:prose-invert max-w-none mx-auto text-gray-700 dark:text-gray-300\">\r\n            <p className=\"lead text-xl\">\r\n              When you're drowning in debt, every pound counts, and every strategy matters. Two\r\n              approaches have emerged as the most popular methods for UK residents tackling multiple\r\n              debts: the debt snowball and the debt avalanche. But which one is right for you?\r\n            </p>\r\n\r\n            <Separator className=\"my-8\" />\r\n\r\n            <h2>Understanding the Debt Avalanche Method</h2>\r\n            <div className=\"flex items-center gap-3 mb-4\">\r\n              <TrendingDown className=\"w-6 h-6 text-red-600\" />\r\n              <p className=\"text-lg font-semibold text-red-800 dark:text-red-300 mb-0\">\r\n                Mathematically Optimal\r\n              </p>\r\n            </div>\r\n\r\n            <p>\r\n              The debt avalanche method focuses on paying off debts with the highest interest rates\r\n              first, while making minimum payments on all other debts. This approach minimizes the\r\n              total amount of interest you'll pay over the life of your debts.\r\n            </p>\r\n\r\n            <div className=\"my-6 p-6 bg-red-50 dark:bg-red-900/30 rounded-lg border border-red-200 dark:border-red-700\">\r\n              <h3 className=\"text-lg font-semibold text-red-800 dark:text-red-200 mb-3\">\r\n                How Debt Avalanche Works:\r\n              </h3>\r\n              <ol className=\"list-decimal list-inside space-y-2 text-red-700 dark:text-red-300\">\r\n                <li>List all your debts with their interest rates</li>\r\n                <li>Arrange them from highest to lowest APR</li>\r\n                <li>Pay minimums on all debts</li>\r\n                <li>Put any extra money toward the highest interest debt</li>\r\n                <li>Once paid off, move to the next highest rate</li>\r\n              </ol>\r\n            </div>\r\n\r\n            <div className=\"my-8\">\r\n              <img\r\n                src=\"https://images.unsplash.com/photo-1611224923853-80b023f02d71?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\r\n                alt=\"Calculator and financial documents showing debt reduction strategy planning\"\r\n                className=\"w-full h-64 object-cover rounded-lg\"\r\n              />\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center italic\">\r\n                The debt avalanche method focuses on mathematical optimization to save money\r\n              </p>\r\n            </div>\r\n\r\n            <h2>Understanding the Debt Snowball Method</h2>\r\n            <div className=\"flex items-center gap-3 mb-4\">\r\n              <Target className=\"w-6 h-6 text-blue-600\" />\r\n              <p className=\"text-lg font-semibold text-blue-800 dark:text-blue-300 mb-0\">\r\n                Psychologically Motivating\r\n              </p>\r\n            </div>\r\n\r\n            <p>\r\n              The debt snowball method focuses on paying off the smallest balances first, regardless\r\n              of interest rate. This approach prioritizes quick wins and psychological momentum over\r\n              mathematical optimization.\r\n            </p>\r\n\r\n            <div className=\"my-6 p-6 bg-blue-50 dark:bg-blue-900/30 rounded-lg border border-blue-200 dark:border-blue-700\">\r\n              <h3 className=\"text-lg font-semibold text-blue-800 dark:text-blue-200 mb-3\">\r\n                How Debt Snowball Works:\r\n              </h3>\r\n              <ol className=\"list-decimal list-inside space-y-2 text-blue-700 dark:text-blue-300\">\r\n                <li>List all your debts from smallest to largest balance</li>\r\n                <li>Pay minimums on all debts</li>\r\n                <li>Put any extra money toward the smallest balance</li>\r\n                <li>Once paid off, add that payment to the next smallest debt</li>\r\n                <li>Watch your momentum build with each victory</li>\r\n              </ol>\r\n            </div>\r\n\r\n            <h2>Real UK Example: Sarah's Debt Journey</h2>\r\n            <p>Let's look at Sarah, a teacher from Birmingham, with typical UK debts:</p>\r\n\r\n            <div className=\"grid md:grid-cols-2 gap-6 my-8\">\r\n              <Card className=\"bg-gray-50 dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <CardContent className=\"p-6\">\r\n                  <h4 className=\"font-semibold mb-3\">Sarah's Debts:</h4>\r\n                  <ul className=\"space-y-2 text-sm\">\r\n                    <li>Credit Card 1: ┬ú2,500 @ 22.9% APR</li>\r\n                    <li>Credit Card 2: ┬ú1,200 @ 18.9% APR</li>\r\n                    <li>Store Card: ┬ú800 @ 28.9% APR</li>\r\n                    <li>Personal Loan: ┬ú4,500 @ 9.9% APR</li>\r\n                    <li>Car Finance: ┬ú6,200 @ 7.5% APR</li>\r\n                  </ul>\r\n                  <div className=\"mt-4 pt-4 border-t border-gray-300 dark:border-gray-600\">\r\n                    <p>\r\n                      <strong>Total Debt: ┬ú15,200</strong>\r\n                    </p>\r\n                    <p>Extra monthly payment: ┬ú300</p>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card className=\"bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700\">\r\n                <CardContent className=\"p-6\">\r\n                  <h4 className=\"font-semibold mb-3 text-green-800 dark:text-green-200\">\r\n                    Results Comparison:\r\n                  </h4>\r\n                  <div className=\"space-y-4 text-sm\">\r\n                    <div>\r\n                      <h5 className=\"font-medium text-red-700 dark:text-red-300\">\r\n                        Debt Avalanche:\r\n                      </h5>\r\n                      <p>Time to debt-free: 3.2 years</p>\r\n                      <p>Total interest: ┬ú2,847</p>\r\n                    </div>\r\n                    <div>\r\n                      <h5 className=\"font-medium text-blue-700 dark:text-blue-300\">\r\n                        Debt Snowball:\r\n                      </h5>\r\n                      <p>Time to debt-free: 3.4 years</p>\r\n                      <p>Total interest: ┬ú3,156</p>\r\n                    </div>\r\n                    <div className=\"pt-2 border-t border-green-300 dark:border-green-600\">\r\n                      <p className=\"font-medium\">Avalanche saves: ┬ú309</p>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            <h2>Which Method Should You Choose?</h2>\r\n\r\n            <div className=\"grid md:grid-cols-2 gap-6 my-8\">\r\n              <Card className=\"bg-red-50 dark:bg-red-900/30 border-red-200 dark:border-red-700\">\r\n                <CardContent className=\"p-6\">\r\n                  <h4 className=\"font-semibold text-red-800 dark:text-red-200 mb-3\">\r\n                    Choose Debt Avalanche If:\r\n                  </h4>\r\n                  <ul className=\"space-y-2 text-red-700 dark:text-red-300\">\r\n                    <li>ÔÇó You're motivated by saving money</li>\r\n                    <li>ÔÇó You can stick to a plan without quick wins</li>\r\n                    <li>ÔÇó You have high-interest debts (credit cards, store cards)</li>\r\n                    <li>ÔÇó You're analytical and numbers-driven</li>\r\n                    <li>ÔÇó You want to minimize total interest paid</li>\r\n                  </ul>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card className=\"bg-blue-50 dark:bg-blue-900/30 border-blue-200 dark:border-blue-700\">\r\n                <CardContent className=\"p-6\">\r\n                  <h4 className=\"font-semibold text-blue-800 dark:text-blue-200 mb-3\">\r\n                    Choose Debt Snowball If:\r\n                  </h4>\r\n                  <ul className=\"space-y-2 text-blue-700 dark:text-blue-300\">\r\n                    <li>ÔÇó You need motivation from quick wins</li>\r\n                    <li>ÔÇó You've struggled with debt plans before</li>\r\n                    <li>ÔÇó Your interest rates are fairly similar</li>\r\n                    <li>ÔÇó You're emotionally driven</li>\r\n                    <li>ÔÇó You want to simplify your financial life faster</li>\r\n                  </ul>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            <h2>UK-Specific Considerations</h2>\r\n            <p>When choosing your debt repayment strategy in the UK, keep these factors in mind:</p>\r\n            <ul>\r\n              <li>\r\n                <strong>Student Loans:</strong> Generally keep these last due to low interest rates\r\n                and income-dependent repayments\r\n              </li>\r\n              <li>\r\n                <strong>Council Tax Debt:</strong> Always prioritize this - bailiffs can be used for\r\n                enforcement\r\n              </li>\r\n              <li>\r\n                <strong>Mortgage vs Credit Cards:</strong> Focus on high-interest credit cards\r\n                before overpaying your mortgage\r\n              </li>\r\n              <li>\r\n                <strong>0% Balance Transfer Cards:</strong> Can be powerful tools when used with\r\n                either strategy\r\n              </li>\r\n            </ul>\r\n\r\n            <div className=\"my-8\">\r\n              <img\r\n                src=\"https://images.unsplash.com/photo-1551288049-bebda4e38f71?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\r\n                alt=\"Person celebrating financial success with calculator and paperwork\"\r\n                className=\"w-full h-64 object-cover rounded-lg\"\r\n              />\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center italic\">\r\n                Both strategies can lead to debt freedom - choose the one that fits your personality\r\n              </p>\r\n            </div>\r\n\r\n            <Separator className=\"my-8\" />\r\n\r\n            <h2>The Bottom Line</h2>\r\n            <p>\r\n              The \"perfect\" debt repayment strategy is the one you'll actually stick to. While the\r\n              debt avalanche saves more money mathematically, the debt snowball's psychological\r\n              benefits can be game-changing for many people.\r\n            </p>\r\n\r\n            <p>\r\n              Remember: the difference in interest paid is often less significant than the\r\n              difference between having a plan and not having one at all.\r\n            </p>\r\n\r\n            <Card className=\"my-8 bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700\">\r\n              <CardContent className=\"p-6\">\r\n                <h3 className=\"text-lg font-semibold text-green-800 dark:text-green-200 mb-3\">\r\n                  ­ƒº« Ready to Run Your Numbers?\r\n                </h3>\r\n                <p className=\"text-green-700 dark:text-green-300\">\r\n                  Use our{' '}\r\n                  <Link to={createPageUrl('DebtCalculator')} className=\"underline font-medium\">\r\n                    Debt Repayment Calculator\r\n                  </Link>{' '}\r\n                  to compare both strategies with your actual debts and see which approach works\r\n                  best for your situation.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </article>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\BlogFinancialPsychology.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 21,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport { ArrowLeft, Calendar, User, Clock, Heart, Brain, Target } from 'lucide-react';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Separator } from '@/components/ui/separator';\r\n\r\nexport default function BlogFinancialPsychology() {\r\n  const post = {\r\n    title: 'My Relationship with Money: A Guide to Financial Psychology',\r\n    category: 'Mindset',\r\n    readTime: '8 min read',\r\n    author: 'CalcMyMoney Team',\r\n    date: 'October 22, 2023',\r\n    imageUrl:\r\n      'https://images.unsplash.com/photo-1579621970563-ebec7560ff3e?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n    imageAlt: 'Person meditating with financial symbols and growth charts in the background',\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900 py-12\">\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <Link\r\n          to={createPageUrl('Blog')}\r\n          className=\"inline-flex items-center text-blue-600 dark:text-blue-400 hover:underline mb-8\"\r\n        >\r\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n          Back to all articles\r\n        </Link>\r\n\r\n        <article>\r\n          <header className=\"mb-8\">\r\n            <span className=\"bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm font-medium dark:bg-purple-900/50 dark:text-purple-300\">\r\n              {post.category}\r\n            </span>\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mt-4 mb-4\">\r\n              {post.title}\r\n            </h1>\r\n            <div className=\"flex flex-wrap items-center gap-x-6 gap-y-2 text-sm text-gray-600 dark:text-gray-400\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <User className=\"w-4 h-4\" />\r\n                <span>{post.author}</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Calendar className=\"w-4 h-4\" />\r\n                <time dateTime={post.date}>{post.date}</time>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Clock className=\"w-4 h-4\" />\r\n                <span>{post.readTime}</span>\r\n              </div>\r\n            </div>\r\n          </header>\r\n\r\n          <img\r\n            src={post.imageUrl}\r\n            alt={post.imageAlt}\r\n            className=\"w-full h-auto max-h-[400px] object-cover rounded-lg mb-8\"\r\n          />\r\n\r\n          <div className=\"prose prose-lg dark:prose-invert max-w-none mx-auto text-gray-700 dark:text-gray-300\">\r\n            <p className=\"lead text-xl\">\r\n              Money isn't just numbers on a screen or notes in your wallet. It's deeply personal,\r\n              emotional, and tied to our core beliefs about security, success, and self-worth.\r\n              Understanding your relationship with money might be the most important financial skill\r\n              you never learned in school.\r\n            </p>\r\n\r\n            <Separator className=\"my-8\" />\r\n\r\n            <h2>The Hidden Forces Shaping Your Money Decisions</h2>\r\n            <div className=\"flex items-center gap-3 mb-4\">\r\n              <Brain className=\"w-6 h-6 text-purple-600\" />\r\n              <p className=\"text-lg font-semibold text-purple-800 dark:text-purple-300 mb-0\">\r\n                It's All in Your Head (And That's OK)\r\n              </p>\r\n            </div>\r\n\r\n            <p>\r\n              Every time you make a financial decision ÔÇô whether it's buying a coffee, choosing a\r\n              pension contribution, or avoiding looking at your bank balance ÔÇô you're being\r\n              influenced by deeply ingrained psychological patterns.\r\n            </p>\r\n\r\n            <p>These patterns were formed early in life through:</p>\r\n            <ul>\r\n              <li>\r\n                <strong>Family messages:</strong> What did your parents say (or not say) about\r\n                money?\r\n              </li>\r\n              <li>\r\n                <strong>Early experiences:</strong> Did you experience financial stress, abundance,\r\n                or unpredictability?\r\n              </li>\r\n              <li>\r\n                <strong>Cultural influences:</strong> What does your community/society say about\r\n                wealth and poverty?\r\n              </li>\r\n              <li>\r\n                <strong>Personal experiences:</strong> Your wins, losses, and lessons with money\r\n                over time\r\n              </li>\r\n            </ul>\r\n\r\n            <div className=\"my-8\">\r\n              <img\r\n                src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\r\n                alt=\"Child's hands holding coins, representing early money experiences\"\r\n                className=\"w-full h-64 object-cover rounded-lg\"\r\n              />\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center italic\">\r\n                Our earliest money memories often shape our adult financial behaviors\r\n              </p>\r\n            </div>\r\n\r\n            <h2>The Four Common UK Money Personalities</h2>\r\n            <p>\r\n              Most people fall into one (or a combination) of these money personality types.\r\n              Recognizing yourself can be the first step toward financial awareness:\r\n            </p>\r\n\r\n            <div className=\"grid md:grid-cols-2 gap-6 my-8\">\r\n              <Card className=\"bg-red-50 dark:bg-red-900/30 border-red-200 dark:border-red-700\">\r\n                <CardContent className=\"p-6\">\r\n                  <h4 className=\"font-semibold text-red-800 dark:text-red-200 mb-3\">\r\n                    ­ƒÆ© The Spender\r\n                  </h4>\r\n                  <p className=\"text-red-700 dark:text-red-300 text-sm mb-3\">\r\n                    Money is for enjoying life and showing love\r\n                  </p>\r\n                  <ul className=\"text-red-700 dark:text-red-300 text-sm space-y-1\">\r\n                    <li>ÔÇó Shops to feel better</li>\r\n                    <li>ÔÇó Generous with others</li>\r\n                    <li>ÔÇó Lives in the moment</li>\r\n                    <li>ÔÇó Struggles with saving</li>\r\n                  </ul>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card className=\"bg-blue-50 dark:bg-blue-900/30 border-blue-200 dark:border-blue-700\">\r\n                <CardContent className=\"p-6\">\r\n                  <h4 className=\"font-semibold text-blue-800 dark:text-blue-200 mb-3\">\r\n                    ­ƒÅª The Saver\r\n                  </h4>\r\n                  <p className=\"text-blue-700 dark:text-blue-300 text-sm mb-3\">\r\n                    Money equals security and peace of mind\r\n                  </p>\r\n                  <ul className=\"text-blue-700 dark:text-blue-300 text-sm space-y-1\">\r\n                    <li>ÔÇó Always has an emergency fund</li>\r\n                    <li>ÔÇó Conservative with investments</li>\r\n                    <li>ÔÇó Plans for the future</li>\r\n                    <li>ÔÇó May miss out on experiences</li>\r\n                  </ul>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card className=\"bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700\">\r\n                <CardContent className=\"p-6\">\r\n                  <h4 className=\"font-semibold text-green-800 dark:text-green-200 mb-3\">\r\n                    ­ƒôè The Investor\r\n                  </h4>\r\n                  <p className=\"text-green-700 dark:text-green-300 text-sm mb-3\">\r\n                    Money should work hard and grow\r\n                  </p>\r\n                  <ul className=\"text-green-700 dark:text-green-300 text-sm space-y-1\">\r\n                    <li>ÔÇó Loves researching opportunities</li>\r\n                    <li>ÔÇó Comfortable with calculated risks</li>\r\n                    <li>ÔÇó Focuses on long-term wealth</li>\r\n                    <li>ÔÇó May neglect present enjoyment</li>\r\n                  </ul>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card className=\"bg-gray-50 dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <CardContent className=\"p-6\">\r\n                  <h4 className=\"font-semibold text-gray-800 dark:text-gray-200 mb-3\">\r\n                    ­ƒÖê The Avoider\r\n                  </h4>\r\n                  <p className=\"text-gray-700 dark:text-gray-300 text-sm mb-3\">\r\n                    Money is stressful and overwhelming\r\n                  </p>\r\n                  <ul className=\"text-gray-700 dark:text-gray-300 text-sm space-y-1\">\r\n                    <li>ÔÇó Avoids checking bank statements</li>\r\n                    <li>ÔÇó Delegates financial decisions</li>\r\n                    <li>ÔÇó Feels overwhelmed by choices</li>\r\n                    <li>ÔÇó May miss financial opportunities</li>\r\n                  </ul>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            <h2>Common Money Myths That Hold Us Back</h2>\r\n            <p>\r\n              Many of the beliefs we hold about money aren't actually true, but they feel true\r\n              because we've never questioned them. Here are some common ones among UK residents:\r\n            </p>\r\n\r\n            <div className=\"my-6 p-6 bg-amber-50 dark:bg-amber-900/30 rounded-lg border border-amber-200 dark:border-amber-700\">\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <p className=\"font-semibold text-amber-800 dark:text-amber-200\">\r\n                    ÔØî \"I'm just bad with money\"\r\n                  </p>\r\n                  <p className=\"text-amber-700 dark:text-amber-300 text-sm\">\r\n                    Ô£à Money management is a learnable skill, not a fixed trait.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"font-semibold text-amber-800 dark:text-amber-200\">\r\n                    ÔØî \"Rich people are greedy/lucky/different\"\r\n                  </p>\r\n                  <p className=\"text-amber-700 dark:text-amber-300 text-sm\">\r\n                    Ô£à Wealth often comes from consistent habits and informed decisions over time.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"font-semibold text-amber-800 dark:text-amber-200\">\r\n                    ÔØî \"I need to earn more before I can save\"\r\n                  </p>\r\n                  <p className=\"text-amber-700 dark:text-amber-300 text-sm\">\r\n                    Ô£à Small amounts saved consistently can grow significantly over time.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"font-semibold text-amber-800 dark:text-amber-200\">\r\n                    ÔØî \"Investing is only for the wealthy\"\r\n                  </p>\r\n                  <p className=\"text-amber-700 dark:text-amber-300 text-sm\">\r\n                    Ô£à You can start investing with as little as ┬ú25 per month in the UK.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"my-8\">\r\n              <img\r\n                src=\"https://images.unsplash.com/photo-1551836022-4c4c79ecde51?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\r\n                alt=\"Person breaking free from chains, representing breaking limiting money beliefs\"\r\n                className=\"w-full h-64 object-cover rounded-lg\"\r\n              />\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center italic\">\r\n                Breaking free from limiting money beliefs opens up new financial possibilities\r\n              </p>\r\n            </div>\r\n\r\n            <h2>The UK Context: Cultural Money Messages</h2>\r\n            <p>\r\n              In the UK, we have some unique cultural attitudes toward money that can impact our\r\n              financial wellbeing:\r\n            </p>\r\n            <ul>\r\n              <li>\r\n                <strong>\"Money doesn't buy happiness\"</strong> ÔÇô While true to an extent, this can\r\n                justify underearning or avoiding financial goals\r\n              </li>\r\n              <li>\r\n                <strong>\"It's rude to discuss money\"</strong> ÔÇô This taboo prevents us from learning\r\n                from others and getting help when needed\r\n              </li>\r\n              <li>\r\n                <strong>\"Keep calm and carry on\"</strong> ÔÇô Our stiff upper lip can prevent us from\r\n                addressing financial stress\r\n              </li>\r\n              <li>\r\n                <strong>\"Class consciousness\"</strong> ÔÇô Ideas about \"our place\" can limit financial\r\n                aspirations\r\n              </li>\r\n            </ul>\r\n\r\n            <h2>Rewiring Your Money Mindset: Practical Steps</h2>\r\n            <div className=\"flex items-center gap-3 mb-4\">\r\n              <Target className=\"w-6 h-6 text-green-600\" />\r\n              <p className=\"text-lg font-semibold text-green-800 dark:text-green-300 mb-0\">\r\n                Small Changes, Big Impact\r\n              </p>\r\n            </div>\r\n\r\n            <h3>1. Practice Money Mindfulness</h3>\r\n            <p>Before making any purchase over ┬ú20, pause and ask yourself:</p>\r\n            <ul>\r\n              <li>What emotion am I feeling right now?</li>\r\n              <li>What do I hope this purchase will give me?</li>\r\n              <li>Is this aligned with my values and goals?</li>\r\n            </ul>\r\n\r\n            <h3>2. Reframe Your Money Stories</h3>\r\n            <p>\r\n              Instead of \"I can't afford it,\" try \"That's not a priority for me right now.\" This\r\n              shifts you from victim to empowered decision-maker.\r\n            </p>\r\n\r\n            <h3>3. Set Values-Based Goals</h3>\r\n            <p>\r\n              Rather than arbitrary targets, connect your financial goals to what matters most to\r\n              you:\r\n            </p>\r\n            <ul>\r\n              <li>Security: Emergency fund for peace of mind</li>\r\n              <li>Freedom: Savings for career flexibility</li>\r\n              <li>Family: University fund for children</li>\r\n              <li>Adventure: Travel fund for experiences</li>\r\n            </ul>\r\n\r\n            <h3>4. Celebrate Small Wins</h3>\r\n            <p>\r\n              Acknowledge progress, no matter how small. Saved your first ┬ú100? Celebrate! Increased\r\n              your pension contribution? That's worth recognizing!\r\n            </p>\r\n\r\n            <div className=\"my-8\">\r\n              <img\r\n                src=\"https://images.unsplash.com/photo-1521791136064-7986c2920216?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\r\n                alt=\"Person celebrating success with arms raised against sunset\"\r\n                className=\"w-full h-64 object-cover rounded-lg\"\r\n              />\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center italic\">\r\n                Celebrating financial wins, big and small, reinforces positive money habits\r\n              </p>\r\n            </div>\r\n\r\n            <Separator className=\"my-8\" />\r\n\r\n            <h2>Your Money, Your Journey</h2>\r\n            <p>\r\n              There's no \"perfect\" relationship with money, just like there's no perfect\r\n              relationship with anything else that matters. The goal isn't to eliminate all emotion\r\n              from your financial decisions ÔÇô that's impossible and unnecessary.\r\n            </p>\r\n\r\n            <p>\r\n              Instead, the goal is <em>awareness</em>. When you understand why you make the\r\n              financial choices you do, you can make more intentional decisions that align with your\r\n              true values and long-term wellbeing.\r\n            </p>\r\n\r\n            <p>\r\n              Remember: changing your relationship with money is a process, not a destination. Be\r\n              patient with yourself as you unlearn old patterns and create new, healthier ones.\r\n            </p>\r\n\r\n            <Card className=\"my-8 bg-purple-50 dark:bg-purple-900/30 border-purple-200 dark:border-purple-700\">\r\n              <CardContent className=\"p-6\">\r\n                <h3 className=\"text-lg font-semibold text-purple-800 dark:text-purple-200 mb-3\">\r\n                  ­ƒÆ¡ Ready to Transform Your Future?\r\n                </h3>\r\n                <p className=\"text-purple-700 dark:text-purple-300\">\r\n                  Start putting these insights into practice with our{' '}\r\n                  <Link\r\n                    to={createPageUrl('DreamLifestyleCalculator')}\r\n                    className=\"underline font-medium\"\r\n                  >\r\n                    Dream Lifestyle Calculator\r\n                  </Link>\r\n                  . Discover what your ideal life costs and create a values-based plan to get there.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </article>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\BlogSmartMoneySavingTips.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 21,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport { ArrowLeft, Calendar, User, Clock } from 'lucide-react';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Separator } from '@/components/ui/separator';\r\n\r\nexport default function BlogSmartMoneySavingTips() {\r\n  const post = {\r\n    title: 'Smart Money-Saving Tips for UK Families: Tackling Groceries & Energy Bills',\r\n    category: 'Money Saving',\r\n    readTime: '7 min read',\r\n    author: 'CalcMyMoney Team',\r\n    date: 'October 26, 2023',\r\n    imageUrl:\r\n      'https://images.unsplash.com/photo-1542838132-92c53300491e?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n    imageAlt: 'A family happily unpacking groceries in a bright, modern kitchen.',\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900 py-12\">\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <Link\r\n          to={createPageUrl('Blog')}\r\n          className=\"inline-flex items-center text-blue-600 dark:text-blue-400 hover:underline mb-8\"\r\n        >\r\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n          Back to all articles\r\n        </Link>\r\n\r\n        <article>\r\n          <header className=\"mb-8\">\r\n            <span className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium dark:bg-blue-900/50 dark:text-blue-300\">\r\n              {post.category}\r\n            </span>\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mt-4 mb-4\">\r\n              {post.title}\r\n            </h1>\r\n            <div className=\"flex flex-wrap items-center gap-x-6 gap-y-2 text-sm text-gray-600 dark:text-gray-400\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <User className=\"w-4 h-4\" />\r\n                <span>{post.author}</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Calendar className=\"w-4 h-4\" />\r\n                <time dateTime={post.date}>{post.date}</time>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Clock className=\"w-4 h-4\" />\r\n                <span>{post.readTime}</span>\r\n              </div>\r\n            </div>\r\n          </header>\r\n\r\n          <img\r\n            src={post.imageUrl}\r\n            alt={post.imageAlt}\r\n            className=\"w-full h-auto max-h-[400px] object-cover rounded-lg mb-8\"\r\n          />\r\n\r\n          <div className=\"prose prose-lg dark:prose-invert max-w-none mx-auto text-gray-700 dark:text-gray-300\">\r\n            <p className=\"lead text-xl\">\r\n              The cost of living in the UK continues to be a hot topic, with rising prices hitting\r\n              household budgets hard. This guide focuses on two of the biggest drains on family\r\n              finances ÔÇô groceries and energy bills ÔÇô offering actionable tips specifically for UK\r\n              households.\r\n            </p>\r\n\r\n            <Separator className=\"my-8\" />\r\n\r\n            <h2>Winning the Grocery Game: Strategies for the Supermarket</h2>\r\n            <p>\r\n              Groceries are often one of the largest flexible expenses for families. Small changes\r\n              here can lead to significant savings.\r\n            </p>\r\n            <ul>\r\n              <li>\r\n                <strong>Meal Planning is Your Superpower:</strong> Before you even step foot in the\r\n                supermarket, plan out every meal for the week. This prevents impulse buys and\r\n                reduces food waste.\r\n              </li>\r\n              <li>\r\n                <strong>Shop Your Pantry First:</strong> Before making your shopping list, \"shop\"\r\n                your own fridge, freezer, and cupboards. You might be surprised what you already\r\n                have.\r\n              </li>\r\n              <li>\r\n                <strong>Embrace 'Wonky' Veg & Own Brands:</strong> Supermarkets often sell\r\n                \"imperfect\" vegetables at a discount. They taste exactly the same! Similarly, don't\r\n                shy away from own-brand products.\r\n              </li>\r\n              <li>\r\n                <strong>Batch Cooking for Busy Weeks:</strong> Dedicate a few hours on a weekend to\r\n                cook larger portions of staples like pasta sauce or chili. Freeze individual\r\n                portions for quick, cheap, and healthy meals on busy weeknights.\r\n              </li>\r\n            </ul>\r\n\r\n            <div className=\"my-8\">\r\n              <img\r\n                src=\"https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\r\n                alt=\"Fresh vegetables and groceries laid out for meal planning\"\r\n                className=\"w-full h-64 object-cover rounded-lg\"\r\n              />\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center italic\">\r\n                Meal planning and smart shopping can dramatically reduce your grocery spend\r\n              </p>\r\n            </div>\r\n\r\n            <h2>Taming the Energy Beast: Heating, Lighting & Appliances</h2>\r\n            <p>With fluctuating energy prices, making your home more energy-efficient is key.</p>\r\n            <ul>\r\n              <li>\r\n                <strong>Understand Your Usage:</strong> Many smart meters or online accounts provide\r\n                a detailed breakdown of your energy consumption. Identify peak usage times or\r\n                'energy hungry' appliances.\r\n              </li>\r\n              <li>\r\n                <strong>Smart Thermostat & Zoned Heating:</strong> Invest in a smart thermostat that\r\n                learns your habits or allows you to control heating from your phone. Only heat the\r\n                rooms you're using.\r\n              </li>\r\n              <li>\r\n                <strong>Appliance Awareness:</strong> Run washing machines and dishwashers only on\r\n                full loads, wash clothes at 30┬░C, and unplug devices left on standby.\r\n              </li>\r\n              <li>\r\n                <strong>LED Lighting:</strong> Switch to LED bulbs. They use significantly less\r\n                energy and last much longer than traditional bulbs.\r\n              </li>\r\n            </ul>\r\n\r\n            <div className=\"my-8\">\r\n              <img\r\n                src=\"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\r\n                alt=\"Modern smart thermostat on wall showing energy savings\"\r\n                className=\"w-full h-64 object-cover rounded-lg\"\r\n              />\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center italic\">\r\n                Smart home technology can help you take control of your energy usage\r\n              </p>\r\n            </div>\r\n\r\n            <h2>Quick Wins: Small Changes, Big Impact</h2>\r\n            <p>Sometimes the smallest adjustments yield the greatest results:</p>\r\n            <ul>\r\n              <li>\r\n                <strong>Loyalty Programs:</strong> Use supermarket loyalty cards and apps ÔÇô they\r\n                often offer personalized discounts.\r\n              </li>\r\n              <li>\r\n                <strong>Energy Supplier Switching:</strong> Use comparison sites to ensure you're on\r\n                the best tariff for your usage.\r\n              </li>\r\n              <li>\r\n                <strong>Water-Saving Devices:</strong> Simple devices like shower timers or low-flow\r\n                showerheads can reduce both water and energy bills.\r\n              </li>\r\n              <li>\r\n                <strong>Draft Proofing:</strong> Seal gaps around windows and doors ÔÇô it's cheap and\r\n                effective.\r\n              </li>\r\n            </ul>\r\n\r\n            <Separator className=\"my-8\" />\r\n\r\n            <h2>Making it Sustainable: The Long Game</h2>\r\n            <p>\r\n              The key to lasting financial change isn't dramatic overnight transformations ÔÇô it's\r\n              building sustainable habits that compound over time. Start with one or two changes\r\n              from this guide, master them, then gradually add more. Your future self (and your bank\r\n              account) will thank you.\r\n            </p>\r\n\r\n            <Card className=\"my-8 bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700\">\r\n              <CardContent className=\"p-6\">\r\n                <h3 className=\"text-lg font-semibold text-green-800 dark:text-green-200 mb-3\">\r\n                  ­ƒÆí Pro Tip: Track Your Progress\r\n                </h3>\r\n                <p className=\"text-green-700 dark:text-green-300\">\r\n                  Use our{' '}\r\n                  <Link to={createPageUrl('BudgetCalculator')} className=\"underline font-medium\">\r\n                    Budget Planner\r\n                  </Link>{' '}\r\n                  to track your grocery and energy spending before and after implementing these\r\n                  tips. Seeing the actual numbers will keep you motivated!\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </article>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\BreakEvenCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 92,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Target, TrendingUp } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst breakEvenFAQs = [\r\n  {\r\n    question: 'What is a break-even point?',\r\n    answer:\r\n      \"The break-even point is where your total revenue equals your total costs, meaning you're making neither a profit nor a loss. It's a critical metric for business planning and pricing decisions.\",\r\n  },\r\n  {\r\n    question: \"What's the difference between fixed and variable costs?\",\r\n    answer:\r\n      'Fixed costs remain constant regardless of sales volume (e.g., rent, insurance, salaries). Variable costs change with production or sales volume (e.g., materials, commission, delivery costs).',\r\n  },\r\n  {\r\n    question: 'How can I use break-even analysis for pricing?',\r\n    answer:\r\n      'Break-even analysis helps you set minimum prices to cover costs. You can also use it to evaluate the impact of price changes, cost reductions, or volume increases on profitability.',\r\n  },\r\n];\r\n\r\nexport default function BreakEvenCalculator() {\r\n  const [fixedCosts, setFixedCosts] = useState('');\r\n  const [pricePerUnit, setPricePerUnit] = useState('');\r\n  const [variableCostPerUnit, setVariableCostPerUnit] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const fixed = Number(fixedCosts) || 0;\r\n    const price = Number(pricePerUnit) || 0;\r\n    const variableCost = Number(variableCostPerUnit) || 0;\r\n\r\n    if (fixed <= 0 || price <= 0 || variableCost < 0 || price <= variableCost) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const contributionMargin = price - variableCost;\r\n    const contributionMarginPercent = (contributionMargin / price) * 100;\r\n    const breakEvenUnits = Math.ceil(fixed / contributionMargin);\r\n    const breakEvenRevenue = breakEvenUnits * price;\r\n\r\n    // Calculate scenarios\r\n    const scenarios = [\r\n      { units: breakEvenUnits * 0.5, revenue: breakEvenUnits * 0.5 * price },\r\n      { units: breakEvenUnits, revenue: breakEvenRevenue },\r\n      { units: breakEvenUnits * 1.5, revenue: breakEvenUnits * 1.5 * price },\r\n      { units: breakEvenUnits * 2, revenue: breakEvenUnits * 2 * price },\r\n    ].map((scenario) => {\r\n      const totalVariableCosts = scenario.units * variableCost;\r\n      const totalCosts = fixed + totalVariableCosts;\r\n      const profit = scenario.revenue - totalCosts;\r\n      return { ...scenario, profit, totalCosts };\r\n    });\r\n\r\n    const newResults = {\r\n      breakEvenUnits,\r\n      breakEvenRevenue,\r\n      contributionMargin,\r\n      contributionMarginPercent,\r\n      scenarios,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Break-Even Units', `${newResults.breakEvenUnits}`],\r\n      ['Break-Even Revenue', `┬ú${newResults.breakEvenRevenue.toFixed(2)}`],\r\n      ['Contribution Margin per Unit', `┬ú${newResults.contributionMargin.toFixed(2)}`],\r\n      ['Contribution Margin %', `${newResults.contributionMarginPercent.toFixed(1)}%`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [fixedCosts, pricePerUnit, variableCostPerUnit]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Business Break-Even Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Calculate how many units you need to sell to break even and start making profit.\r\n              Essential for pricing and business planning.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Break-Even Analysis</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Business Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"fixedCosts\">Monthly Fixed Costs</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"fixedCosts\"\r\n                      type=\"number\"\r\n                      value={fixedCosts}\r\n                      onChange={(e) => setFixedCosts(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 5000\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">Rent, salaries, insurance, etc.</p>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"pricePerUnit\">Price per Unit/Service</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"pricePerUnit\"\r\n                      type=\"number\"\r\n                      value={pricePerUnit}\r\n                      onChange={(e) => setPricePerUnit(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 50\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"variableCostPerUnit\">Variable Cost per Unit</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"variableCostPerUnit\"\r\n                      type=\"number\"\r\n                      value={variableCostPerUnit}\r\n                      onChange={(e) => setVariableCostPerUnit(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 20\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">Materials, commission, delivery, etc.</p>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Break-Even\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Break-Even Analysis</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"break-even-analysis\"\r\n                    title=\"Break-Even Analysis\"\r\n                  />\r\n                </div>\r\n                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                  <Card className=\"bg-orange-50 border-orange-200\">\r\n                    <CardContent className=\"p-6\">\r\n                      <h3 className=\"font-semibold text-orange-800 mb-2\">Break-Even Units</h3>\r\n                      <div className=\"text-4xl font-bold text-orange-900\">\r\n                        {results.breakEvenUnits.toLocaleString()}\r\n                      </div>\r\n                      <p className=\"text-sm text-orange-700\">Units per month</p>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card className=\"bg-green-50 border-green-200\">\r\n                    <CardContent className=\"p-6\">\r\n                      <h3 className=\"font-semibold text-green-800 mb-2\">Break-Even Revenue</h3>\r\n                      <div className=\"text-4xl font-bold text-green-900\">\r\n                        ┬ú\r\n                        {results.breakEvenRevenue.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 0,\r\n                        })}\r\n                      </div>\r\n                      <p className=\"text-sm text-green-700\">Monthly revenue needed</p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Contribution Analysis</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"p-4 bg-blue-50 rounded-lg\">\r\n                      <p className=\"text-sm text-blue-600\">Contribution Margin per Unit</p>\r\n                      <p className=\"text-lg font-semibold\">\r\n                        ┬ú{results.contributionMargin.toFixed(2)} (\r\n                        {results.contributionMarginPercent.toFixed(1)}%)\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Profit Scenarios</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-2\">\r\n                      {results.scenarios.map((scenario, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className={`flex justify-between p-3 rounded ${scenario.profit >= 0 ? 'bg-green-50' : 'bg-red-50'}`}\r\n                        >\r\n                          <span>\r\n                            {scenario.units.toLocaleString()} units (┬ú\r\n                            {scenario.revenue.toLocaleString()})\r\n                          </span>\r\n                          <span\r\n                            className={`font-semibold ${scenario.profit >= 0 ? 'text-green-800' : 'text-red-800'}`}\r\n                          >\r\n                            {scenario.profit >= 0 ? '+' : ''}┬ú{scenario.profit.toLocaleString()}\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready for your break-even analysis?</h3>\r\n                  <p>Enter your business costs and pricing to get started.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={breakEvenFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\BudgetCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 133,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  PoundSterling,\r\n  Plus,\r\n  Trash2,\r\n  PieChart,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  AlertTriangle,\r\n  Target,\r\n  Calculator,\r\n} from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils'; // Imported createPageUrl from utils\r\n\r\n// Define placeholder data for government budget\r\nconst governmentBudget2025 = {\r\n  // Using a realistic estimated value for UK government total revenue, in millions of GBP.\r\n  // ~┬ú1.1 trillion is 1,100,000 million.\r\n  // The display text \"┬ú{(governmentBudget2025.totalRevenue / 1000).toFixed(0)}bn\" means this value\r\n  // should be in millions, so when divided by 1000, it becomes billions.\r\n  totalRevenue: 1100000,\r\n};\r\n\r\nconst defaultIncomeCategories = [\r\n  { name: 'Primary Salary', amount: '' },\r\n  { name: 'Secondary Income', amount: '' },\r\n];\r\n\r\nconst defaultExpenseCategories = [\r\n  { name: 'Housing (Rent/Mortgage)', amount: '', essential: true },\r\n  { name: 'Utilities', amount: '', essential: true },\r\n  { name: 'Groceries', amount: '', essential: true },\r\n  { name: 'Transport', amount: '', essential: true },\r\n  { name: 'Dining Out', amount: '', essential: false },\r\n  { name: 'Entertainment', amount: '', essential: false },\r\n];\r\n\r\nexport default function BudgetCalculator() {\r\n  const [incomeItems, setIncomeItems] = useState(defaultIncomeCategories);\r\n  const [expenseItems, setExpenseItems] = useState(defaultExpenseCategories);\r\n  const [savingsGoal, setSavingsGoal] = useState('');\r\n  const [csvData, setCsvData] = useState(null);\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const updateIncomeItem = (index, field, value) => {\r\n    const newItems = [...incomeItems];\r\n    newItems[index] = { ...newItems[index], [field]: value };\r\n    setIncomeItems(newItems);\r\n  };\r\n\r\n  const updateExpenseItem = (index, field, value) => {\r\n    const newItems = [...expenseItems];\r\n    newItems[index] = { ...newItems[index], [field]: value };\r\n    setExpenseItems(newItems);\r\n  };\r\n\r\n  const addIncomeItem = () => {\r\n    setIncomeItems([...incomeItems, { name: '', amount: '' }]);\r\n  };\r\n\r\n  const addExpenseItem = () => {\r\n    setExpenseItems([...expenseItems, { name: '', amount: '', essential: false }]);\r\n  };\r\n\r\n  const removeIncomeItem = (index) => {\r\n    setIncomeItems(incomeItems.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const removeExpenseItem = (index) => {\r\n    setExpenseItems(expenseItems.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    const totalIncome = incomeItems.reduce((sum, item) => sum + (Number(item.amount) || 0), 0);\r\n    const totalExpenses = expenseItems.reduce((sum, item) => sum + (Number(item.amount) || 0), 0);\r\n    const essentialExpenses = expenseItems\r\n      .filter((item) => item.essential)\r\n      .reduce((sum, item) => sum + (Number(item.amount) || 0), 0);\r\n    const nonEssentialExpenses = expenseItems\r\n      .filter((item) => !item.essential)\r\n      .reduce((sum, item) => sum + (Number(item.amount) || 0), 0);\r\n    const remaining = totalIncome - totalExpenses;\r\n    const currentSavingsGoal = Number(savingsGoal) || 0;\r\n    const savingsShortfall = currentSavingsGoal - Math.max(0, remaining);\r\n\r\n    const newResults = {\r\n      totalIncome,\r\n      totalExpenses,\r\n      essentialExpenses,\r\n      nonEssentialExpenses,\r\n      remaining,\r\n      savingsGoal: currentSavingsGoal,\r\n      savingsShortfall,\r\n    };\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Type', 'Category', 'Amount'],\r\n      ...incomeItems.map((item) => [\r\n        'Income',\r\n        item.name,\r\n        `┬ú${(Number(item.amount) || 0).toFixed(2)}`,\r\n      ]),\r\n      ['', '', ''],\r\n      ...expenseItems.map((item) => [\r\n        'Expense',\r\n        item.name,\r\n        `┬ú${(Number(item.amount) || 0).toFixed(2)}`,\r\n      ]),\r\n      ['', '', ''],\r\n      ['Summary', 'Total Income', `┬ú${totalIncome.toFixed(2)}`],\r\n      ['Summary', 'Total Expenses', `┬ú${totalExpenses.toFixed(2)}`],\r\n      ['Summary', 'Remaining', `┬ú${remaining.toFixed(2)}`],\r\n      ['Summary', 'Savings Goal', `┬ú${currentSavingsGoal.toFixed(2)}`],\r\n      [\r\n        'Summary',\r\n        'Savings Shortfall',\r\n        savingsShortfall > 0 ? `┬ú${savingsShortfall.toFixed(2)}` : '┬ú0.00',\r\n      ],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      {/* Page Header */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK Budget Planner\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              A good budget is the foundation of financial freedom. Tell your money where to go,\r\n              instead of wondering where it went.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Calculator Content */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Monthly Budget Results</div>\r\n\r\n        <div className=\"grid lg:grid-cols-3 gap-8 printable-grid-cols-1\">\r\n          {/* Input Sections */}\r\n          <div className=\"lg:col-span-2 grid md:grid-cols-2 gap-8 non-printable\">\r\n            {/* Income Section */}\r\n            <div className=\"space-y-6\">\r\n              <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2 text-green-700\">\r\n                    <TrendingUp className=\"w-5 h-5\" />\r\n                    Monthly Income\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  {incomeItems.map((item, index) => (\r\n                    <div key={index} className=\"space-y-2\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Input\r\n                          value={item.name}\r\n                          onChange={(e) => updateIncomeItem(index, 'name', e.target.value)}\r\n                          className=\"flex-1\"\r\n                          placeholder=\"e.g. Primary Salary\"\r\n                        />\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"icon\"\r\n                          onClick={() => removeIncomeItem(index)}\r\n                          className=\"text-red-500 hover:text-red-700\"\r\n                        >\r\n                          <Trash2 className=\"w-4 h-4\" />\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          type=\"number\"\r\n                          value={item.amount}\r\n                          onChange={(e) => updateIncomeItem(index, 'amount', e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"e.g. 3000\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    onClick={addIncomeItem}\r\n                    className=\"w-full flex items-center gap-2\"\r\n                  >\r\n                    <Plus className=\"w-4 h-4\" />\r\n                    Add Income Source\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            {/* Expenses Section */}\r\n            <div className=\"space-y-6\">\r\n              <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2 text-red-700\">\r\n                    <TrendingDown className=\"w-5 h-5\" />\r\n                    Monthly Expenses\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  {expenseItems.map((item, index) => (\r\n                    <div key={index} className=\"space-y-2\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Input\r\n                          value={item.name}\r\n                          onChange={(e) => updateExpenseItem(index, 'name', e.target.value)}\r\n                          className=\"flex-1\"\r\n                          placeholder=\"e.g. Rent\"\r\n                        />\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={item.essential}\r\n                            onChange={(e) =>\r\n                              updateExpenseItem(index, 'essential', e.target.checked)\r\n                            }\r\n                            className=\"w-4 h-4\"\r\n                          />\r\n                          <span className=\"text-xs text-gray-500\">Essential</span>\r\n                        </div>\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"icon\"\r\n                          onClick={() => removeExpenseItem(index)}\r\n                          className=\"text-red-500 hover:text-red-700\"\r\n                        >\r\n                          <Trash2 className=\"w-4 h-4\" />\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          type=\"number\"\r\n                          value={item.amount}\r\n                          onChange={(e) => updateExpenseItem(index, 'amount', e.target.value)}\r\n                          className={`pl-10 ${item.essential ? 'border-orange-200 bg-orange-50' : ''}`}\r\n                          placeholder=\"e.g. 1200\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    onClick={addExpenseItem}\r\n                    className=\"w-full flex items-center gap-2\"\r\n                  >\r\n                    <Plus className=\"w-4 h-4\" />\r\n                    Add Expense\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n            <div className=\"md:col-span-2\">\r\n              <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <CardContent className=\"p-6 space-y-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label>Monthly Savings Target</Label>\r\n                    <div className=\"relative\">\r\n                      <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                      <Input\r\n                        type=\"number\"\r\n                        value={savingsGoal}\r\n                        onChange={(e) => setSavingsGoal(e.target.value)}\r\n                        className=\"pl-10\"\r\n                        placeholder=\"e.g. 500\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                    <Calculator className=\"w-5 h-5 mr-2\" />\r\n                    Calculate Budget\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Results Panel */}\r\n          <div className=\"space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200\">\r\n                    Your Budget Summary\r\n                  </h2>\r\n                </div>\r\n\r\n                {/* NEW: Government Budget Inspiration Section */}\r\n                <Card className=\"bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/30 dark:to-purple-900/30 border-blue-200 dark:border-blue-800 non-printable\">\r\n                  <CardContent className=\"p-6\">\r\n                    <h3 className=\"text-xl font-bold text-blue-900 dark:text-blue-100 mb-2\">\r\n                      ­ƒÆí Budgeting Like the Government\r\n                    </h3>\r\n                    <p className=\"text-blue-800 dark:text-blue-200 mb-4\">\r\n                      Just as the UK government carefully plans its ┬ú\r\n                      {(governmentBudget2025.totalRevenue / 1000).toLocaleString(undefined, {\r\n                        maximumFractionDigits: 0,\r\n                      })}\r\n                      bn budget, you should manage your personal finances with the same discipline.\r\n                    </p>\r\n                    <Link to={createPageUrl('UKGovernmentBudget')}>\r\n                      <Button\r\n                        variant=\"outline\"\r\n                        className=\"border-blue-300 text-blue-700 hover:bg-blue-100 dark:border-blue-600 dark:text-blue-300 dark:hover:bg-blue-900/50\"\r\n                      >\r\n                        See How the Government Budgets ÔåÆ\r\n                      </Button>\r\n                    </Link>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Budget Summary */}\r\n                <Card\r\n                  className={`${results.remaining >= 0 ? 'bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700' : 'bg-red-50 dark:bg-red-900/30 border-red-200 dark:border-red-700'}`}\r\n                >\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <PieChart className=\"w-5 h-5\" />\r\n                      Budget Summary\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"space-y-3\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Total Income:</span>\r\n                        <span className=\"font-semibold text-green-600\">\r\n                          ┬ú{results.totalIncome.toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Total Expenses:</span>\r\n                        <span className=\"font-semibold text-red-600\">\r\n                          -┬ú{results.totalExpenses.toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                      <div\r\n                        className={`flex justify-between text-lg font-bold pt-2 border-t ${results.remaining >= 0 ? 'text-green-700' : 'text-red-700'}`}\r\n                      >\r\n                        <span>Remaining:</span>\r\n                        <span>\r\n                          {results.remaining >= 0 ? '┬ú' : '-┬ú'}\r\n                          {Math.abs(results.remaining).toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {results.remaining < 0 && (\r\n                      <div className=\"p-3 bg-red-100 rounded-lg\">\r\n                        <p className=\"text-sm text-red-800\">\r\n                          ÔÜá´©Å You're overspending by ┬ú{Math.abs(results.remaining).toLocaleString()}{' '}\r\n                          per month\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Detailed Income Breakdown */}\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-green-700\">\r\n                      <TrendingUp className=\"w-5 h-5\" />\r\n                      Income Breakdown\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-2\">\r\n                    {incomeItems\r\n                      .filter((item) => Number(item.amount) > 0)\r\n                      .map((item, index) => (\r\n                        <div key={index} className=\"flex justify-between text-sm\">\r\n                          <span>{item.name || 'Unnamed Income'}</span>\r\n                          <span className=\"font-medium text-green-600\">\r\n                            ┬ú{(Number(item.amount) || 0).toLocaleString()}\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Detailed Expense Breakdown */}\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-red-700\">\r\n                      <TrendingDown className=\"w-5 h-5\" />\r\n                      Expense Breakdown\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-2\">\r\n                    {expenseItems\r\n                      .filter((item) => Number(item.amount) > 0)\r\n                      .map((item, index) => (\r\n                        <div key={index} className=\"flex justify-between text-sm\">\r\n                          <span>\r\n                            {item.name || 'Unnamed Expense'}{' '}\r\n                            {item.essential && (\r\n                              <span className=\"text-xs text-orange-500\">(Essential)</span>\r\n                            )}\r\n                          </span>\r\n                          <span className=\"font-medium text-red-600\">\r\n                            -┬ú{(Number(item.amount) || 0).toLocaleString()}\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Savings Goals */}\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardHeader>\r\n                    <CardTitle>Savings Goal</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"space-y-3\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Savings Goal:</span>\r\n                        <span>┬ú{results.savingsGoal.toLocaleString()}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Available to Save:</span>\r\n                        <span\r\n                          className={results.remaining >= 0 ? 'text-green-600' : 'text-red-600'}\r\n                        >\r\n                          ┬ú{Math.max(0, results.remaining).toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                      {results.savingsShortfall > 0 ? (\r\n                        <div className=\"p-3 bg-yellow-100 rounded-lg\">\r\n                          <p className=\"text-sm text-yellow-800\">\r\n                            ­ƒÆí You need to save ┬ú{results.savingsShortfall.toLocaleString()} more to\r\n                            reach your goal\r\n                          </p>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"p-3 bg-green-100 rounded-lg\">\r\n                          <p className=\"text-sm text-green-800\">\r\n                            Ô£à You can meet your savings goal with ┬ú\r\n                            {(results.remaining - results.savingsGoal).toLocaleString()} left over!\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Budget Tips */}\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardHeader>\r\n                    <CardTitle>Budget Insights</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3 text-sm\">\r\n                    <div className=\"p-3 bg-blue-50 rounded-lg\">\r\n                      <p className=\"text-blue-800\">\r\n                        <strong>50/30/20 Rule:</strong> Aim for 50% needs, 30% wants, 20% savings\r\n                      </p>\r\n                      <div className=\"mt-2 space-y-1 text-xs\">\r\n                        <div>\r\n                          Needs: ┬ú{(results.totalIncome * 0.5).toLocaleString()} (Currently: ┬ú\r\n                          {results.essentialExpenses.toLocaleString()})\r\n                        </div>\r\n                        <div>\r\n                          Wants: ┬ú{(results.totalIncome * 0.3).toLocaleString()} (Currently: ┬ú\r\n                          {results.nonEssentialExpenses.toLocaleString()})\r\n                        </div>\r\n                        <div>\r\n                          Savings: ┬ú{(results.totalIncome * 0.2).toLocaleString()} (Goal: ┬ú\r\n                          {results.savingsGoal.toLocaleString()})\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {results.nonEssentialExpenses > results.essentialExpenses && (\r\n                      <div className=\"p-3 bg-orange-50 rounded-lg\">\r\n                        <p className=\"text-orange-800\">\r\n                          ­ƒÆ░ Your non-essential spending exceeds essential costs. Consider reviewing\r\n                          discretionary expenses.\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n\r\n                    {results.essentialExpenses > results.totalIncome * 0.6 && (\r\n                      <div className=\"p-3 bg-red-50 rounded-lg\">\r\n                        <p className=\"text-red-800\">\r\n                          ­ƒÅá Essential expenses are high. Consider ways to reduce housing,\r\n                          transport, or utility costs.\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <div className=\"non-printable pt-6\">\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"budget-summary\"\r\n                    title=\"Budget Summary\"\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px] bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <div className=\"text-center text-gray-500 dark:text-gray-400\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to see your budget?</h3>\r\n                  <p>Fill in your income and expenses, then click \"Calculate Budget\".</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\BusinessLoanCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 107,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { PoundSterling, Calculator, Building2, Calendar, TrendingUp } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst businessLoanFAQs = [\r\n  {\r\n    question: 'What types of business loans are available in the UK?',\r\n    answer:\r\n      'Common types include term loans, business overdrafts, asset finance, invoice finance, and government-backed loans like Start Up Loans or Bounce Back Loans. Each has different terms, rates, and eligibility criteria.',\r\n  },\r\n  {\r\n    question: 'How do lenders assess business loan applications?',\r\n    answer:\r\n      'Lenders look at your business plan, cash flow forecasts, trading history, personal and business credit scores, collateral, and sometimes require personal guarantees. New businesses may need to provide more detailed projections.',\r\n  },\r\n  {\r\n    question: 'Can I deduct business loan interest from my taxes?',\r\n    answer:\r\n      'Yes, interest payments on business loans are typically tax-deductible as a business expense. However, the principal repayment is not deductible. Always consult with an accountant for your specific situation.',\r\n  },\r\n];\r\n\r\nexport default function BusinessLoanCalculator() {\r\n  const [loanAmount, setLoanAmount] = useState('');\r\n  const [interestRate, setInterestRate] = useState('');\r\n  const [loanTerm, setLoanTerm] = useState('');\r\n  const [loanType, setLoanType] = useState('term');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const P = Number(loanAmount) || 0;\r\n    const r = (Number(interestRate) || 0) / 100 / 12;\r\n    const n = (Number(loanTerm) || 0) * 12;\r\n\r\n    if (P <= 0 || r <= 0 || n <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    let monthlyPayment;\r\n    let totalRepayment;\r\n    let totalInterest;\r\n\r\n    if (loanType === 'term') {\r\n      // Standard term loan calculation\r\n      monthlyPayment = (P * (r * Math.pow(1 + r, n))) / (Math.pow(1 + r, n) - 1);\r\n      totalRepayment = monthlyPayment * n;\r\n      totalInterest = totalRepayment - P;\r\n    } else {\r\n      // Interest-only loan\r\n      monthlyPayment = P * r;\r\n      totalInterest = monthlyPayment * n;\r\n      totalRepayment = totalInterest + P;\r\n    }\r\n\r\n    // Business impact calculations\r\n    const monthlyInterestCost = totalInterest / n;\r\n    const annualInterestCost = monthlyInterestCost * 12;\r\n    const taxSavings = annualInterestCost * 0.19; // Corporation tax rate for small companies\r\n\r\n    const newResults = {\r\n      monthlyPayment,\r\n      totalRepayment,\r\n      totalInterest,\r\n      annualInterestCost,\r\n      taxSavings,\r\n      loanAmount: P,\r\n      effectiveRate: (totalInterest / P / (n / 12)) * 100,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Monthly Payment', `┬ú${newResults.monthlyPayment.toFixed(2)}`],\r\n      ['Total Repayment', `┬ú${newResults.totalRepayment.toFixed(2)}`],\r\n      ['Total Interest', `┬ú${newResults.totalInterest.toFixed(2)}`],\r\n      ['Annual Interest Cost', `┬ú${newResults.annualInterestCost.toFixed(2)}`],\r\n      ['Tax Savings (19% Corp Tax)', `┬ú${newResults.taxSavings.toFixed(2)}`],\r\n      ['Effective Interest Rate', `${newResults.effectiveRate.toFixed(2)}%`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [loanAmount, interestRate, loanTerm, loanType]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Business Loan Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Calculate monthly payments and total costs for business loans, including the tax\r\n              benefits of interest deductibility.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Business Loan Calculation</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Loan Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"loanAmount\">Loan Amount</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"loanAmount\"\r\n                      type=\"number\"\r\n                      value={loanAmount}\r\n                      onChange={(e) => setLoanAmount(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 50000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"interestRate\">Annual Interest Rate (%)</Label>\r\n                  <div className=\"relative\">\r\n                    <TrendingUp className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"interestRate\"\r\n                      type=\"number\"\r\n                      value={interestRate}\r\n                      onChange={(e) => setInterestRate(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 6.5\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"loanTerm\">Loan Term (Years)</Label>\r\n                  <div className=\"relative\">\r\n                    <Calendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"loanTerm\"\r\n                      type=\"number\"\r\n                      value={loanTerm}\r\n                      onChange={(e) => setLoanTerm(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 5\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Loan Type</Label>\r\n                  <Select value={loanType} onValueChange={setLoanType}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"term\">Term Loan (Capital & Interest)</SelectItem>\r\n                      <SelectItem value=\"interest_only\">Interest Only</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Business Loan Summary</h2>\r\n                  <ExportActions csvData={csvData} fileName=\"business-loan\" title=\"Business Loan\" />\r\n                </div>\r\n                <Card className=\"bg-blue-50 border-blue-200\">\r\n                  <CardContent className=\"p-6\">\r\n                    <h3 className=\"font-semibold text-blue-800 mb-2\">Monthly Payment</h3>\r\n                    <div className=\"text-4xl font-bold text-blue-900\">\r\n                      ┬ú\r\n                      {results.monthlyPayment.toLocaleString('en-GB', {\r\n                        minimumFractionDigits: 2,\r\n                        maximumFractionDigits: 2,\r\n                      })}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Loan Costs</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-3\">\r\n                      <div className=\"p-3 bg-gray-50 rounded\">\r\n                        <p className=\"text-sm text-gray-600\">Total Interest</p>\r\n                        <p className=\"text-lg font-semibold\">\r\n                          ┬ú\r\n                          {results.totalInterest.toLocaleString('en-GB', {\r\n                            maximumFractionDigits: 0,\r\n                          })}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"p-3 bg-gray-50 rounded\">\r\n                        <p className=\"text-sm text-gray-600\">Total Repayment</p>\r\n                        <p className=\"text-lg font-semibold\">\r\n                          ┬ú\r\n                          {results.totalRepayment.toLocaleString('en-GB', {\r\n                            maximumFractionDigits: 0,\r\n                          })}\r\n                        </p>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Tax Benefits</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-3\">\r\n                      <div className=\"p-3 bg-green-50 rounded\">\r\n                        <p className=\"text-sm text-green-600\">Annual Tax Savings</p>\r\n                        <p className=\"text-lg font-semibold\">\r\n                          ┬ú\r\n                          {results.taxSavings.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                        </p>\r\n                        <p className=\"text-xs text-green-500\">Interest is tax-deductible</p>\r\n                      </div>\r\n                      <div className=\"p-3 bg-blue-50 rounded\">\r\n                        <p className=\"text-sm text-blue-600\">Effective Rate</p>\r\n                        <p className=\"text-lg font-semibold\">{results.effectiveRate.toFixed(2)}%</p>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n                {loanType === 'interest_only' && (\r\n                  <Card className=\"border-yellow-300 bg-yellow-50\">\r\n                    <CardContent className=\"p-4\">\r\n                      <p className=\"text-sm text-yellow-800\">\r\n                        <strong>Note:</strong> With interest-only loans, you'll still owe the full ┬ú\r\n                        {results.loanAmount.toLocaleString()} at the end of the term.\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to calculate?</h3>\r\n                  <p>Enter your business loan details to see the costs.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={businessLoanFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\BuyToLetMortgageCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 95,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Building, Percent } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst btlFAQs = [\r\n  {\r\n    question: 'What is rental yield?',\r\n    answer:\r\n      \"Rental yield is the return you get on a property investment from rent, expressed as an an annual percentage of the property's value. A higher yield means a better return.\",\r\n  },\r\n  {\r\n    question: 'What is an Interest Coverage Ratio (ICR)?',\r\n    answer:\r\n      'ICR is a test used by buy-to-let lenders to ensure the expected rental income will cover the mortgage interest payments by a certain margin. A common requirement is for rent to be at least 125% to 145% of the monthly mortgage payment.',\r\n  },\r\n  {\r\n    question: 'How much deposit do I need for a buy-to-let mortgage?',\r\n    answer:\r\n      \"Typically, you need a larger deposit for a buy-to-let mortgage than for a residential one. Most lenders require a minimum of 25% of the property's value, but a larger deposit can get you better interest rates.\",\r\n  },\r\n];\r\n\r\nexport default function BuyToLetMortgageCalculator() {\r\n  const [propertyValue, setPropertyValue] = useState('');\r\n  const [deposit, setDeposit] = useState('');\r\n  const [interestRate, setInterestRate] = useState('');\r\n  const [monthlyRent, setMonthlyRent] = useState('');\r\n  const [otherCosts, setOtherCosts] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const pv = Number(propertyValue) || 0;\r\n    const dep = Number(deposit) || 0;\r\n    const rate = Number(interestRate) || 0;\r\n    const rent = Number(monthlyRent) || 0;\r\n    const costs = Number(otherCosts) || 0;\r\n\r\n    const loanAmount = pv - dep;\r\n    if (pv <= 0 || rent <= 0 || loanAmount <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true); // Indicate that a calculation attempt was made\r\n      return;\r\n    }\r\n\r\n    const monthlyInterest = (loanAmount * (rate / 100)) / 12;\r\n    const monthlyProfit = rent - monthlyInterest - costs;\r\n    const annualProfit = monthlyProfit * 12;\r\n    const rentalYield = ((rent * 12) / pv) * 100;\r\n    const ltv = (loanAmount / pv) * 100;\r\n\r\n    // Ensure monthlyInterest is not zero to avoid division by zero\r\n    const icr = monthlyInterest !== 0 ? (rent / monthlyInterest) * 100 : 0;\r\n\r\n    const newResults = {\r\n      monthlyProfit,\r\n      annualProfit,\r\n      rentalYield,\r\n      ltv,\r\n      icr,\r\n      monthlyInterest,\r\n      loanAmount,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Property Value', `┬ú${pv.toFixed(2)}`],\r\n      ['Deposit', `┬ú${dep.toFixed(2)}`],\r\n      ['Loan Amount', `┬ú${loanAmount.toFixed(2)}`],\r\n      ['Interest Rate', `${rate}%`],\r\n      ['Expected Monthly Rent', `┬ú${rent.toFixed(2)}`],\r\n      ['Other Monthly Costs', `┬ú${costs.toFixed(2)}`],\r\n      ['---', '---'],\r\n      ['Monthly Profit', `┬ú${monthlyProfit.toFixed(2)}`],\r\n      ['Annual Profit', `┬ú${annualProfit.toFixed(2)}`],\r\n      ['Rental Yield', `${rentalYield.toFixed(2)}%`],\r\n      ['Loan to Value (LTV)', `${ltv.toFixed(2)}%`],\r\n      ['Interest Coverage Ratio (ICR)', `${icr.toFixed(2)}%`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  }, [propertyValue, deposit, interestRate, monthlyRent, otherCosts]);\r\n\r\n  // Removed: useEffect for auto-calculation\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Buy-to-Let Mortgage &amp; Rental Yield Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Analyse the profitability and viability of a UK property investment. Calculate rental\r\n              yield, monthly profit, and key lender metrics like ICR.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid lg:grid-cols-5 gap-8\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Investment Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"space-y-1\">\r\n                  <Label htmlFor=\"propertyValue\">Property Value</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"propertyValue\"\r\n                      type=\"number\"\r\n                      value={propertyValue}\r\n                      onChange={(e) => setPropertyValue(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 250000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-1\">\r\n                  <Label htmlFor=\"deposit\">Deposit Amount</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"deposit\"\r\n                      type=\"number\"\r\n                      value={deposit}\r\n                      onChange={(e) => setDeposit(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 62500\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-1\">\r\n                  <Label htmlFor=\"interestRate\">Mortgage Interest Rate (APR)</Label>\r\n                  <div className=\"relative\">\r\n                    <Percent className=\"absolute right-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"interestRate\"\r\n                      type=\"number\"\r\n                      value={interestRate}\r\n                      onChange={(e) => setInterestRate(e.target.value)}\r\n                      className=\"pr-10\"\r\n                      placeholder=\"e.g. 5.5\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-1\">\r\n                  <Label htmlFor=\"monthlyRent\">Expected Monthly Rent</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"monthlyRent\"\r\n                      type=\"number\"\r\n                      value={monthlyRent}\r\n                      onChange={(e) => setMonthlyRent(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 1200\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-1\">\r\n                  <Label htmlFor=\"otherCosts\">Other Monthly Costs</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"otherCosts\"\r\n                      type=\"number\"\r\n                      value={otherCosts}\r\n                      onChange={(e) => setOtherCosts(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 200 (insurance, repairs)\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Investment Analysis</h2>\r\n                  <ExportActions csvData={csvData} fileName=\"btl-summary\" title=\"BTL Summary\" />\r\n                </div>\r\n\r\n                <Card className=\"text-center bg-green-50 border-green-200\">\r\n                  <CardHeader>\r\n                    <CardTitle>Estimated Monthly Profit</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <p\r\n                      className={`text-5xl font-bold ${results.monthlyProfit > 0 ? 'text-green-800' : 'text-red-700'}`}\r\n                    >\r\n                      ┬ú{results.monthlyProfit.toFixed(2)}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      Annual Profit: ┬ú{results.annualProfit.toFixed(2)}\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <div className=\"grid md:grid-cols-2 gap-6\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Key Ratios</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-3\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Rental Yield:</span>{' '}\r\n                        <span className=\"font-semibold\">{results.rentalYield.toFixed(2)}%</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Loan to Value (LTV):</span>{' '}\r\n                        <span className=\"font-semibold\">{results.ltv.toFixed(2)}%</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Interest Coverage (ICR):</span>{' '}\r\n                        <span className=\"font-semibold\">{results.icr.toFixed(2)}%</span>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Financials</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-3\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Loan Amount:</span>{' '}\r\n                        <span className=\"font-semibold\">\r\n                          ┬ú{results.loanAmount.toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Monthly Interest:</span>{' '}\r\n                        <span className=\"font-semibold text-red-600\">\r\n                          ┬ú{results.monthlyInterest.toFixed(2)}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Monthly Rent:</span>{' '}\r\n                        <span className=\"font-semibold text-green-600\">\r\n                          ┬ú{Number(monthlyRent).toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Lender Assessment</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    {results.icr < 125 ? (\r\n                      <p className=\"text-red-700\">\r\n                        Your Interest Coverage Ratio (ICR) is below the typical 125% minimum. You\r\n                        may struggle to get this mortgage.\r\n                      </p>\r\n                    ) : results.icr < 145 ? (\r\n                      <p className=\"text-amber-700\">\r\n                        Your ICR is acceptable for some lenders, but a higher ratio would provide\r\n                        more options and better rates.\r\n                      </p>\r\n                    ) : (\r\n                      <p className=\"text-green-700\">\r\n                        Your ICR is strong, which should be attractive to most buy-to-let lenders.\r\n                      </p>\r\n                    )}\r\n                    {results.ltv > 75 && (\r\n                      <p className=\"mt-2 text-amber-700\">\r\n                        Your Loan-to-Value (LTV) is above 75%. You may need a larger deposit for\r\n                        most BTL products.\r\n                      </p>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px] bg-gray-50\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Building className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Analyse your next property investment</h3>\r\n                  <p>Enter the deal details to see the numbers.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={btlFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\CapitalGainsTaxCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 119,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { PoundSterling, Calculator, TrendingUp, User } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst CGT_ANNUAL_EXEMPTION = 3000; // For 2024/25 tax year\r\n\r\nconst cgtFAQs = [\r\n  {\r\n    question: 'What is Capital Gains Tax (CGT)?',\r\n    answer:\r\n      \"Capital Gains Tax is a tax on the profit (or 'gain') you make when you sell or dispose of an asset that has increased in value. It's the gain you make that is taxed, not the total amount of money you receive.\",\r\n  },\r\n  {\r\n    question: 'What is the CGT annual exemption?',\r\n    answer: `For the 2024/25 tax year, the annual exemption is ┬ú3,000. This means you can make gains up to this amount in a tax year without having to pay any Capital Gains Tax.`,\r\n  },\r\n  {\r\n    question: 'How does my income tax band affect my CGT rate?',\r\n    answer:\r\n      'The rate of CGT you pay depends on your income tax band. Basic-rate taxpayers pay a lower rate of CGT than higher or additional-rate taxpayers. If your capital gain, when added to your income, pushes you into a higher tax band, part of the gain will be taxed at the higher rate.',\r\n  },\r\n];\r\n\r\nexport default function CapitalGainsTaxCalculator() {\r\n  const [sellingPrice, setSellingPrice] = useState('');\r\n  const [purchasePrice, setPurchasePrice] = useState('');\r\n  const [costs, setCosts] = useState('');\r\n  const [assetType, setAssetType] = useState('property');\r\n  const [income, setIncome] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const salePrice = Number(sellingPrice) || 0;\r\n    const buyPrice = Number(purchasePrice) || 0;\r\n    const totalCosts = Number(costs) || 0;\r\n    const annualIncome = Number(income) || 0;\r\n\r\n    if (salePrice <= 0 || buyPrice <= 0 || annualIncome <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const totalGain = salePrice - buyPrice - totalCosts;\r\n    if (totalGain <= 0) {\r\n      setResults({ totalGain, taxableGain: 0, cgtPayable: 0, breakdown: [] });\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const taxableGain = Math.max(0, totalGain - CGT_ANNUAL_EXEMPTION);\r\n\r\n    const basicRateLimit = 50270;\r\n    const unusedBasicRateBand = Math.max(0, basicRateLimit - annualIncome);\r\n\r\n    let cgtPayable = 0;\r\n    let breakdown = [];\r\n    let gainRemaining = taxableGain;\r\n\r\n    const rates =\r\n      assetType === 'property' ? { basic: 0.18, higher: 0.24 } : { basic: 0.1, higher: 0.2 };\r\n\r\n    // Tax gain in basic rate band\r\n    if (unusedBasicRateBand > 0 && gainRemaining > 0) {\r\n      const gainInBasicBand = Math.min(gainRemaining, unusedBasicRateBand);\r\n      const taxInBasic = gainInBasicBand * rates.basic;\r\n      cgtPayable += taxInBasic;\r\n      breakdown.push({ rate: rates.basic * 100, amount: gainInBasicBand, tax: taxInBasic });\r\n      gainRemaining -= gainInBasicBand;\r\n    }\r\n\r\n    // Tax remaining gain in higher rate band\r\n    if (gainRemaining > 0) {\r\n      const taxInHigher = gainRemaining * rates.higher;\r\n      cgtPayable += taxInHigher;\r\n      breakdown.push({ rate: rates.higher * 100, amount: gainRemaining, tax: taxInHigher });\r\n    }\r\n\r\n    const newResults = {\r\n      totalGain,\r\n      taxableGain,\r\n      cgtPayable,\r\n      breakdown,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Total Gain', `┬ú${newResults.totalGain.toFixed(2)}`],\r\n      ['Taxable Gain (after exemption)', `┬ú${newResults.taxableGain.toFixed(2)}`],\r\n      ['Total CGT Payable', `┬ú${newResults.cgtPayable.toFixed(2)}`],\r\n      ...newResults.breakdown.map((b) => [`Taxed at ${b.rate}%`, `on ┬ú${b.amount.toFixed(2)}`]),\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [sellingPrice, purchasePrice, costs, assetType, income]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Capital Gains Tax Calculator (UK)\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Estimate your Capital Gains Tax (CGT) bill when selling assets like property, shares,\r\n              or cryptocurrency.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Capital Gains Tax Calculation</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Asset & Income Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label>Asset Type</Label>\r\n                  <Select value={assetType} onValueChange={setAssetType}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"property\">Residential Property</SelectItem>\r\n                      <SelectItem value=\"other\">Shares & Other Assets</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"sellingPrice\">Selling Price</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"sellingPrice\"\r\n                      type=\"number\"\r\n                      value={sellingPrice}\r\n                      onChange={(e) => setSellingPrice(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 300000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"purchasePrice\">Purchase Price</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"purchasePrice\"\r\n                      type=\"number\"\r\n                      value={purchasePrice}\r\n                      onChange={(e) => setPurchasePrice(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 200000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"costs\">Purchase & Selling Costs</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"costs\"\r\n                      type=\"number\"\r\n                      value={costs}\r\n                      onChange={(e) => setCosts(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 8000\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    e.g., stamp duty, legal fees, broker fees.\r\n                  </p>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"income\">Your Taxable Annual Income</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"income\"\r\n                      type=\"number\"\r\n                      value={income}\r\n                      onChange={(e) => setIncome(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 45000\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">This determines your CGT rate.</p>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate CGT\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your CGT Estimate</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"cgt-estimate\"\r\n                    title=\"Capital Gains Tax Estimate\"\r\n                  />\r\n                </div>\r\n                <Card className=\"bg-red-50 border-red-200\">\r\n                  <CardContent className=\"p-6\">\r\n                    <h3 className=\"font-semibold text-red-800 mb-2\">Estimated CGT Payable</h3>\r\n                    <div className=\"text-4xl font-bold text-red-900\">\r\n                      ┬ú\r\n                      {results.cgtPayable.toLocaleString('en-GB', {\r\n                        minimumFractionDigits: 2,\r\n                        maximumFractionDigits: 2,\r\n                      })}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Calculation Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"flex justify-between p-3 bg-gray-50 rounded\">\r\n                      <span>Total Gain:</span>\r\n                      <span className=\"font-medium\">┬ú{results.totalGain.toLocaleString()}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between p-3 bg-gray-50 rounded\">\r\n                      <span>Annual Exemption (2024/25):</span>\r\n                      <span className=\"font-medium text-green-600\">\r\n                        -┬ú{CGT_ANNUAL_EXEMPTION.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between p-3 bg-gray-100 rounded font-bold\">\r\n                      <span>Taxable Gain:</span>\r\n                      <span>┬ú{results.taxableGain.toLocaleString()}</span>\r\n                    </div>\r\n                    <div className=\"space-y-2 pt-4 border-t\">\r\n                      <h4 className=\"font-medium\">Tax on Gain:</h4>\r\n                      {results.breakdown.length > 0 ? (\r\n                        results.breakdown.map((b, i) => (\r\n                          <div\r\n                            key={i}\r\n                            className=\"flex justify-between items-center p-3 bg-blue-50 rounded\"\r\n                          >\r\n                            <span>{`┬ú${b.amount.toLocaleString()} @ ${b.rate}%`}</span>\r\n                            <span className=\"font-semibold\">┬ú{b.tax.toLocaleString()}</span>\r\n                          </div>\r\n                        ))\r\n                      ) : (\r\n                        <p className=\"text-gray-600 text-sm\">No tax to pay on the gain.</p>\r\n                      )}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to calculate your CGT?</h3>\r\n                  <p>Enter the details to estimate your potential tax bill.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={cgtFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\CarCostCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 40,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Car, Calculator } from 'lucide-react';\r\n\r\nexport default function CarCostCalculator() {\r\n  const [price, setPrice] = useState('');\r\n  const [years, setYears] = useState('');\r\n  const [insurance, setInsurance] = useState('');\r\n  const [tax, setTax] = useState('');\r\n  const [maintenance, setMaintenance] = useState('');\r\n  const [fuel, setFuel] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const p = Number(price) || 0;\r\n    const y = Number(years) || 1;\r\n    const ins = Number(insurance) || 0;\r\n    const t = Number(tax) || 0;\r\n    const maint = Number(maintenance) || 0;\r\n    const f = Number(fuel) || 0;\r\n\r\n    const depreciation = p * 0.6; // Simplified 60% over term\r\n    const totalRunningCosts = (ins + t + maint) * y + f * 12 * y;\r\n    const totalCost = depreciation + totalRunningCosts;\r\n\r\n    setResults({\r\n      total: totalCost,\r\n      monthly: totalCost / (y * 12),\r\n      annual: totalCost / y,\r\n      years: y,\r\n    });\r\n    setHasCalculated(true);\r\n  }, [price, years, insurance, tax, maintenance, fuel]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\r\n          <h1 className=\"text-3xl font-bold text-center\">Total Car Cost Calculator</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-4xl mx-auto p-4 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Your Car Costs</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div>\r\n                <Label>Purchase Price (┬ú)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                  placeholder=\"e.g. 20000\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Ownership Term (Years)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={years}\r\n                  onChange={(e) => setYears(e.target.value)}\r\n                  placeholder=\"e.g. 5\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Annual Insurance (┬ú)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={insurance}\r\n                  onChange={(e) => setInsurance(e.target.value)}\r\n                  placeholder=\"e.g. 800\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Annual Tax/MOT (┬ú)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={tax}\r\n                  onChange={(e) => setTax(e.target.value)}\r\n                  placeholder=\"e.g. 180\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Annual Maintenance (┬ú)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={maintenance}\r\n                  onChange={(e) => setMaintenance(e.target.value)}\r\n                  placeholder=\"e.g. 500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Monthly Fuel Cost (┬ú)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={fuel}\r\n                  onChange={(e) => setFuel(e.target.value)}\r\n                  placeholder=\"e.g. 150\"\r\n                />\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                <Calculator className=\"w-5 h-5 mr-2\" />\r\n                Calculate True Cost\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n          <div>\r\n            {hasCalculated && results ? (\r\n              <Card className=\"bg-purple-50 border-purple-200\">\r\n                <CardHeader>\r\n                  <CardTitle>True Cost of Ownership</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"text-center space-y-4\">\r\n                  <p className=\"text-sm\">Total Cost over {results.years} years</p>\r\n                  <p className=\"text-3xl font-bold\">┬ú{results.total.toLocaleString()}</p>\r\n                  <p className=\"text-sm pt-2\">Annual Cost</p>\r\n                  <p className=\"text-2xl font-bold\">\r\n                    ┬ú{results.annual.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                  </p>\r\n                  <p className=\"text-sm pt-2\">Monthly Cost</p>\r\n                  <p className=\"text-4xl font-bold text-purple-700\">\r\n                    ┬ú{results.monthly.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[220px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Car className=\"w-10 h-10 mx-auto mb-2\" />\r\n                  <p>Discover the true cost of your car.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\CarLoanCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 105,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { PoundSterling, Calculator, Car, Percent, Calendar } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  Tooltip as RechartsTooltip,\r\n  ResponsiveContainer,\r\n  Legend,\r\n} from 'recharts';\r\n\r\nconst carLoanFAQs = [\r\n  {\r\n    question: 'What is PCP vs HP?',\r\n    answer:\r\n      \"Hire Purchase (HP) means you pay off the car in monthly instalments and own it at the end. Personal Contract Purchase (PCP) has lower monthly payments, but at the end you can either pay a large 'balloon' payment to own the car, trade it in for a new one, or hand it back.\",\r\n  },\r\n  {\r\n    question: 'How does my credit score affect my car loan?',\r\n    answer:\r\n      \"A better credit score generally gets you access to lower Annual Percentage Rates (APR), which means you'll pay less interest over the life of the loan. Lenders see you as a lower risk.\",\r\n  },\r\n  {\r\n    question: 'Should I pay a deposit on a car loan?',\r\n    answer:\r\n      \"Yes, paying a larger deposit is usually beneficial. It reduces the amount you need to borrow, which lowers your monthly payments and the total interest you'll pay. It can also improve your chances of being approved for the loan.\",\r\n  },\r\n];\r\n\r\nconst CHART_COLORS = {\r\n  principal: '#3b82f6', // blue\r\n  interest: '#ef4444', // red\r\n};\r\n\r\nexport default function CarLoanCalculator() {\r\n  const [vehiclePrice, setVehiclePrice] = useState('');\r\n  const [deposit, setDeposit] = useState('');\r\n  const [interestRate, setInterestRate] = useState('');\r\n  const [loanTerm, setLoanTerm] = useState('48');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const price = Number(vehiclePrice) || 0;\r\n    const dep = Number(deposit) || 0;\r\n    const rate = Number(interestRate) / 100;\r\n    const term = Number(loanTerm) || 0;\r\n\r\n    const loanAmount = price - dep;\r\n    if (loanAmount <= 0 || rate <= 0 || term <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true); // Indicate that calculation attempt was made, even if inputs were invalid\r\n      return;\r\n    }\r\n\r\n    const monthlyRate = rate / 12;\r\n    const monthlyPayment = (loanAmount * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -term));\r\n    const totalRepayment = monthlyPayment * term;\r\n    const totalInterest = totalRepayment - loanAmount;\r\n\r\n    const newResults = {\r\n      monthlyPayment,\r\n      totalRepayment,\r\n      totalInterest,\r\n      loanAmount,\r\n      vehiclePrice: price,\r\n      deposit: dep,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Vehicle Price', `┬ú${price.toFixed(2)}`],\r\n      ['Deposit', `┬ú${dep.toFixed(2)}`],\r\n      ['Loan Amount', `┬ú${loanAmount.toFixed(2)}`],\r\n      ['Interest Rate (APR)', `${interestRate}%`],\r\n      ['Loan Term', `${term} months`],\r\n      ['Monthly Payment', `┬ú${monthlyPayment.toFixed(2)}`],\r\n      ['Total Interest Paid', `┬ú${totalInterest.toFixed(2)}`],\r\n      ['Total Amount Repaid', `┬ú${totalRepayment.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  }, [vehiclePrice, deposit, interestRate, loanTerm]);\r\n\r\n  // Removed useEffect for auto-calculation as per instructions\r\n\r\n  const pieData = results\r\n    ? [\r\n        { name: 'Principal', value: results.loanAmount, color: CHART_COLORS.principal },\r\n        { name: 'Interest', value: results.totalInterest, color: CHART_COLORS.interest },\r\n      ]\r\n    : [];\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Car Loan &amp; Finance Calculator UK\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Work out your monthly payments and total interest for HP &amp; PCP car finance deals.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid lg:grid-cols-5 gap-8\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Finance Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"vehiclePrice\">Vehicle Price</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"vehiclePrice\"\r\n                      type=\"number\"\r\n                      value={vehiclePrice}\r\n                      onChange={(e) => setVehiclePrice(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 20000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"deposit\">Deposit</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"deposit\"\r\n                      type=\"number\"\r\n                      value={deposit}\r\n                      onChange={(e) => setDeposit(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 2000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"interestRate\">Interest Rate (APR)</Label>\r\n                  <div className=\"relative\">\r\n                    <Percent className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"interestRate\"\r\n                      type=\"number\"\r\n                      value={interestRate}\r\n                      onChange={(e) => setInterestRate(e.target.value)}\r\n                      className=\"pr-10\"\r\n                      placeholder=\"e.g. 7.5\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"loanTerm\">Loan Term ({loanTerm} months)</Label>\r\n                  <Slider\r\n                    id=\"loanTerm\"\r\n                    value={[loanTerm]}\r\n                    onValueChange={(val) => setLoanTerm(val[0])}\r\n                    min={12}\r\n                    max={84}\r\n                    step={1}\r\n                  />\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your Car Loan Results</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"car-loan-summary\"\r\n                    title=\"Car Loan Summary\"\r\n                  />\r\n                </div>\r\n                <Card className=\"text-center bg-blue-50 border-blue-200\">\r\n                  <CardHeader>\r\n                    <CardTitle>Monthly Payment</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <p className=\"text-5xl font-bold text-blue-800\">\r\n                      ┬ú{results.monthlyPayment.toFixed(2)}\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <div className=\"grid md:grid-cols-2 gap-6\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Loan Summary</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-2\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Vehicle Price:</span>\r\n                        <span className=\"font-medium\">\r\n                          ┬ú{results.vehiclePrice.toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Deposit:</span>\r\n                        <span className=\"font-medium\">- ┬ú{results.deposit.toLocaleString()}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between border-t pt-2\">\r\n                        <span>Total Loan Amount:</span>\r\n                        <span className=\"font-semibold\">\r\n                          ┬ú{results.loanAmount.toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Cost Breakdown</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-2\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Total Repayments:</span>\r\n                        <span className=\"font-medium\">\r\n                          ┬ú\r\n                          {results.totalRepayment.toLocaleString(undefined, {\r\n                            maximumFractionDigits: 2,\r\n                          })}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Total Interest:</span>\r\n                        <span className=\"font-medium text-red-600\">\r\n                          ┬ú\r\n                          {results.totalInterest.toLocaleString(undefined, {\r\n                            maximumFractionDigits: 2,\r\n                          })}\r\n                        </span>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Total Cost Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <ResponsiveContainer width=\"100%\" height={250}>\r\n                      <PieChart>\r\n                        <Pie\r\n                          data={pieData}\r\n                          dataKey=\"value\"\r\n                          nameKey=\"name\"\r\n                          cx=\"50%\"\r\n                          cy=\"50%\"\r\n                          outerRadius={80}\r\n                          label\r\n                        >\r\n                          {pieData.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={entry.color} />\r\n                          ))}\r\n                        </Pie>\r\n                        <RechartsTooltip />\r\n                        <Legend />\r\n                      </PieChart>\r\n                    </ResponsiveContainer>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px] bg-gray-50\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Car className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">See your car loan details</h3>\r\n                  <p>Enter your finance info to get started.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={carLoanFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\ChildcareCostCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 27,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Baby, Calculator } from 'lucide-react';\r\n\r\nexport default function ChildcareCostCalculator() {\r\n  const [cost, setCost] = useState('');\r\n  const [days, setDays] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const c = Number(cost) || 0;\r\n    const d = Number(days) || 0;\r\n\r\n    const weekly = c * d;\r\n    const monthly = weekly * 4.33;\r\n    const annual = monthly * 12;\r\n\r\n    setResults({ weekly, monthly, annual });\r\n    setHasCalculated(true);\r\n  }, [cost, days]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\r\n          <h1 className=\"text-3xl font-bold text-center\">Childcare Cost Calculator</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-4xl mx-auto p-4 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Childcare Details</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div>\r\n                <Label>Daily Cost (┬ú)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={cost}\r\n                  onChange={(e) => setCost(e.target.value)}\r\n                  placeholder=\"e.g. 60\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Days per Week</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={days}\r\n                  onChange={(e) => setDays(e.target.value)}\r\n                  placeholder=\"e.g. 4\"\r\n                />\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                <Calculator className=\"w-5 h-5 mr-2\" />\r\n                Calculate\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n          <div>\r\n            {hasCalculated && results ? (\r\n              <Card className=\"bg-pink-50 border-pink-200\">\r\n                <CardHeader>\r\n                  <CardTitle>Estimated Costs</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"text-center space-y-4\">\r\n                  <p>Weekly</p>\r\n                  <p className=\"text-3xl font-bold\">┬ú{results.weekly.toLocaleString()}</p>\r\n                  <p className=\"pt-2\">Monthly</p>\r\n                  <p className=\"text-4xl font-bold text-pink-700\">\r\n                    ┬ú{results.monthly.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                  </p>\r\n                  <p className=\"pt-2\">Annual</p>\r\n                  <p className=\"text-3xl font-bold\">\r\n                    ┬ú{results.annual.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[220px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Baby className=\"w-10 h-10 mx-auto mb-2\" />\r\n                  <p>Enter details to see cost estimates.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\CommissionCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 56,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { PoundSterling, Percent, Calculator, TrendingUp } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst commissionFAQs = [\r\n  {\r\n    question: 'What is a commission?',\r\n    answer:\r\n      'A commission is a form of variable-pay remuneration for services rendered or products sold. Commissions are a common way to reward sales staff and are typically a percentage of the revenue generated.',\r\n  },\r\n  {\r\n    question: 'Is commission income taxable?',\r\n    answer:\r\n      'Yes, commission earnings are considered part of your total income and are subject to Income Tax and National Insurance contributions, just like a regular salary.',\r\n  },\r\n  {\r\n    question: 'What are common commission structures?',\r\n    answer:\r\n      'Commission structures vary widely. They can be a straight percentage of sales, tiered (where the percentage increases as sales targets are met), or based on gross margin. This calculator uses a simple, straight percentage model.',\r\n  },\r\n  {\r\n    question: 'A Note on Calculations',\r\n    answer:\r\n      'This tool calculates the gross commission amount before any deductions. To understand the impact on your net pay, you would need to add this commission amount to your salary and use the main UK Salary Calculator.',\r\n  },\r\n];\r\n\r\nexport default function CommissionCalculator() {\r\n  const [revenue, setRevenue] = useState('10000');\r\n  const [commissionRate, setCommissionRate] = useState('10');\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const rev = Number(revenue) || 0;\r\n    const rate = Number(commissionRate) / 100;\r\n\r\n    if (rev <= 0 || rate < 0) {\r\n      setResults(null);\r\n      return;\r\n    }\r\n\r\n    const commissionEarned = rev * rate;\r\n\r\n    setResults({ commissionEarned });\r\n  }, [revenue, commissionRate]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Commission Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Quickly calculate your commission earnings based on sales revenue and commission rate.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Enter Your Figures</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label htmlFor=\"revenue\">Total Revenue / Sales Amount (┬ú)</Label>\r\n                  <div className=\"relative mt-1\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"revenue\"\r\n                      type=\"number\"\r\n                      value={revenue}\r\n                      onChange={(e) => setRevenue(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"commissionRate\">Commission Rate (%)</Label>\r\n                  <div className=\"flex items-center gap-4 mt-1\">\r\n                    <Slider\r\n                      value={[parseFloat(commissionRate)]}\r\n                      onValueChange={([val]) => setCommissionRate(val.toString())}\r\n                      max={100}\r\n                      step={0.5}\r\n                      className=\"flex-1\"\r\n                    />\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={commissionRate}\r\n                      onChange={(e) => setCommissionRate(e.target.value)}\r\n                      className=\"w-24 text-center\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div>\r\n            {results ? (\r\n              <div className=\"space-y-6\">\r\n                <Card className=\"bg-green-50 border-green-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-green-900\">Commission Earned</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    {' '}\r\n                    {/* Removed className=\"text-center\" */}\r\n                    <p className=\"text-5xl font-bold text-green-900\">\r\n                      ┬ú\r\n                      {results.commissionEarned.toLocaleString('en-GB', {\r\n                        minimumFractionDigits: 2,\r\n                        maximumFractionDigits: 2,\r\n                      })}\r\n                    </p>\r\n                    <p className=\"text-sm text-green-700 mt-2\">\r\n                      {' '}\r\n                      {/* Changed text and mt-1 to mt-2 */}\r\n                      This is your gross commission before any tax deductions.\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n                <div className=\"text-sm text-gray-600 p-4 bg-gray-50 rounded-lg\">\r\n                  A {commissionRate}% commission on sales of ┬ú{Number(revenue).toLocaleString()}{' '}\r\n                  results in gross earnings of ┬ú\r\n                  {results.commissionEarned.toLocaleString('en-GB', { maximumFractionDigits: 2 })}.\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full\">\r\n                <p className=\"text-gray-500\">Enter details to calculate commission.</p>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={commissionFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\CommuteCostCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 38,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Car, Train, Calculator } from 'lucide-react';\r\n\r\nexport default function CommuteCostCalculator() {\r\n  const [distance, setDistance] = useState('');\r\n  const [mpg, setMpg] = useState('');\r\n  const [fuelPrice, setFuelPrice] = useState('');\r\n  const [days, setDays] = useState('');\r\n  const [publicTransport, setPublicTransport] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const dist = Number(distance) || 0;\r\n    const vehicleMpg = Number(mpg) || 0;\r\n    const pricePerLitre = Number(fuelPrice) || 0;\r\n    const workDays = Number(days) || 0;\r\n    const ptCost = Number(publicTransport) || 0;\r\n\r\n    const LITRES_PER_GALLON = 4.54609;\r\n    const dailyFuelLitres = (dist / vehicleMpg) * LITRES_PER_GALLON;\r\n    const dailyFuelCost = dailyFuelLitres * pricePerLitre;\r\n    const totalDriveCost = dailyFuelCost * workDays * 4.33; // 4.33 weeks in a month\r\n    const totalPTCost = ptCost * workDays * 4.33;\r\n\r\n    setResults({\r\n      monthly: totalDriveCost + totalPTCost,\r\n      weekly: (totalDriveCost + totalPTCost) / 4.33,\r\n    });\r\n    setHasCalculated(true);\r\n  }, [distance, mpg, fuelPrice, days, publicTransport]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\r\n          <h1 className=\"text-3xl font-bold text-center\">Commute Cost Calculator</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-4xl mx-auto p-4 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Your Commute</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div>\r\n                <Label>Daily Round-Trip Distance (miles)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={distance}\r\n                  onChange={(e) => setDistance(e.target.value)}\r\n                  placeholder=\"e.g. 20\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Car MPG</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={mpg}\r\n                  onChange={(e) => setMpg(e.target.value)}\r\n                  placeholder=\"e.g. 45\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Fuel Price per Litre (┬ú)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={fuelPrice}\r\n                  onChange={(e) => setFuelPrice(e.target.value)}\r\n                  placeholder=\"e.g. 1.50\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Daily Public Transport Cost (┬ú)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={publicTransport}\r\n                  onChange={(e) => setPublicTransport(e.target.value)}\r\n                  placeholder=\"e.g. 0\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Commute Days per Week</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={days}\r\n                  onChange={(e) => setDays(e.target.value)}\r\n                  placeholder=\"e.g. 5\"\r\n                />\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                <Calculator className=\"w-5 h-5 mr-2\" />\r\n                Calculate\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n          <div>\r\n            {hasCalculated && results ? (\r\n              <Card className=\"bg-indigo-50 border-indigo-200\">\r\n                <CardHeader>\r\n                  <CardTitle>Estimated Monthly Commute Cost</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"text-center\">\r\n                  <p className=\"text-5xl font-bold text-indigo-700\">\r\n                    ┬ú{results.monthly.toFixed(2)}\r\n                  </p>\r\n                  <p className=\"text-sm mt-2\">~┬ú{results.weekly.toFixed(2)} per week</p>\r\n                </CardContent>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[220px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Car className=\"w-10 h-10 mx-auto mb-2\" />\r\n                  <p>Find out how much your commute costs.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\CompoundInterestCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 86,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { PoundSterling, Calculator, TrendingUp, Percent } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\n\r\nexport default function CompoundInterestCalculator() {\r\n  const [principal, setPrincipal] = useState('');\r\n  const [monthlyContribution, setMonthlyContribution] = useState('');\r\n  const [interestRate, setInterestRate] = useState('');\r\n  const [years, setYears] = useState('');\r\n  const [compoundFrequency, setCompoundFrequency] = useState('12'); // Monthly by default\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const p = Number(principal) || 0;\r\n    const pmt = Number(monthlyContribution) || 0;\r\n    const r = Number(interestRate) / 100;\r\n    const t = Number(years) || 0;\r\n    const n = Number(compoundFrequency);\r\n\r\n    if (t <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    // Compound interest formula for principal\r\n    const futureValuePrincipal = p * Math.pow(1 + r / n, n * t);\r\n\r\n    // Future value of monthly contributions (annuity)\r\n    let futureValueContributions = 0;\r\n    if (pmt > 0 && r > 0) {\r\n      const monthlyRate = r / 12;\r\n      const months = t * 12;\r\n      futureValueContributions = pmt * ((Math.pow(1 + monthlyRate, months) - 1) / monthlyRate);\r\n    } else if (pmt > 0) {\r\n      futureValueContributions = pmt * t * 12;\r\n    }\r\n\r\n    const totalAmount = futureValuePrincipal + futureValueContributions;\r\n    const totalContributions = p + pmt * 12 * t;\r\n    const totalInterest = totalAmount - totalContributions;\r\n\r\n    const newResults = {\r\n      totalAmount,\r\n      totalContributions,\r\n      totalInterest,\r\n      finalBalance: totalAmount,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Initial Investment', `┬ú${p.toFixed(2)}`],\r\n      ['Monthly Contribution', `┬ú${pmt.toFixed(2)}`],\r\n      ['Interest Rate', `${interestRate}%`],\r\n      ['Time Period', `${t} years`],\r\n      ['', ''],\r\n      ['Total Contributions', `┬ú${totalContributions.toFixed(2)}`],\r\n      ['Interest Earned', `┬ú${totalInterest.toFixed(2)}`],\r\n      ['Final Amount', `┬ú${totalAmount.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [principal, monthlyContribution, interestRate, years, compoundFrequency]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Compound Interest Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              \"Compound interest is the eighth wonder of the world\" - Einstein. Discover the magic\r\n              of time and compounding.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Investment Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"principal\">Initial Investment</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"principal\"\r\n                      type=\"number\"\r\n                      value={principal}\r\n                      onChange={(e) => setPrincipal(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 10000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"monthlyContribution\">Monthly Contribution</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"monthlyContribution\"\r\n                      type=\"number\"\r\n                      value={monthlyContribution}\r\n                      onChange={(e) => setMonthlyContribution(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 500\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"interestRate\">Annual Interest Rate (%)</Label>\r\n                  <Input\r\n                    id=\"interestRate\"\r\n                    type=\"number\"\r\n                    value={interestRate}\r\n                    onChange={(e) => setInterestRate(e.target.value)}\r\n                    step=\"0.1\"\r\n                    placeholder=\"e.g. 7\"\r\n                  />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"years\">Time Period (Years)</Label>\r\n                  <Input\r\n                    id=\"years\"\r\n                    type=\"number\"\r\n                    value={years}\r\n                    onChange={(e) => setYears(e.target.value)}\r\n                    placeholder=\"e.g. 20\"\r\n                  />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"compound\">Compound Frequency</Label>\r\n                  <Select value={compoundFrequency} onValueChange={setCompoundFrequency}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"1\">Annually</SelectItem>\r\n                      <SelectItem value=\"4\">Quarterly</SelectItem>\r\n                      <SelectItem value=\"12\">Monthly</SelectItem>\r\n                      <SelectItem value=\"365\">Daily</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Growth\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"space-y-6\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your Investment Growth</h2>\r\n                </div>\r\n                <Card className=\"bg-gradient-to-br from-green-50 to-green-100 border-green-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-green-900\">Final Amount</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-center p-4\">\r\n                      <TrendingUp className=\"w-12 h-12 mx-auto text-green-600 mb-4\" />\r\n                      <p className=\"text-4xl font-bold text-green-800\">\r\n                        ┬ú{results.finalBalance.toLocaleString()}\r\n                      </p>\r\n                      <p className=\"text-green-700 mt-2\">After {years} years</p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Total Contributions:</span>\r\n                      <span className=\"font-semibold\">\r\n                        ┬ú{results.totalContributions.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Interest Earned:</span>\r\n                      <span className=\"font-semibold text-green-600\">\r\n                        ┬ú{results.totalInterest.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between border-t pt-3\">\r\n                      <span>Total Growth:</span>\r\n                      <span className=\"font-bold text-lg\">\r\n                        {results.totalContributions > 0\r\n                          ? `${((results.totalInterest / results.totalContributions) * 100).toFixed(1)}%`\r\n                          : 'N/A'}\r\n                      </span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <div className=\"non-printable pt-6\">\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"compound-interest\"\r\n                    title=\"Compound Interest Calculation\"\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Percent className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">See the power of compounding</h3>\r\n                  <p>Enter your details to watch your money grow.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\Contact.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 72,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Send, Loader2, CheckCircle } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\n// We are removing the base44 SendEmail integration as it won't work on a static site.\r\n// import { SendEmail } from \"@/api/integrations\";\r\n\r\n// Add a small FAQ specifically for the Contact page\r\nconst contactFaqs = [\r\n  {\r\n    question: 'When will I receive a reply?',\r\n    answer:\r\n      'We typically respond within 1ÔÇô2 business days. During peak periods (e.g., major UK Budget changes), replies may take a little longer, but we read every message.',\r\n  },\r\n  {\r\n    question: 'Can you give personal financial advice?',\r\n    answer:\r\n      'No. We provide educational tools only and cannot offer personalised financial advice. For advice specific to your situation, please speak to a qualified adviser.',\r\n  },\r\n  {\r\n    question: 'How do you use my contact details?',\r\n    answer:\r\n      'We use your details solely to respond to your enquiry. See our Privacy Policy for full details on data handling and your rights.',\r\n  },\r\n];\r\n\r\nexport default function Contact() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [status, setStatus] = useState('idle'); // idle, sending, success, error\r\n  const [feedbackMessage, setFeedbackMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setStatus('sending');\r\n\r\n    // Replace this with your actual Formspree endpoint URL\r\n    const formspreeEndpoint = 'https://formspree.io/f/xwpnppaz';\r\n\r\n    try {\r\n      const response = await fetch(formspreeEndpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n        },\r\n        body: JSON.stringify({ name, email, message }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setStatus('success');\r\n        setFeedbackMessage(\"Thank you for your message! We'll get back to you soon.\");\r\n        setName('');\r\n        setEmail('');\r\n        setMessage('');\r\n      } else {\r\n        throw new Error('Failed to send message');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to send email:', error);\r\n      setStatus('error');\r\n      setFeedbackMessage('Sorry, there was an error sending your message. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900 py-12\">\r\n      <div className=\"max-w-2xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"text-center mb-12\">\r\n          <Send className=\"w-12 h-12 mx-auto text-blue-600\" />\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mt-4\">\r\n            Contact Us\r\n          </h1>\r\n          <p className=\"text-lg text-gray-600 dark:text-gray-300 mt-2\">\r\n            Have a question, feedback, or a suggestion? We'd love to hear from you.\r\n          </p>\r\n        </div>\r\n\r\n        <Card className=\"bg-gray-50 dark:bg-gray-800\">\r\n          <CardContent className=\"p-8\">\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"name\" className=\"text-gray-800 dark:text-gray-200\">\r\n                  Full Name\r\n                </Label>\r\n                <Input\r\n                  id=\"name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  required\r\n                  placeholder=\"John Doe\"\r\n                  className=\"dark:bg-gray-700 dark:text-gray-50 dark:border-gray-600\"\r\n                />\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"email\" className=\"text-gray-800 dark:text-gray-200\">\r\n                  Email Address\r\n                </Label>\r\n                <Input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                  placeholder=\"you@example.com\"\r\n                  className=\"dark:bg-gray-700 dark:text-gray-50 dark:border-gray-600\"\r\n                />\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"message\" className=\"text-gray-800 dark:text-gray-200\">\r\n                  Message\r\n                </Label>\r\n                <Textarea\r\n                  id=\"message\"\r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  required\r\n                  placeholder=\"Your message here...\"\r\n                  className=\"h-32 dark:bg-gray-700 dark:text-gray-50 dark:border-gray-600\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Button type=\"submit\" className=\"w-full\" disabled={status === 'sending'}>\r\n                  {status === 'sending' && <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />}\r\n                  {status === 'sending' ? 'Sending...' : 'Send Message'}\r\n                </Button>\r\n              </div>\r\n            </form>\r\n            {status === 'success' && (\r\n              <div className=\"mt-4 p-4 bg-green-100 text-green-800 rounded-lg flex items-center gap-3\">\r\n                <CheckCircle className=\"w-5 h-5\" />\r\n                <p>{feedbackMessage}</p>\r\n              </div>\r\n            )}\r\n            {status === 'error' && (\r\n              <div className=\"mt-4 p-4 bg-red-100 text-red-800 rounded-lg\">\r\n                <p>{feedbackMessage}</p>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* NEW: Helpful content to increase value and word count */}\r\n        <div className=\"mt-12 space-y-8\">\r\n          <section className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6\">\r\n            <h2 className=\"text-xl md:text-2xl font-semibold text-gray-900 dark:text-gray-100\">\r\n              Before you get in touch\r\n            </h2>\r\n            <p className=\"text-gray-700 dark:text-gray-300 mt-2\">\r\n              Many common questions are answered within our calculator pages and resources. If\r\n              youÔÇÖre writing about a specific result, please include the calculator name, your\r\n              inputs, and the tax year where relevant (e.g., 2025/26).\r\n            </p>\r\n            <ul className=\"list-disc pl-6 text-gray-700 dark:text-gray-300 mt-4 space-y-2\">\r\n              <li>Bug report: tell us which page and the exact steps to reproduce the issue.</li>\r\n              <li>Feature request: describe the useÔÇæcase and the data youÔÇÖd like to see.</li>\r\n              <li>\r\n                Press/partnerships: include your organisation, timelines, and the calculators of\r\n                interest.\r\n              </li>\r\n            </ul>\r\n          </section>\r\n\r\n          <section className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6\">\r\n            <h2 className=\"text-xl md:text-2xl font-semibold text-gray-900 dark:text-gray-100\">\r\n              Our typical response\r\n            </h2>\r\n            <p className=\"text-gray-700 dark:text-gray-300 mt-2\">\r\n              We aim to reply within 1ÔÇô2 business days. If your question relates to a specific\r\n              calculation, providing a screenshot and the URL helps us respond faster. For urgent\r\n              media enquiries, please mention ÔÇ£MediaÔÇØ in the subject line.\r\n            </p>\r\n          </section>\r\n\r\n          {/* Concise FAQ for the Contact page */}\r\n          <FAQSection faqs={contactFaqs} title=\"Contact FAQs\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\ContractorCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 246,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport {\r\n  PoundSterling,\r\n  Calculator,\r\n  Briefcase,\r\n  Building,\r\n  HelpCircle,\r\n  ArrowRightLeft,\r\n} from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport AnimatedNumber from '../components/general/AnimatedNumber';\r\n\r\nconst contractorFAQs = [\r\n  {\r\n    question: 'What is IR35?',\r\n    answer:\r\n      \"IR35 (or the 'off-payroll working rules') is UK tax legislation designed to identify 'disguised employees' ÔÇô contractors who work in a similar way to permanent employees but operate through their own limited company to pay less tax. If your contract is 'inside IR35', you're treated as an employee for tax purposes.\",\r\n  },\r\n  {\r\n    question: \"What's the difference between 'Inside IR35' and 'Outside IR35'?\",\r\n    answer:\r\n      \"'Inside IR35' means you are a deemed employee, and your income is subject to PAYE (Income Tax and National Insurance) just like a regular employee. 'Outside IR35' means you are a genuine business-to-business service provider, and your company pays Corporation Tax on profits. You then draw funds via a mix of salary and dividends.\",\r\n  },\r\n  {\r\n    question: \"Who pays Employer's National Insurance for Inside IR35 roles?\",\r\n    answer:\r\n      \"The 'fee payer' (usually the recruitment agency or the end client) is responsible for paying Employer's NI. However, they often deduct this cost from the day rate offered to the contractor, effectively reducing the contractor's gross income.\",\r\n  },\r\n  {\r\n    question: 'What are common business expenses for an Outside IR35 contractor?',\r\n    answer:\r\n      \"Allowable expenses can include professional indemnity insurance, accountancy fees, software subscriptions, office costs, business travel, and a portion of home-as-office costs. These reduce your company's profit and therefore its Corporation Tax bill.\",\r\n  },\r\n  {\r\n    question: 'Why take a small salary and dividends when Outside IR35?',\r\n    answer:\r\n      'This is a tax-efficient way to extract profit. A small salary is usually set at or below the National Insurance threshold, so little to no NI or income tax is paid. The remaining profit, after Corporation Tax, is then drawn as dividends, which have lower tax rates than income tax.',\r\n  },\r\n];\r\n\r\n// --- Tax Data for 2025/26 ---\r\nconst taxYearData = {\r\n  taxBracketsEngland: [\r\n    { min: 0, max: 12570, rate: 0 },\r\n    { min: 12571, max: 50270, rate: 0.2 },\r\n    { min: 50271, max: 125140, rate: 0.4 },\r\n    { min: 125141, max: Infinity, rate: 0.45 },\r\n  ],\r\n  taxBracketsScotland: [\r\n    { min: 0, max: 12570, rate: 0 },\r\n    { min: 12571, max: 14876, rate: 0.19 },\r\n    { min: 14877, max: 26561, rate: 0.2 },\r\n    { min: 26562, max: 43662, rate: 0.21 },\r\n    { min: 43663, max: 75000, rate: 0.42 },\r\n    { min: 75001, max: 125140, rate: 0.45 },\r\n    { min: 125141, max: Infinity, rate: 0.48 },\r\n  ],\r\n  employeeNiThresholds: [\r\n    { min: 0, max: 12570, rate: 0 },\r\n    { min: 12571, max: 50270, rate: 0.08 },\r\n    { min: 50271, max: Infinity, rate: 0.02 },\r\n  ],\r\n  employerNiRate: 0.138,\r\n  employerNiThreshold: 9100,\r\n  corporationTax: {\r\n    mainRate: 0.25,\r\n    smallProfitRate: 0.19,\r\n    lowerThreshold: 50000,\r\n    upperThreshold: 250000,\r\n  },\r\n  dividendAllowance: 500,\r\n  dividendRates: { basic: 0.0875, higher: 0.3375, additional: 0.3935 },\r\n  personalAllowance: 12570,\r\n};\r\n\r\nexport default function ContractorCalculator() {\r\n  const [dayRate, setDayRate] = useState('');\r\n  const [daysPerWeek, setDaysPerWeek] = useState('5');\r\n  const [weeksPerYear, setWeeksPerYear] = useState('48');\r\n  const [businessExpenses, setBusinessExpenses] = useState('');\r\n  const [pensionContribution, setPensionContribution] = useState('5');\r\n  const [location, setLocation] = useState('england');\r\n\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const calculateTakeHome = () => {\r\n    const rate = Number(dayRate) || 0;\r\n    const days = Number(daysPerWeek) || 0;\r\n    const weeks = Number(weeksPerYear) || 0;\r\n    const expenses = Number(businessExpenses) || 0;\r\n    const pensionPercent = Number(pensionContribution) / 100 || 0;\r\n\r\n    const totalRevenue = rate * days * weeks;\r\n    if (totalRevenue === 0) {\r\n      setHasCalculated(true);\r\n      setResults(null);\r\n      return;\r\n    }\r\n\r\n    // --- Inside IR35 Calculation ---\r\n    const employerNI = Math.max(\r\n      0,\r\n      (totalRevenue - taxYearData.employerNiThreshold) * taxYearData.employerNiRate\r\n    );\r\n    const grossSalaryInside = totalRevenue - employerNI; // Day rate is effectively reduced by Employer's NI\r\n    const pensionInside = grossSalaryInside * pensionPercent;\r\n    let personalAllowance = taxYearData.personalAllowance;\r\n    if (grossSalaryInside > 100000) {\r\n      personalAllowance = Math.max(0, personalAllowance - (grossSalaryInside - 100000) / 2);\r\n    }\r\n    const taxableIncomeInside = Math.max(0, grossSalaryInside - pensionInside - personalAllowance);\r\n\r\n    const taxBrackets =\r\n      location === 'scotland' ? taxYearData.taxBracketsScotland : taxYearData.taxBracketsEngland;\r\n    let taxInside = 0;\r\n    for (const bracket of taxBrackets) {\r\n      if (taxableIncomeInside > bracket.min) {\r\n        const amountInBracket = Math.min(taxableIncomeInside, bracket.max) - bracket.min;\r\n        taxInside += amountInBracket * bracket.rate;\r\n      }\r\n    }\r\n\r\n    let niInside = 0;\r\n    for (const threshold of taxYearData.employeeNiThresholds) {\r\n      if (grossSalaryInside > threshold.min) {\r\n        const niableInThreshold = Math.min(grossSalaryInside, threshold.max) - threshold.min;\r\n        niInside += niableInThreshold * threshold.rate;\r\n      }\r\n    }\r\n    const takeHomeInside = grossSalaryInside - taxInside - niInside - pensionInside;\r\n\r\n    // --- Outside IR35 Calculation ---\r\n    const directorSalary = taxYearData.personalAllowance; // Common strategy\r\n    const pensionOutside = (totalRevenue - directorSalary) * pensionPercent; // On remaining profit\r\n    const companyProfitBeforeTax = totalRevenue - expenses - directorSalary - pensionOutside;\r\n\r\n    let corporationTax = 0;\r\n    if (companyProfitBeforeTax > taxYearData.corporationTax.lowerThreshold) {\r\n      if (companyProfitBeforeTax > taxYearData.corporationTax.upperThreshold) {\r\n        corporationTax = companyProfitBeforeTax * taxYearData.corporationTax.mainRate;\r\n      } else {\r\n        const marginalRelief =\r\n          (taxYearData.corporationTax.upperThreshold - companyProfitBeforeTax) * (3 / 200);\r\n        corporationTax =\r\n          companyProfitBeforeTax * taxYearData.corporationTax.mainRate - marginalRelief;\r\n      }\r\n    } else {\r\n      corporationTax = companyProfitBeforeTax * taxYearData.corporationTax.smallProfitRate;\r\n    }\r\n    corporationTax = Math.max(0, corporationTax);\r\n\r\n    const profitAfterTax = companyProfitBeforeTax - corporationTax;\r\n    const availableDividends = profitAfterTax;\r\n\r\n    const dividendTaxableIncome = directorSalary + availableDividends;\r\n    let personalAllowanceDividends = taxYearData.personalAllowance;\r\n    if (dividendTaxableIncome > 100000) {\r\n      personalAllowanceDividends = Math.max(\r\n        0,\r\n        personalAllowanceDividends - (dividendTaxableIncome - 100000) / 2\r\n      );\r\n    }\r\n    const taxableDividends = Math.max(0, availableDividends - taxYearData.dividendAllowance);\r\n\r\n    let dividendTax = 0;\r\n    let remainingDividends = taxableDividends;\r\n\r\n    const basicRateBand = taxBrackets[1].max - personalAllowanceDividends;\r\n    const higherRateBand = taxBrackets[2].max - taxBrackets[1].max;\r\n\r\n    const basicTaxable = Math.min(remainingDividends, basicRateBand);\r\n    dividendTax += basicTaxable * taxYearData.dividendRates.basic;\r\n    remainingDividends -= basicTaxable;\r\n\r\n    const higherTaxable = Math.min(remainingDividends, higherRateBand);\r\n    dividendTax += higherTaxable * taxYearData.dividendRates.higher;\r\n    remainingDividends -= higherTaxable;\r\n\r\n    dividendTax += remainingDividends * taxYearData.dividendRates.additional;\r\n\r\n    const takeHomeOutside = directorSalary + availableDividends - dividendTax;\r\n\r\n    const newResults = {\r\n      inside: {\r\n        takeHome: takeHomeInside,\r\n        gross: grossSalaryInside,\r\n        tax: taxInside,\r\n        ni: niInside,\r\n        pension: pensionInside,\r\n        employerNI: employerNI,\r\n      },\r\n      outside: {\r\n        takeHome: takeHomeOutside,\r\n        revenue: totalRevenue,\r\n        corporationTax: corporationTax,\r\n        dividendTax: dividendTax,\r\n        directorSalary: directorSalary,\r\n        dividends: availableDividends,\r\n        expenses: expenses,\r\n        pension: pensionOutside,\r\n      },\r\n    };\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Inside IR35', 'Outside IR35'],\r\n      ['Day Rate', `┬ú${rate}`, `┬ú${rate}`],\r\n      ['Total Revenue', `┬ú${totalRevenue.toFixed(2)}`, `┬ú${totalRevenue.toFixed(2)}`],\r\n      ['', '', ''],\r\n      ['--- Deductions ---', '', ''],\r\n      [\"Employer's NI\", `┬ú${employerNI.toFixed(2)}`, 'N/A'],\r\n      ['Business Expenses', 'N/A', `┬ú${expenses.toFixed(2)}`],\r\n      ['Corporation Tax', 'N/A', `┬ú${corporationTax.toFixed(2)}`],\r\n      ['Income Tax', `┬ú${taxInside.toFixed(2)}`, 'N/A (covered by Dividend Tax)'],\r\n      [\"Employee's NI\", `┬ú${niInside.toFixed(2)}`, 'N/A (on salary below threshold)'],\r\n      ['Dividend Tax', 'N/A', `┬ú${dividendTax.toFixed(2)}`],\r\n      ['Pension Contribution', `┬ú${pensionInside.toFixed(2)}`, `┬ú${pensionOutside.toFixed(2)}`],\r\n      ['', '', ''],\r\n      ['--- Take Home Pay ---', '', ''],\r\n      ['Annual', `┬ú${takeHomeInside.toFixed(2)}`, `┬ú${takeHomeOutside.toFixed(2)}`],\r\n      ['Monthly', `┬ú${(takeHomeInside / 12).toFixed(2)}`, `┬ú${(takeHomeOutside / 12).toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n  }, [dayRate, daysPerWeek, weeksPerYear, businessExpenses, pensionContribution, location]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK Contractor Calculator (IR35) 2025/26\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Compare your take-home pay for contracts inside and outside IR35. Understand the tax\r\n              implications of being a deemed employee vs. a limited company director.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid lg:grid-cols-5 gap-8\">\r\n          {/* Input Panel */}\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24 bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n              <CardHeader>\r\n                <CardTitle>Contract Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label>Day Rate (┬ú)</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={dayRate}\r\n                    onChange={(e) => setDayRate(e.target.value)}\r\n                    placeholder=\"e.g. 500\"\r\n                  />\r\n                </div>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label>Days / Week</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={daysPerWeek}\r\n                      onChange={(e) => setDaysPerWeek(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label>Weeks / Year</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={weeksPerYear}\r\n                      onChange={(e) => setWeeksPerYear(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Annual Business Expenses (┬ú)</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={businessExpenses}\r\n                    onChange={(e) => setBusinessExpenses(e.target.value)}\r\n                    placeholder=\"e.g. 3000 (for Outside IR35)\"\r\n                  />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Pension Contribution (%)</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={pensionContribution}\r\n                    onChange={(e) => setPensionContribution(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Tax Location</Label>\r\n                  <Select value={location} onValueChange={setLocation}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"england\">England, Wales or NI</SelectItem>\r\n                      <SelectItem value=\"scotland\">Scotland</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <Button onClick={calculateTakeHome} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Compare Scenarios\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Results Panel */}\r\n          <div className=\"lg:col-span-3 space-y-6\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200\">\r\n                    Your Comparison\r\n                  </h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"ir35-comparison\"\r\n                    title=\"IR35 Comparison\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Summary Cards */}\r\n                <div className=\"grid md:grid-cols-2 gap-6\">\r\n                  <Card className=\"bg-gradient-to-br from-red-50 to-orange-50 dark:from-red-900/30 dark:to-orange-900/30 border-orange-200 dark:border-orange-800\">\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2 text-orange-800 dark:text-orange-300\">\r\n                        <Briefcase /> Inside IR35\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-sm font-medium text-orange-700 dark:text-orange-400\">\r\n                        Annual Take-Home\r\n                      </p>\r\n                      <p className=\"text-3xl font-bold text-orange-900 dark:text-orange-100\">\r\n                        ┬ú<AnimatedNumber value={results.inside.takeHome} />\r\n                      </p>\r\n                      <p className=\"text-sm text-orange-700 dark:text-orange-400 mt-2\">\r\n                        ┬ú{(results.inside.takeHome / 12).toLocaleString()} / month\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card className=\"bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/30 dark:to-emerald-900/30 border-green-200 dark:border-green-800\">\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2 text-green-800 dark:text-green-300\">\r\n                        <Building /> Outside IR35\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-sm font-medium text-green-700 dark:text-green-400\">\r\n                        Annual Take-Home\r\n                      </p>\r\n                      <p className=\"text-3xl font-bold text-green-900 dark:text-green-100\">\r\n                        ┬ú<AnimatedNumber value={results.outside.takeHome} />\r\n                      </p>\r\n                      <p className=\"text-sm text-green-700 dark:text-green-400 mt-2\">\r\n                        ┬ú{(results.outside.takeHome / 12).toLocaleString()} / month\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Comparison Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"flex flex-col space-y-4\">\r\n                      <div className=\"grid grid-cols-3 items-center gap-2 text-center\">\r\n                        <span className=\"font-semibold text-left\">Metric</span>\r\n                        <span className=\"font-semibold text-orange-800 dark:text-orange-300\">\r\n                          Inside IR35\r\n                        </span>\r\n                        <span className=\"font-semibold text-green-800 dark:text-green-300\">\r\n                          Outside IR35\r\n                        </span>\r\n                      </div>\r\n\r\n                      {[\r\n                        {\r\n                          label: 'Total Revenue',\r\n                          inside: results.outside.revenue,\r\n                          outside: results.outside.revenue,\r\n                        },\r\n                        {\r\n                          label: 'Gross Income (after Employer NI)',\r\n                          inside: results.inside.gross,\r\n                          outside: 'N/A',\r\n                        },\r\n                        {\r\n                          label: 'Corporation Tax',\r\n                          inside: 'N/A',\r\n                          outside: -results.outside.corporationTax,\r\n                        },\r\n                        { label: 'Income Tax', inside: -results.inside.tax, outside: 'N/A' },\r\n                        {\r\n                          label: 'Dividend Tax',\r\n                          inside: 'N/A',\r\n                          outside: -results.outside.dividendTax,\r\n                        },\r\n                        { label: 'Employee NI', inside: -results.inside.ni, outside: 'N/A' },\r\n                        {\r\n                          label: 'Pension',\r\n                          inside: -results.inside.pension,\r\n                          outside: -results.outside.pension,\r\n                        },\r\n                        { label: 'Expenses', inside: 'N/A', outside: -results.outside.expenses },\r\n                      ].map((row) => (\r\n                        <div\r\n                          key={row.label}\r\n                          className=\"grid grid-cols-3 items-center gap-2 text-center p-2 rounded-md odd:bg-gray-50 dark:odd:bg-gray-800/50\"\r\n                        >\r\n                          <span className=\"text-left text-sm\">{row.label}</span>\r\n                          <span className=\"text-sm font-mono\">\r\n                            {typeof row.inside === 'number'\r\n                              ? `┬ú${row.inside.toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n                              : row.inside}\r\n                          </span>\r\n                          <span className=\"text-sm font-mono\">\r\n                            {typeof row.outside === 'number'\r\n                              ? `┬ú${row.outside.toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n                              : row.outside}\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n\r\n                      <div className=\"grid grid-cols-3 items-center gap-2 text-center p-3 rounded-md bg-blue-50 dark:bg-blue-900/30 border-t-2 border-blue-200 dark:border-blue-700\">\r\n                        <span className=\"font-bold text-left\">Net Take-Home (Annual)</span>\r\n                        <span className=\"font-bold text-orange-800 dark:text-orange-300\">\r\n                          ┬ú\r\n                          {results.inside.takeHome.toLocaleString(undefined, {\r\n                            maximumFractionDigits: 0,\r\n                          })}\r\n                        </span>\r\n                        <span className=\"font-bold text-green-800 dark:text-green-300\">\r\n                          ┬ú\r\n                          {results.outside.takeHome.toLocaleString(undefined, {\r\n                            maximumFractionDigits: 0,\r\n                          })}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"mt-4 p-4 bg-yellow-50 dark:bg-yellow-900/30 rounded-lg text-center\">\r\n                        <p className=\"font-semibold text-yellow-900 dark:text-yellow-200\">\r\n                          Difference:\r\n                          <span\r\n                            className={\r\n                              results.outside.takeHome > results.inside.takeHome\r\n                                ? 'text-green-600'\r\n                                : 'text-red-600'\r\n                            }\r\n                          >\r\n                            {' '}\r\n                            ┬ú\r\n                            {(results.outside.takeHome - results.inside.takeHome).toLocaleString(\r\n                              undefined,\r\n                              { maximumFractionDigits: 0 }\r\n                            )}\r\n                          </span>{' '}\r\n                          annually when Outside IR35\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500 dark:text-gray-400\">\r\n                  <ArrowRightLeft className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Compare your contract scenarios</h3>\r\n                  <p>\r\n                    Enter your contract details to see the financial difference between working\r\n                    inside and outside IR35.\r\n                  </p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 py-12 non-printable\">\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <FAQSection faqs={contractorFAQs} title=\"Contractor & IR35 FAQ\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\CookiePolicy.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 7,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Cookie } from 'lucide-react';\r\n\r\nexport default function CookiePolicy() {\r\n  return (\r\n    <div className=\"bg-white py-12\">\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"text-center mb-12\">\r\n          <Cookie className=\"w-12 h-12 mx-auto text-blue-600\" />\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mt-4\">Cookie Policy</h1>\r\n          <p className=\"text-lg text-gray-600 mt-2\">Last updated: 27/08/2025</p>\r\n        </div>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-8 space-y-6 text-gray-700 leading-relaxed\">\r\n            <h2 className=\"text-2xl font-semibold text-gray-800\">What are cookies?</h2>\r\n            <p>\r\n              A cookie is a small file of letters and numbers that we store on your browser or the\r\n              hard drive of your computer if you agree. Cookies contain information that is\r\n              transferred to your computer's hard drive.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 pt-4\">How we use cookies</h2>\r\n            <p>\r\n              Our website uses cookies to distinguish you from other users. This helps us provide\r\n              you with a good experience and improve our site. We use the following cookies:\r\n            </p>\r\n            <ul className=\"list-disc list-inside space-y-2\">\r\n              <li>\r\n                <strong>Strictly necessary cookies:</strong> These are required for the operation of\r\n                our website.\r\n              </li>\r\n              <li>\r\n                <strong>Analytical/performance cookies:</strong> They allow us to recognise and\r\n                count the number of visitors and see how visitors move around our website. This\r\n                helps us improve the way our website works.\r\n              </li>\r\n              <li>\r\n                <strong>Functionality cookies:</strong> These are used to recognise you when you\r\n                return to our website.\r\n              </li>\r\n            </ul>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 pt-4\">Managing Cookies</h2>\r\n            <p>\r\n              You can block cookies by activating the setting on your browser that allows you to\r\n              refuse the setting of all or some cookies. However, if you use your browser settings\r\n              to block all cookies (including essential cookies) you may not be able to access all\r\n              or parts of our site.\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\CorporationTaxCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 92,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Building2 } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst corpTaxFAQs = [\r\n  {\r\n    question: 'What is Corporation Tax?',\r\n    answer:\r\n      'Corporation Tax is a tax that limited companies and some other organisations in the UK pay on their annual profits. If your company is based in the UK, it pays Corporation Tax on all its profits from the UK and abroad.',\r\n  },\r\n  {\r\n    question: 'What are the current Corporation Tax rates?',\r\n    answer:\r\n      'From 1 April 2023, the main rate of Corporation Tax is 25% for companies with profits over ┬ú250,000. A Small Profits Rate of 19% applies to companies with profits of ┬ú50,000 or less. Companies with profits between these two thresholds pay tax at the main rate but can claim Marginal Relief.',\r\n  },\r\n  {\r\n    question: 'What is Marginal Relief?',\r\n    answer:\r\n      'Marginal Relief is a form of tax relief that provides a gradual increase in the Corporation Tax rate for companies with profits between ┬ú50,000 and ┬ú250,000. This avoids a sudden jump from the 19% rate to the 25% rate.',\r\n  },\r\n];\r\n\r\nconst SMALL_PROFITS_RATE = 0.19;\r\nconst MAIN_RATE = 0.25;\r\nconst SMALL_PROFITS_THRESHOLD = 50000;\r\nconst MAIN_RATE_THRESHOLD = 250000;\r\nconst MARGINAL_RELIEF_FRACTION =\r\n  (MAIN_RATE - SMALL_PROFITS_RATE) / (MAIN_RATE_THRESHOLD - SMALL_PROFITS_THRESHOLD); // 3/200 simplified\r\n\r\nexport default function CorporationTaxCalculator() {\r\n  const [companyProfit, setCompanyProfit] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const profit = Number(companyProfit) || 0;\r\n    if (profit <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    let taxDue = 0;\r\n    let effectiveRate = 0;\r\n    let relief = 0;\r\n\r\n    if (profit <= SMALL_PROFITS_THRESHOLD) {\r\n      taxDue = profit * SMALL_PROFITS_RATE;\r\n    } else if (profit > MAIN_RATE_THRESHOLD) {\r\n      taxDue = profit * MAIN_RATE;\r\n    } else {\r\n      // Marginal Relief\r\n      const mainRateTax = profit * MAIN_RATE;\r\n      relief = ((MAIN_RATE_THRESHOLD - profit) * MARGINAL_RELIEF_FRACTION * profit) / profit; // Standard formula simplified\r\n      taxDue = mainRateTax - relief;\r\n    }\r\n\r\n    effectiveRate = (taxDue / profit) * 100;\r\n\r\n    const newResults = {\r\n      profit,\r\n      taxDue,\r\n      effectiveRate,\r\n      relief,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Company Profit', `┬ú${newResults.profit.toFixed(2)}`],\r\n      ['Corporation Tax Due', `┬ú${newResults.taxDue.toFixed(2)}`],\r\n      ['Effective Tax Rate', `${newResults.effectiveRate.toFixed(2)}%`],\r\n      ['Marginal Relief Applied', `┬ú${newResults.relief.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [companyProfit]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK Corporation Tax Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Calculate the Corporation Tax liability for a UK limited company based on its annual\r\n              profits.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Corporation Tax Calculation</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Company Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"companyProfit\">Annual Taxable Profit</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"companyProfit\"\r\n                      type=\"number\"\r\n                      value={companyProfit}\r\n                      onChange={(e) => setCompanyProfit(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 150000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Tax\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Corporation Tax Estimate</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"corporation-tax\"\r\n                    title=\"Corporation Tax\"\r\n                  />\r\n                </div>\r\n                <Card className=\"bg-red-50 border-red-200\">\r\n                  <CardContent className=\"p-6\">\r\n                    <h3 className=\"font-semibold text-red-800 mb-2\">Corporation Tax Due</h3>\r\n                    <div className=\"text-4xl font-bold text-red-900\">\r\n                      ┬ú\r\n                      {results.taxDue.toLocaleString('en-GB', {\r\n                        minimumFractionDigits: 2,\r\n                        maximumFractionDigits: 2,\r\n                      })}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Calculation Summary</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n                      <p className=\"text-sm text-gray-600\">Company Profit</p>\r\n                      <p className=\"text-lg font-semibold\">┬ú{results.profit.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n                      <p className=\"text-sm text-gray-600\">Effective Tax Rate</p>\r\n                      <p className=\"text-lg font-semibold\">{results.effectiveRate.toFixed(2)}%</p>\r\n                    </div>\r\n                    {results.relief > 0 && (\r\n                      <div className=\"p-4 bg-green-50 rounded-lg\">\r\n                        <p className=\"text-sm text-gray-600\">Marginal Relief Applied</p>\r\n                        <p className=\"text-lg font-semibold text-green-700\">\r\n                          ┬ú\r\n                          {results.relief.toLocaleString('en-GB', {\r\n                            minimumFractionDigits: 2,\r\n                            maximumFractionDigits: 2,\r\n                          })}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to calculate tax?</h3>\r\n                  <p>Enter your company's profit to see the tax liability.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={corpTaxFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\CostOfLiving.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 12,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { ukCities, createSlug } from '../components/data/seo-data';\r\nimport { MapPin, Users, TrendingUp } from 'lucide-react';\r\n\r\nexport default function CostOfLiving() {\r\n  const regions = [...new Set(ukCities.map((city) => city.region))];\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK Cost of Living Explorer\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Compare rental costs, population, and other key stats for major cities across the\r\n              United Kingdom.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {regions.map((region) => (\r\n          <div key={region} className=\"mb-10\">\r\n            <h2 className=\"text-2xl font-bold border-b-2 border-green-500 pb-2 mb-4\">{region}</h2>\r\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {ukCities\r\n                .filter((city) => city.region === region)\r\n                .map((city) => (\r\n                  <Link\r\n                    to={createPageUrl(`CostOfLivingPage?slug=${createSlug(city.name)}`)}\r\n                    key={city.name}\r\n                    className=\"group\"\r\n                  >\r\n                    <Card className=\"hover:shadow-lg hover:border-green-300 transition-all\">\r\n                      <CardHeader>\r\n                        <CardTitle className=\"flex items-center gap-2\">\r\n                          <MapPin className=\"w-5 h-5 text-green-600\" />\r\n                          <span>{city.name}</span>\r\n                        </CardTitle>\r\n                      </CardHeader>\r\n                      <CardContent className=\"space-y-2 text-sm\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <span className=\"text-gray-600 flex items-center gap-1\">\r\n                            <Users className=\"w-4 h-4\" /> Population:\r\n                          </span>\r\n                          <span className=\"font-medium\">{city.population}</span>\r\n                        </div>\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <span className=\"text-gray-600 flex items-center gap-1\">\r\n                            <TrendingUp className=\"w-4 h-4\" /> Rent Index:\r\n                          </span>\r\n                          <span className=\"font-medium\">{city.rentIndex}</span>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Link>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\CostOfLivingPage.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 39,
        "column": 7,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useMemo } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport { ukCities, createSlug } from '../components/data/seo-data';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { ArrowLeft, MapPin, Users, TrendingUp, Home, Utensils, Bus } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst costOfLivingFAQs = [\r\n  {\r\n    question: 'Where does this cost of living data come from?',\r\n    answer:\r\n      'The information on this page, particularly the Rent Index, is based on aggregated public data and rental market statistics. It is designed to provide a relative comparison between cities and should be used as a general guide. Actual costs will vary based on neighborhood, property type, and lifestyle.',\r\n  },\r\n  {\r\n    question: \"What does the 'Rent Index' mean?\",\r\n    answer:\r\n      'The Rent Index is a comparative score where London is set as the baseline (100). A city with a rent index of 70 means, on average, rental prices are about 30% cheaper than in London. It is a useful tool for quickly comparing housing affordability.',\r\n  },\r\n  {\r\n    question: 'How can I create a budget for moving to this city?',\r\n    answer:\r\n      \"That's a great next step! Once you have an idea of the relative costs, you can use our free Budget Planner tool to input your expected income and expenses to create a detailed personal budget.\",\r\n  },\r\n];\r\n\r\nexport default function CostOfLivingPage() {\r\n  const location = useLocation();\r\n  const city = useMemo(() => {\r\n    const urlParams = new URLSearchParams(location.search);\r\n    const slug = urlParams.get('slug');\r\n    return ukCities.find((c) => createSlug(c.name) === slug);\r\n  }, [location.search]);\r\n\r\n  if (!city) {\r\n    return (\r\n      <div className=\"max-w-4xl mx-auto px-4 py-8 text-center\">\r\n        <h1 className=\"text-2xl font-bold\">City Not Found</h1>\r\n        <p className=\"text-gray-600\">The city you're looking for could not be found.</p>\r\n        <Link\r\n          to={createPageUrl('CostOfLiving')}\r\n          className=\"mt-4 inline-block text-blue-600 hover:underline\"\r\n        >\r\n          &larr; Back to Cost of Living Explorer\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const relatedCities = ukCities\r\n    .filter((c) => c.region === city.region && c.name !== city.name)\r\n    .slice(0, 4);\r\n\r\n  return (\r\n    <div className=\"bg-gray-50\">\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"mb-6\">\r\n          <Link\r\n            to={createPageUrl('CostOfLiving')}\r\n            className=\"text-sm text-gray-600 hover:text-gray-900 inline-flex items-center gap-2\"\r\n          >\r\n            <ArrowLeft className=\"w-4 h-4\" />\r\n            Back to All Cities\r\n          </Link>\r\n        </div>\r\n\r\n        <Card className=\"bg-white shadow-lg\">\r\n          <CardHeader>\r\n            <Badge variant=\"secondary\" className=\"w-fit mb-2\">\r\n              {city.region}\r\n            </Badge>\r\n            <CardTitle className=\"text-3xl font-extrabold text-gray-900\">\r\n              Cost of Living in {city.name}\r\n            </CardTitle>\r\n            <p className=\"text-lg text-gray-600\">{city.description}</p>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-8\">\r\n            <div className=\"grid md:grid-cols-2 gap-4 text-center\">\r\n              <div className=\"p-4 bg-green-50 rounded-lg\">\r\n                <Users className=\"w-8 h-8 mx-auto text-green-700 mb-2\" />\r\n                <p className=\"text-sm text-green-800\">Population</p>\r\n                <p className=\"text-2xl font-bold text-green-900\">{city.population}</p>\r\n              </div>\r\n              <div className=\"p-4 bg-purple-50 rounded-lg\">\r\n                <TrendingUp className=\"w-8 h-8 mx-auto text-purple-700 mb-2\" />\r\n                <p className=\"text-sm text-purple-800\">Rent Index vs London</p>\r\n                <p className=\"text-2xl font-bold text-purple-900\">{city.rentIndex}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"text-xl font-bold mb-4\">Cost Breakdown</h3>\r\n              <p className=\"text-gray-700 mb-4\">\r\n                The cost of living in {city.name} is an important factor for anyone considering\r\n                moving to the area for work or study. While this data provides a general comparison,\r\n                actual costs can vary significantly based on lifestyle, accommodation choices, and\r\n                personal spending habits.\r\n              </p>\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center gap-4 p-3 bg-gray-100 rounded-lg\">\r\n                  <Home className=\"w-6 h-6 text-gray-700 flex-shrink-0\" />\r\n                  <div>\r\n                    <h4 className=\"font-semibold\">Housing</h4>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      Rental prices are a primary driver of cost differences. {city.name} has a rent\r\n                      index of {city.rentIndex}, meaning on average, rents are about{' '}\r\n                      {100 - city.rentIndex}% lower than in London.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-4 p-3 bg-gray-100 rounded-lg\">\r\n                  <Utensils className=\"w-6 h-6 text-gray-700 flex-shrink-0\" />\r\n                  <div>\r\n                    <h4 className=\"font-semibold\">Food & Groceries</h4>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      The cost of groceries and dining out is generally more consistent across the\r\n                      UK but tends to be higher in larger city centres, especially London.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-4 p-3 bg-gray-100 rounded-lg\">\r\n                  <Bus className=\"w-6 h-6 text-gray-700 flex-shrink-0\" />\r\n                  <div>\r\n                    <h4 className=\"font-semibold\">Transportation</h4>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      Public transport costs vary widely between cities. Major metropolitan areas\r\n                      like London have extensive but expensive networks, while other cities may have\r\n                      more affordable but less comprehensive options.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"text-xl font-bold mb-4\">Other Cities in {city.region}</h3>\r\n              <div className=\"space-y-2\">\r\n                {relatedCities.length > 0 ? (\r\n                  relatedCities.map((relatedCity) => (\r\n                    <Link\r\n                      to={createPageUrl(`CostOfLivingPage?slug=${createSlug(relatedCity.name)}`)}\r\n                      key={relatedCity.name}\r\n                      className=\"block p-3 bg-white border rounded-lg hover:bg-gray-100 transition-colors\"\r\n                    >\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"font-medium text-blue-700\">{relatedCity.name}</span>\r\n                        <span className=\"font-semibold text-gray-800\">\r\n                          Rent Index: {relatedCity.rentIndex}\r\n                        </span>\r\n                      </div>\r\n                    </Link>\r\n                  ))\r\n                ) : (\r\n                  <p className=\"text-gray-600\">No other cities listed in this region.</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"text-xl font-bold mb-4\">Plan Your Budget</h3>\r\n              <Card className=\"bg-orange-50 border-orange-200\">\r\n                <CardContent className=\"p-6\">\r\n                  <p className=\"text-orange-800 mb-4\">\r\n                    Moving to {city.name}? Make sure you have a solid financial plan. Use our free\r\n                    budget planner to estimate your monthly income and expenses and see how much you\r\n                    can save.\r\n                  </p>\r\n                  <Link to={createPageUrl('BudgetCalculator')}>\r\n                    <Button className=\"bg-orange-600 hover:bg-orange-700\">\r\n                      Open Budget Planner\r\n                    </Button>\r\n                  </Link>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            <div className=\"pt-8 border-t\">\r\n              <FAQSection faqs={costOfLivingFAQs} title=\"About This Cost Data\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\CouncilTaxCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 65,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { Button } from '@/components/ui/button'; // Added Button import\r\nimport { Home } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst councilTaxFAQs = [\r\n  {\r\n    question: 'What is Council Tax?',\r\n    answer:\r\n      \"Council Tax is a locally-set tax in Great Britain charged on domestic properties. The amount is based on the property's valuation band and the local council's budget needs.\",\r\n  },\r\n  {\r\n    question: 'How are Council Tax bands determined?',\r\n    answer:\r\n      'Properties are assigned to a valuation band (A-H in England) based on their value on a specific date (1 April 1991 for England). This calculator uses a simplified model based on average Band D tax.',\r\n  },\r\n  {\r\n    question: 'Can I get a discount?',\r\n    answer:\r\n      'Yes, various discounts and exemptions are available, such as the 25% single person discount, student exemptions, and Council Tax Reduction for those on low incomes. This calculator does not account for these discounts.',\r\n  },\r\n  {\r\n    question: 'A Note on Accuracy',\r\n    answer:\r\n      \"This is an ESTIMATION tool. Actual Council Tax varies significantly between local authorities. The figures are based on the average Band D tax for England and standard multipliers. Always check your local council's website for precise figures.\",\r\n  },\r\n];\r\n\r\nconst BAND_MULTIPLIERS = {\r\n  A: 6 / 9,\r\n  B: 7 / 9,\r\n  C: 8 / 9,\r\n  D: 1,\r\n  E: 11 / 9,\r\n  F: 13 / 9,\r\n  G: 15 / 9,\r\n  H: 18 / 9,\r\n};\r\nconst AVERAGE_BAND_D_ENGLAND = 2171; // For 2024/25\r\n\r\nexport default function CouncilTaxCalculator() {\r\n  const [band, setBand] = useState('D');\r\n  const [tax, setTax] = useState(0);\r\n  const [hasCalculated, setHasCalculated] = useState(false); // Added hasCalculated state\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const multiplier = BAND_MULTIPLIERS[band];\r\n    const estimatedTax = AVERAGE_BAND_D_ENGLAND * multiplier;\r\n    setTax(estimatedTax);\r\n    setHasCalculated(true); // Set hasCalculated to true after calculation\r\n  }, [band]);\r\n\r\n  // REMOVED: useEffect for auto-calculation\r\n  // The previous useEffect hook which triggered handleCalculate on mount and band change has been removed.\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\r\n          <h1 className=\"text-3xl font-bold text-center\">Council Tax Estimator</h1>\r\n          {/* Added description paragraph */}\r\n          <p className=\"text-center text-gray-600 mt-2\">\r\n            Get an estimate for your annual council tax bill based on your property band in England.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-4xl mx-auto p-4 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div>\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Property Details</CardTitle>\r\n              </CardHeader>\r\n              {/* Adjusted CardContent spacing */}\r\n              <CardContent className=\"space-y-4\">\r\n                <div>\r\n                  {/* Adjusted label class */}\r\n                  <label className=\"block mb-2\">Council Tax Band</label>\r\n                  <Select value={band} onValueChange={setBand}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      {Object.keys(BAND_MULTIPLIERS).map((b) => (\r\n                        <SelectItem key={b} value={b}>\r\n                          Band {b}\r\n                        </SelectItem>\r\n                      ))}\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                {/* Added Estimate Tax Button */}\r\n                <Button onClick={handleCalculate} className=\"w-full\">\r\n                  Estimate Tax\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          <div>\r\n            {/* Conditional rendering based on hasCalculated */}\r\n            {hasCalculated ? (\r\n              <Card className=\"bg-blue-50 border-blue-200\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-blue-900\">Estimated Annual Council Tax</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <p className=\"text-5xl font-bold text-blue-900\">\r\n                    ┬ú{tax.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                  </p>\r\n                  <p className=\"text-sm mt-2\">\r\n                    Monthly payment: ~┬ú\r\n                    {(tax / 12).toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[220px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Home className=\"w-10 h-10 mx-auto mb-2\" />\r\n                  <p>Select your band to see an estimate.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-12\">\r\n          <FAQSection faqs={councilTaxFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\CreditCardRepaymentCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 121,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\r\nimport {\r\n  PoundSterling,\r\n  Calculator,\r\n  CreditCard,\r\n  Percent,\r\n  Calendar,\r\n  TrendingDown,\r\n  Target,\r\n} from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst ccRepaymentFAQs = [\r\n  {\r\n    question: 'Why does it take so long to pay off credit card debt with minimum payments?',\r\n    answer:\r\n      'Minimum payments are often set as a small percentage of your balance (e.g., 1-3%) or a fixed amount. Because the interest charges are high, most of your minimum payment goes towards interest, with very little reducing the actual debt (principal). This creates a cycle that can take decades to break.',\r\n  },\r\n  {\r\n    question: \"What is the 'debt avalanche' vs 'debt snowball' method?\",\r\n    answer:\r\n      \"The 'debt avalanche' method involves paying off the debt with the highest interest rate first, which saves you the most money on interest. The 'debt snowball' method involves paying off the smallest debt first, which provides psychological wins and motivation. This calculator shows the impact of making fixed payments, which is similar to the avalanche strategy if you only have one card.\",\r\n  },\r\n  {\r\n    question: 'Is it a good idea to use a balance transfer card?',\r\n    answer:\r\n      'A 0% balance transfer card can be a great tool. You move your high-interest debt to a new card with a 0% introductory APR for a set period (e.g., 12-24 months). This allows all of your payments to go towards the principal, clearing the debt much faster. However, be aware of transfer fees and make sure you can pay it off before the 0% period ends.',\r\n  },\r\n];\r\n\r\nexport default function CreditCardRepaymentCalculator() {\r\n  const [balance, setBalance] = useState('5000');\r\n  const [interestRate, setInterestRate] = useState('21.9');\r\n  const [repaymentType, setRepaymentType] = useState('fixed');\r\n  const [repaymentValue, setRepaymentValue] = useState('200'); // For fixed amount\r\n  const [targetMonths, setTargetMonths] = useState('24'); // For target payoff\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const calculateRepayment = useCallback(() => {\r\n    const bal = Number(balance) || 0;\r\n    const rate = Number(interestRate) / 100 / 12; // Monthly rate\r\n\r\n    if (bal <= 0 || rate <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    let monthsToPayOff = 0;\r\n    let totalInterestPaid = 0;\r\n    let monthlyPayment = 0;\r\n    let finalMessage = '';\r\n\r\n    if (repaymentType === 'fixed') {\r\n      monthlyPayment = Number(repaymentValue) || 0;\r\n      if (monthlyPayment <= bal * rate) {\r\n        finalMessage =\r\n          'Warning: Your payment is too low to cover the interest. The balance will increase.';\r\n        monthsToPayOff = Infinity;\r\n      } else {\r\n        // Using the formula for number of payments (n)\r\n        monthsToPayOff = -Math.log(1 - (bal * rate) / monthlyPayment) / Math.log(1 + rate);\r\n        totalInterestPaid = monthlyPayment * monthsToPayOff - bal;\r\n      }\r\n    } else {\r\n      // target\r\n      const term = Number(targetMonths) || 0;\r\n      if (term <= 0) {\r\n        setResults(null);\r\n        return;\r\n      }\r\n      monthlyPayment = (bal * rate * Math.pow(1 + rate, term)) / (Math.pow(1 + rate, term) - 1);\r\n      monthsToPayOff = term;\r\n      totalInterestPaid = monthlyPayment * term - bal;\r\n    }\r\n\r\n    const newResults = {\r\n      monthsToPayOff: Math.ceil(monthsToPayOff),\r\n      years: Math.floor(Math.ceil(monthsToPayOff) / 12),\r\n      remainingMonths: Math.ceil(monthsToPayOff) % 12,\r\n      totalInterestPaid,\r\n      totalRepayment: bal + totalInterestPaid,\r\n      monthlyPayment,\r\n      finalMessage,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Initial Balance', `┬ú${bal.toFixed(2)}`],\r\n      ['Interest Rate (APR)', `${interestRate}%`],\r\n      [\r\n        'Repayment Goal',\r\n        repaymentType === 'fixed'\r\n          ? `Fixed payment of ┬ú${monthlyPayment.toFixed(2)}/month`\r\n          : `Pay off in ${targetMonths} months`,\r\n      ],\r\n      ['Required Monthly Payment', `┬ú${newResults.monthlyPayment.toFixed(2)}`],\r\n      ['Time to Pay Off', `${newResults.years} years, ${newResults.remainingMonths} months`],\r\n      ['Total Interest Paid', `┬ú${newResults.totalInterestPaid.toFixed(2)}`],\r\n      ['Total Amount Repaid', `┬ú${newResults.totalRepayment.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  }, [balance, interestRate, repaymentType, repaymentValue, targetMonths]);\r\n\r\n  useEffect(() => {\r\n    calculateRepayment();\r\n  }, [calculateRepayment]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Credit Card Repayment Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              See how long it will take to pay off your credit card debt and how much interest\r\n              you'll pay. Create a plan to become debt-free faster.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Credit Card Repayment Plan</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Your Credit Card Debt</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"balance\">Current Balance</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"balance\"\r\n                      type=\"number\"\r\n                      value={balance}\r\n                      onChange={(e) => setBalance(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"interestRate\">Interest Rate (APR)</Label>\r\n                  <div className=\"relative\">\r\n                    <Percent className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"interestRate\"\r\n                      type=\"number\"\r\n                      value={interestRate}\r\n                      onChange={(e) => setInterestRate(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <RadioGroup\r\n                  value={repaymentType}\r\n                  onValueChange={setRepaymentType}\r\n                  className=\"space-y-2\"\r\n                >\r\n                  <Label>How do you want to repay?</Label>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"fixed\" id=\"fixed\" />\r\n                    <Label htmlFor=\"fixed\">Pay a fixed amount each month</Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <RadioGroupItem value=\"target\" id=\"target\" />\r\n                    <Label htmlFor=\"target\">Pay it off in a target time</Label>\r\n                  </div>\r\n                </RadioGroup>\r\n\r\n                {repaymentType === 'fixed' ? (\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"repaymentValue\">Monthly Payment</Label>\r\n                    <div className=\"relative\">\r\n                      <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                      <Input\r\n                        id=\"repaymentValue\"\r\n                        type=\"number\"\r\n                        value={repaymentValue}\r\n                        onChange={(e) => setRepaymentValue(e.target.value)}\r\n                        className=\"pl-10\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"targetMonths\">Pay Off Within (Months)</Label>\r\n                    <div className=\"relative\">\r\n                      <Calendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                      <Input\r\n                        id=\"targetMonths\"\r\n                        type=\"number\"\r\n                        value={targetMonths}\r\n                        onChange={(e) => setTargetMonths(e.target.value)}\r\n                        className=\"pl-10\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your Repayment Plan</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"credit-card-repayment-plan\"\r\n                    title=\"Credit Card Repayment Plan\"\r\n                  />\r\n                </div>\r\n\r\n                {results.finalMessage && (\r\n                  <Card className=\"bg-red-100 border-red-300\">\r\n                    <CardContent className=\"p-4 text-red-800 font-medium\">\r\n                      {results.finalMessage}\r\n                    </CardContent>\r\n                  </Card>\r\n                )}\r\n\r\n                <Card className=\"bg-blue-50\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <Target className=\"w-5 h-5 text-blue-700\" />\r\n                      Payoff Summary\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center\">\r\n                    <p className=\"text-gray-600\">It will take you</p>\r\n                    <p className=\"text-4xl font-bold text-blue-800 my-2\">\r\n                      {results.years > 0 && `${results.years} year${results.years > 1 ? 's' : ''}`}{' '}\r\n                      {results.years > 0 && results.remainingMonths > 0 && `and`}{' '}\r\n                      {results.remainingMonths > 0 &&\r\n                        `${results.remainingMonths} month${results.remainingMonths > 1 ? 's' : ''}`}\r\n                      {results.years === 0 && results.remainingMonths === 0 && `less than a month`}\r\n                    </p>\r\n                    <p className=\"text-gray-600\">to become debt-free.</p>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Monthly Payment</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-2xl font-semibold\">┬ú{results.monthlyPayment.toFixed(2)}</p>\r\n                      <p className=\"text-xs text-gray-500\">\r\n                        {repaymentType === 'target'\r\n                          ? 'Is required to meet your goal'\r\n                          : 'Your fixed monthly payment'}\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Total Interest Paid</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-2xl font-semibold text-red-600\">\r\n                        ┬ú\r\n                        {results.totalInterestPaid.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </p>\r\n                      <p className=\"text-xs text-gray-500\">This is the total cost of borrowing.</p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n                <Card className=\"bg-gray-50\">\r\n                  <CardContent className=\"p-4\">\r\n                    <p className=\"font-medium\">\r\n                      By paying ┬ú{results.monthlyPayment.toFixed(0)} per month instead of a typical\r\n                      3% minimum payment (~┬ú{(Number(balance) * 0.03).toFixed(0)}), you could save\r\n                      thousands in interest and be debt-free years sooner.\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to clear your debt?</h3>\r\n                  <p>Enter your details to see your personalized repayment plan.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={ccRepaymentFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\CurrencyConverter.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 145,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\r\nimport { ArrowRightLeft, Loader2, AlertCircle, TrendingUp, Info } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport { getForexRates } from '@/api/functions';\r\nimport AnimatedNumber from '../components/general/AnimatedNumber';\r\n\r\nconst currencyFAQs = [\r\n  {\r\n    question: 'How often are these rates updated?',\r\n    answer:\r\n      'The exchange rates on this page are updated once per day, as provided by our data source on the free plan. For time-sensitive transactions, you should always consult a real-time financial service.',\r\n  },\r\n  {\r\n    question: 'What is an exchange rate?',\r\n    answer:\r\n      'An exchange rate is the value of one currency for the purpose of conversion to another. For example, if the GBP/USD exchange rate is 1.25, it means one British Pound can be exchanged for 1.25 US Dollars.',\r\n  },\r\n  {\r\n    question: 'What influences exchange rates?',\r\n    answer:\r\n      'Exchange rates are affected by a wide range of economic and political factors, including interest rates, inflation, economic stability, government debt, and trade balances. This is why they fluctuate constantly.',\r\n  },\r\n  {\r\n    question: \"Why might this rate differ from my bank's rate?\",\r\n    answer:\r\n      \"The rates shown here are 'mid-market' rates. When you exchange money through a bank or currency service, they typically add a markup or 'spread' to this rate, which is how they make a profit. Your actual rate will likely be slightly different.\",\r\n  },\r\n];\r\n\r\n// Helper to format currency display\r\nconst currencyNames = {\r\n  GBP: 'GBP - British Pound',\r\n  USD: 'USD - United States Dollar',\r\n  EUR: 'EUR - Euro',\r\n  JPY: 'JPY - Japanese Yen',\r\n  AUD: 'AUD - Australian Dollar',\r\n  CAD: 'CAD - Canadian Dollar',\r\n  CHF: 'CHF - Swiss Franc',\r\n  INR: 'INR - Indian Rupee',\r\n  NZD: 'NZD - New Zealand Dollar',\r\n};\r\n\r\nexport default function CurrencyConverter() {\r\n  const [amount, setAmount] = useState('100');\r\n  const [fromCurrency, setFromCurrency] = useState('GBP');\r\n  const [toCurrency, setToCurrency] = useState('USD');\r\n  const [rates, setRates] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [lastUpdated, setLastUpdated] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRates = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await getForexRates();\r\n\r\n        // Handle successful API responses\r\n        if (response.data && response.data.success) {\r\n          const allRates = { ...response.data.rates, GBP: 1 };\r\n          setRates(allRates);\r\n          setLastUpdated(response.data.timestamp);\r\n          setError(null);\r\n          return; // Success, so exit\r\n        }\r\n\r\n        // If not successful, determine the error message\r\n        let errorMessage = 'Failed to fetch valid currency rates. Please try again later.'; // A safe default\r\n\r\n        if (response.error) {\r\n          // Handle SDK-level errors\r\n          if (typeof response.error.message === 'string') {\r\n            errorMessage = response.error.message;\r\n          } else if (typeof response.error.message === 'object' && response.error.message?.error) {\r\n            // Handle errors returned from the backend function's JSON body\r\n            errorMessage = response.error.message.error;\r\n          }\r\n        } else if (response.data && response.data.error) {\r\n          // Handle API-level errors (e.g., success: false)\r\n          // Fix: Ensure errorMessage is always a string to prevent object rendering errors.\r\n          if (typeof response.data.error === 'string') {\r\n            errorMessage = response.data.error;\r\n          } else if (typeof response.data.error === 'object' && response.data.error !== null) {\r\n            // Attempt to get a 'message' property from the error object, or fall back to stringifying it.\r\n            errorMessage = response.data.error.message || JSON.stringify(response.data.error);\r\n          }\r\n        }\r\n\r\n        setError(errorMessage);\r\n      } catch (err) {\r\n        // Handle network errors or other unexpected issues\r\n        console.error('Currency fetch error:', err);\r\n        setError('A client-side error occurred while fetching rates.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchRates();\r\n  }, []);\r\n\r\n  const calculateConversion = useCallback(() => {\r\n    if (!rates || !amount) {\r\n      setResult(null);\r\n      return;\r\n    }\r\n\r\n    const rateFrom = rates[fromCurrency];\r\n    const rateTo = rates[toCurrency];\r\n    const numericAmount = parseFloat(amount);\r\n\r\n    if (rateFrom && rateTo && !isNaN(numericAmount)) {\r\n      // Convert amount to base currency (GBP) first, then to target currency\r\n      const amountInGbp = numericAmount / rateFrom;\r\n      const convertedAmount = amountInGbp * rateTo;\r\n      setResult(convertedAmount);\r\n    }\r\n  }, [amount, fromCurrency, toCurrency, rates]);\r\n\r\n  useEffect(() => {\r\n    calculateConversion();\r\n  }, [calculateConversion]);\r\n\r\n  const handleSwapCurrencies = () => {\r\n    setFromCurrency(toCurrency);\r\n    setToCurrency(fromCurrency);\r\n  };\r\n\r\n  const exchangeRate =\r\n    rates && rates[toCurrency] && rates[fromCurrency] ? rates[toCurrency] / rates[fromCurrency] : 0;\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Live Currency Converter\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Check the latest foreign exchange rates for major currencies against the Pound.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid lg:grid-cols-2 gap-8 items-start\">\r\n          <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n            <CardHeader>\r\n              <CardTitle>Convert Currency</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              {loading && (\r\n                <div className=\"flex items-center justify-center p-4\">\r\n                  <Loader2 className=\"w-6 h-6 animate-spin text-blue-600\" />\r\n                  <span className=\"ml-2 text-gray-600 dark:text-gray-300\">\r\n                    Fetching latest rates...\r\n                  </span>\r\n                </div>\r\n              )}\r\n              {error && (\r\n                <Alert variant=\"destructive\">\r\n                  <AlertCircle className=\"h-4 w-4\" />\r\n                  <AlertTitle>Error</AlertTitle>\r\n                  <AlertDescription>{error}</AlertDescription>\r\n                </Alert>\r\n              )}\r\n              {!loading && !error && rates && (\r\n                <>\r\n                  <div className=\"space-y-1\">\r\n                    <Label htmlFor=\"amount\">Amount</Label>\r\n                    <Input\r\n                      id=\"amount\"\r\n                      type=\"number\"\r\n                      value={amount}\r\n                      onChange={(e) => setAmount(e.target.value)}\r\n                      className=\"dark:bg-gray-700 dark:text-gray-50 dark:border-gray-600\"\r\n                      placeholder=\"e.g. 100\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <div className=\"flex-1 space-y-1\">\r\n                      <Label>From</Label>\r\n                      <Select value={fromCurrency} onValueChange={setFromCurrency}>\r\n                        <SelectTrigger className=\"dark:text-gray-50\">\r\n                          <SelectValue />\r\n                        </SelectTrigger>\r\n                        <SelectContent className=\"dark:bg-gray-800 dark:text-gray-50 dark:border-gray-700\">\r\n                          {Object.keys(rates).map((curr) => (\r\n                            <SelectItem key={curr} value={curr}>\r\n                              {currencyNames[curr] || curr}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n                    <Button\r\n                      variant=\"ghost\"\r\n                      size=\"icon\"\r\n                      onClick={handleSwapCurrencies}\r\n                      className=\"mt-6 hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                    >\r\n                      <ArrowRightLeft className=\"w-5 h-5 text-gray-500\" />\r\n                    </Button>\r\n                    <div className=\"flex-1 space-y-1\">\r\n                      <Label>To</Label>\r\n                      <Select value={toCurrency} onValueChange={setToCurrency}>\r\n                        <SelectTrigger className=\"dark:text-gray-50\">\r\n                          <SelectValue />\r\n                        </SelectTrigger>\r\n                        <SelectContent className=\"dark:bg-gray-800 dark:text-gray-50 dark:border-gray-700\">\r\n                          {Object.keys(rates).map((curr) => (\r\n                            <SelectItem key={curr} value={curr}>\r\n                              {currencyNames[curr] || curr}\r\n                            </SelectItem>\r\n                          ))}\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {result !== null && (\r\n            <Card className=\"bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/50 dark:to-blue-800/50 border-blue-200 dark:border-blue-700\">\r\n              <CardContent className=\"p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-blue-800 dark:text-blue-300\">\r\n                      {amount} {fromCurrency} equals\r\n                    </p>\r\n                    <div className=\"text-4xl font-bold text-blue-900 dark:text-blue-100\">\r\n                      <AnimatedNumber\r\n                        value={result}\r\n                        options={{\r\n                          minimumFractionDigits: 2,\r\n                          maximumFractionDigits: 2,\r\n                          currency: toCurrency,\r\n                          style: 'currency',\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center\">\r\n                    <TrendingUp className=\"w-6 h-6 text-white\" />\r\n                  </div>\r\n                </div>\r\n                <p className=\"text-sm text-blue-700 dark:text-blue-300 mt-2\">\r\n                  Exchange Rate: 1 {fromCurrency} = {exchangeRate.toFixed(4)} {toCurrency}\r\n                </p>\r\n                {lastUpdated && (\r\n                  <div className=\"flex items-center gap-2 mt-4 text-xs text-gray-500 dark:text-gray-400\">\r\n                    <Info className=\"w-3.5 h-3.5\" />\r\n                    <span>\r\n                      Rates last updated:{' '}\r\n                      {new Date(lastUpdated * 1000).toLocaleString('en-GB', {\r\n                        dateStyle: 'medium',\r\n                        timeStyle: 'short',\r\n                      })}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"mt-12\">\r\n          <FAQSection faqs={currencyFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\DebtCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 298,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport {\r\n  PoundSterling,\r\n  Plus,\r\n  Trash2,\r\n  CreditCard,\r\n  Calendar,\r\n  TrendingDown,\r\n  AlertCircle,\r\n  Zap,\r\n  Target,\r\n  Calculator,\r\n} from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators'; // NEW IMPORT\r\n\r\nconst debtCalculatorFAQs = [\r\n  {\r\n    question: \"What's the difference between debt avalanche and debt snowball?\",\r\n    answer:\r\n      'Debt avalanche focuses on paying off the highest interest rate debts first, saving you the most money overall. Debt snowball targets the smallest balances first, providing quicker psychological wins to build momentum.',\r\n  },\r\n  {\r\n    question: 'Should I pay off debt or build savings first?',\r\n    answer:\r\n      'Generally, pay off high-interest debt (above 6-8%) before building large savings. However, maintain a small emergency fund (┬ú1,000) first, then focus on debt, then build a full 3-6 month emergency fund.',\r\n  },\r\n  {\r\n    question: 'How can I find extra money to pay off debt faster?',\r\n    answer:\r\n      'Review your budget for unnecessary expenses, consider a side hustle, sell unused items, negotiate lower bills, use windfalls (tax refunds, bonuses), or temporarily reduce retirement contributions to focus on high-interest debt.',\r\n  },\r\n  {\r\n    question: 'Should I consolidate my debts?',\r\n    answer:\r\n      \"Debt consolidation can help if you qualify for a lower interest rate than your current average. Consider personal loans, balance transfer cards, or remortgaging. However, ensure you don't just extend the repayment period without saving on interest.\",\r\n  },\r\n  {\r\n    question: 'Will paying off debt early hurt my credit score?',\r\n    answer:\r\n      'No, paying off debt early generally improves your credit score by reducing your credit utilization ratio. The only minor impact might be from closing very old credit accounts, but the benefits of being debt-free outweigh this.',\r\n  },\r\n  {\r\n    question: \"What if I can't afford my minimum payments?\",\r\n    answer:\r\n      'Contact your creditors immediately to discuss hardship options like payment holidays, reduced payments, or interest freezes. Consider free debt advice from charities like StepChange, Citizens Advice, or National Debtline.',\r\n  },\r\n];\r\n\r\nexport default function DebtCalculator() {\r\n  const [debts, setDebts] = useState([]); // Initial state is empty\r\n  const [strategy, setStrategy] = useState('avalanche');\r\n  const [extraPayment, setExtraPayment] = useState(''); // Initial state is empty string\r\n  const [results, setResults] = useState(null); // Initial state is null\r\n  const [csvData, setCsvData] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false); // New state variable\r\n\r\n  // Helper function to create page URLs based on component name\r\n  const createPageUrl = (componentName) => {\r\n    // This function assumes a specific URL structure, e.g., /calculators/budget-calculator\r\n    // You might need to adjust this based on your actual routing implementation.\r\n    const slug = componentName.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase();\r\n    return `/calculators/${slug}`;\r\n  };\r\n\r\n  const addDebt = () => {\r\n    setDebts([\r\n      ...debts,\r\n      {\r\n        name: '', // Changed to empty string\r\n        balance: '', // Changed to empty string\r\n        apr: '', // Changed to empty string\r\n        minimumPayment: '', // Changed to empty string\r\n        type: 'credit_card',\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const updateDebt = (index, field, value) => {\r\n    const newDebts = [...debts];\r\n    newDebts[index] = { ...newDebts[index], [field]: value };\r\n    setDebts(newDebts);\r\n  };\r\n\r\n  const removeDebt = (index) => {\r\n    setDebts(debts.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    // Convert string inputs to numbers, defaulting to 0 for empty/invalid\r\n    const currentDebts = debts\r\n      .map((d) => ({\r\n        ...d,\r\n        balance: Number(d.balance) || 0,\r\n        apr: Number(d.apr) || 0,\r\n        minimumPayment: Number(d.minimumPayment) || 0,\r\n      }))\r\n      .filter((d) => d.balance > 0); // Filter out debts with 0 balance for calculation\r\n\r\n    const currentExtraPayment = Number(extraPayment) || 0;\r\n\r\n    // Only proceed if there are debts to calculate\r\n    if (currentDebts.length === 0) {\r\n      setResults(null);\r\n      setHasCalculated(false);\r\n      setCsvData(null);\r\n      return;\r\n    }\r\n\r\n    const newResults = calculatePayoffSchedule(currentDebts, strategy, currentExtraPayment);\r\n    const finalInterestSavings = calculateInterestSavings(currentDebts, newResults); // Pass original debts for min payment scenario\r\n    const finalResults = { ...newResults, interestSavings: finalInterestSavings };\r\n    setResults(finalResults);\r\n    setHasCalculated(true);\r\n\r\n    if (finalResults && finalResults.totalBalance !== undefined) {\r\n      const csvExportData = [\r\n        ['Metric', 'Value', 'Unit'],\r\n        [\r\n          'Payoff Time',\r\n          `${Math.floor(finalResults.totalMonths / 12)}y ${finalResults.totalMonths % 12}m`,\r\n          '',\r\n        ],\r\n        ['Total Interest Paid', finalResults.totalInterestPaid.toFixed(2), 'GBP'],\r\n        ['Interest Saved', finalInterestSavings.toFixed(2), 'GBP'],\r\n        ['Total Debt', finalResults.totalBalance.toFixed(2), 'GBP'],\r\n        ['Total Monthly Payment', finalResults.totalPayment.toFixed(2), 'GBP'],\r\n        ['Strategy', strategy, ''],\r\n        ['Extra Monthly Payment', currentExtraPayment.toFixed(2), 'GBP'],\r\n        ['', '', ''],\r\n        ['Payoff Schedule', 'Payoff Month', 'Payoff Date (Years from now)', 'Original Balance'],\r\n        ...(finalResults.payoffOrder || []).map((debt) => [\r\n          debt.name,\r\n          debt.month,\r\n          `${Math.floor(debt.month / 12)}y ${debt.month % 12}m`,\r\n          debt.originalBalance.toFixed(2),\r\n        ]),\r\n      ];\r\n      setCsvData(csvExportData);\r\n    }\r\n  };\r\n\r\n  // Modified to be a pure function, taking arguments instead of relying on state\r\n  const calculatePayoffSchedule = (debtsToCalculate, strategyToUse, extraPaymentAmount) => {\r\n    if (debtsToCalculate.length === 0) {\r\n      return {\r\n        totalMonths: 0,\r\n        totalInterestPaid: 0,\r\n        totalBalance: 0,\r\n        totalPayment: 0,\r\n        payoffOrder: [],\r\n        interestSavings: 0,\r\n      };\r\n    }\r\n\r\n    let debtsCopy = debtsToCalculate.map((debt) => ({ ...debt }));\r\n    const initialTotalBalance = debtsCopy.reduce((sum, debt) => sum + debt.balance, 0);\r\n    const initialTotalMinimum = debtsCopy.reduce((sum, debt) => sum + debt.minimumPayment, 0);\r\n    const totalMonthlyPaymentInitial = initialTotalMinimum + extraPaymentAmount;\r\n\r\n    // Sort debts based on strategy initially for consistent workingDebts creation order\r\n    if (strategyToUse === 'avalanche') {\r\n      debtsCopy.sort((a, b) => b.apr - a.apr);\r\n    } else {\r\n      // snowball\r\n      debtsCopy.sort((a, b) => a.balance - b.balance);\r\n    }\r\n\r\n    let month = 0;\r\n    let totalInterestPaid = 0;\r\n    let payoffOrder = [];\r\n    let remainingExtraPaymentFunds = extraPaymentAmount; // This is the amount that 'snowballs'\r\n\r\n    // Create a working copy of debts with unique IDs and original balances\r\n    const workingDebts = debtsCopy.map((debt, idx) => ({\r\n      ...debt,\r\n      id: idx,\r\n      originalBalance: debt.balance,\r\n    }));\r\n    const paidOffDebtIds = new Set();\r\n\r\n    while (workingDebts.some((debt) => debt.balance > 0) && month < 600) {\r\n      // Max 50 years to prevent infinite loops\r\n      month++;\r\n\r\n      // 1. Apply interest and minimum payments\r\n      workingDebts.forEach((debt) => {\r\n        if (debt.balance > 0) {\r\n          const monthlyInterest = (debt.balance * debt.apr) / (100 * 12);\r\n          totalInterestPaid += monthlyInterest;\r\n          debt.balance += monthlyInterest;\r\n\r\n          // Apply minimum payment for current month\r\n          const payment = Math.min(debt.minimumPayment, debt.balance);\r\n          debt.balance -= payment;\r\n        }\r\n      });\r\n\r\n      // 2. Sort debts again based on strategy to target the `remainingExtraPaymentFunds`\r\n      const currentSortedDebts = [...workingDebts].filter(\r\n        (debt) => debt.balance > 0 && !paidOffDebtIds.has(debt.id)\r\n      );\r\n\r\n      if (strategyToUse === 'avalanche') {\r\n        currentSortedDebts.sort((a, b) => b.apr - a.apr);\r\n      } else {\r\n        // snowball\r\n        currentSortedDebts.sort((a, b) => a.balance - b.balance);\r\n      }\r\n\r\n      // 3. Distribute the `remainingExtraPaymentFunds`\r\n      for (const debt of currentSortedDebts) {\r\n        if (remainingExtraPaymentFunds <= 0) break; // No more extra funds to distribute\r\n\r\n        const amountToPay = Math.min(remainingExtraPaymentFunds, debt.balance);\r\n        debt.balance -= amountToPay;\r\n        remainingExtraPaymentFunds -= amountToPay;\r\n      }\r\n\r\n      // 4. Check for newly paid-off debts and reallocate their minimum payments\r\n      workingDebts.forEach((debt) => {\r\n        if (debt.balance <= 0 && !paidOffDebtIds.has(debt.id)) {\r\n          payoffOrder.push({\r\n            name: debt.name,\r\n            month: month,\r\n            originalBalance: debt.originalBalance,\r\n          });\r\n          paidOffDebtIds.add(debt.id);\r\n          // Add this debt's minimum payment to the pool for the next month's extra payment\r\n          remainingExtraPaymentFunds += debt.minimumPayment;\r\n        }\r\n      });\r\n\r\n      // If no debts left, break early\r\n      if (workingDebts.every((debt) => debt.balance <= 0)) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return {\r\n      totalMonths: month,\r\n      totalInterestPaid,\r\n      totalBalance: initialTotalBalance, // Total initial debt\r\n      totalPayment: totalMonthlyPaymentInitial, // Total initial monthly payment (min + extra)\r\n      payoffOrder: payoffOrder,\r\n      interestSavings: 0, // Will be calculated by calculateInterestSavings\r\n    };\r\n  };\r\n\r\n  // Modified to be a pure function, taking arguments\r\n  const calculateInterestSavings = (debtsForMinPayment, currentResults) => {\r\n    if (!currentResults || !currentResults.totalInterestPaid || debtsForMinPayment.length === 0)\r\n      return 0;\r\n\r\n    // Calculate minimum payment scenario\r\n    let minPaymentInterest = 0;\r\n    let debtsCopyMin = debtsForMinPayment.map((debt) => ({ ...debt })); // Use provided debts\r\n    let monthMin = 0;\r\n\r\n    while (debtsCopyMin.some((debt) => debt.balance > 0) && monthMin < 600) {\r\n      monthMin++;\r\n      debtsCopyMin.forEach((debt) => {\r\n        if (debt.balance > 0) {\r\n          const monthlyInterest = (debt.balance * debt.apr) / (100 * 12);\r\n          minPaymentInterest += monthlyInterest;\r\n          debt.balance += monthlyInterest;\r\n\r\n          // Ensure payment doesn't exceed remaining balance\r\n          const payment = Math.min(debt.minimumPayment, debt.balance);\r\n          debt.balance -= payment;\r\n        }\r\n      });\r\n    }\r\n\r\n    return Math.max(0, minPaymentInterest - currentResults.totalInterestPaid);\r\n  };\r\n\r\n  // Modified useEffect to reset results when inputs change\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n    setCsvData(null);\r\n  }, [debts, strategy, extraPayment]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      {/* Page Header */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\r\n              UK Debt Repayment Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-400 max-w-3xl mx-auto\">\r\n              The best way out is always through. Create a clear debt-free plan and see how much\r\n              interest you can save with a focused strategy.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Calculator Content */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Debt Repayment Plan</div>\r\n\r\n        <div className=\"grid lg:grid-cols-3 gap-8 printable-grid-cols-1\">\r\n          {/* Input Panel */}\r\n          <div className=\"lg:col-span-1 space-y-6 non-printable\">\r\n            <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <CreditCard className=\"w-5 h-5\" />\r\n                  Your Debts\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                {debts.map((debt, index) => (\r\n                  <div key={index} className=\"p-4 border rounded-lg\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Input\r\n                        value={debt.name}\r\n                        onChange={(e) => updateDebt(index, 'name', e.target.value)}\r\n                        placeholder=\"e.g. Credit Card\"\r\n                        className=\"flex-1\"\r\n                      />\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"icon\"\r\n                        onClick={() => removeDebt(index)}\r\n                        className=\"text-red-500 hover:text-red-700\"\r\n                      >\r\n                        <Trash2 className=\"w-4 h-4\" />\r\n                      </Button>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-2 gap-2\">\r\n                      <div>\r\n                        <Label className=\"text-xs\">Balance</Label>\r\n                        <div className=\"relative\">\r\n                          <PoundSterling className=\"absolute left-2 top-1/2 transform -translate-y-1/2 w-3 h-3 text-gray-400\" />\r\n                          <Input\r\n                            type=\"number\"\r\n                            value={debt.balance}\r\n                            onChange={(e) => updateDebt(index, 'balance', e.target.value)}\r\n                            className=\"pl-7 text-sm\"\r\n                            placeholder=\"e.g. 5000\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        <Label className=\"text-xs\">APR (%)</Label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          value={debt.apr}\r\n                          onChange={(e) => updateDebt(index, 'apr', e.target.value)}\r\n                          step=\"0.1\"\r\n                          className=\"text-sm\"\r\n                          placeholder=\"e.g. 18.9\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Label className=\"text-xs\">Minimum Payment</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-2 top-1/2 transform -translate-y-1/2 w-3 h-3 text-gray-400\" />\r\n                        <Input\r\n                          type=\"number\"\r\n                          value={debt.minimumPayment}\r\n                          onChange={(e) => updateDebt(index, 'minimumPayment', e.target.value)}\r\n                          className=\"pl-7 text-sm\"\r\n                          placeholder=\"e.g. 125\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <Select\r\n                      value={debt.type}\r\n                      onValueChange={(value) => updateDebt(index, 'type', value)}\r\n                    >\r\n                      <SelectTrigger className=\"text-sm\">\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"credit_card\">Credit Card</SelectItem>\r\n                        <SelectItem value=\"personal_loan\">Personal Loan</SelectItem>\r\n                        <SelectItem value=\"car_loan\">Car Loan</SelectItem>\r\n                        <SelectItem value=\"student_loan\">Student Loan</SelectItem>\r\n                        <SelectItem value=\"other\">Other</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                ))}\r\n\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={addDebt}\r\n                  className=\"w-full flex items-center gap-2\"\r\n                >\r\n                  <Plus className=\"w-4 h-4\" />\r\n                  Add Debt\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n              <CardHeader>\r\n                <CardTitle>Repayment Strategy</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label>Strategy</Label>\r\n                  <Select value={strategy} onValueChange={setStrategy}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"avalanche\">\r\n                        Debt Avalanche (Highest Interest First)\r\n                      </SelectItem>\r\n                      <SelectItem value=\"snowball\">\r\n                        Debt Snowball (Smallest Balance First)\r\n                      </SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Extra Monthly Payment</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={extraPayment}\r\n                      onChange={(e) => setExtraPayment(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 200\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Plan\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Results Panel */}\r\n          <div className=\"lg:col-span-2 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-100\">\r\n                    Your Repayment Plan\r\n                  </h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"debt-repayment-plan\"\r\n                    title=\"Debt Repayment Plan\"\r\n                  />\r\n                </div>\r\n                {/* Summary Cards */}\r\n                <div className=\"grid md:grid-cols-3 gap-4\">\r\n                  <Card className=\"bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/50 dark:to-blue-800/50 border-blue-200 dark:border-blue-700\">\r\n                    <CardContent className=\"p-6\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-blue-800 dark:text-blue-200\">\r\n                            Payoff Time\r\n                          </p>\r\n                          <p className=\"text-2xl font-bold text-blue-900 dark:text-blue-100\">\r\n                            {Math.floor(results.totalMonths / 12)}y {results.totalMonths % 12}m\r\n                          </p>\r\n                        </div>\r\n                        <Calendar className=\"w-8 h-8 text-blue-600 dark:text-blue-400\" />\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  <Card className=\"bg-gradient-to-br from-red-50 to-red-100 dark:from-red-900/50 dark:to-red-800/50 border-red-200 dark:border-red-700\">\r\n                    <CardContent className=\"p-6\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-red-800 dark:text-red-200\">\r\n                            Total Interest\r\n                          </p>\r\n                          <p className=\"text-2xl font-bold text-red-900 dark:text-red-100\">\r\n                            ┬ú\r\n                            {results.totalInterestPaid?.toLocaleString('en-GB', {\r\n                              maximumFractionDigits: 0,\r\n                            })}\r\n                          </p>\r\n                        </div>\r\n                        <TrendingDown className=\"w-8 h-8 text-red-600 dark:text-red-400\" />\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  <Card className=\"bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/50 dark:to-green-800/50 border-green-200 dark:border-green-700\">\r\n                    <CardContent className=\"p-6\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-green-800 dark:text-green-200\">\r\n                            Interest Saved\r\n                          </p>\r\n                          <p className=\"text-2xl font-bold text-green-900 dark:text-green-100\">\r\n                            ┬ú\r\n                            {results.interestSavings?.toLocaleString('en-GB', {\r\n                              maximumFractionDigits: 0,\r\n                            })}\r\n                          </p>\r\n                        </div>\r\n                        <PoundSterling className=\"w-8 h-8 text-green-600 dark:text-green-400\" />\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                {/* Debt Overview */}\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardHeader>\r\n                    <CardTitle>Current Debt Overview</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-4\">\r\n                      {debts.map((debt, index) => (\r\n                        <div key={index} className=\"p-4 border rounded-lg\">\r\n                          <div className=\"flex justify-between items-start mb-2\">\r\n                            <h4 className=\"font-semibold\">{debt.name || 'Unnamed Debt'}</h4>\r\n                            <span className=\"text-lg font-bold\">\r\n                              ┬ú{(Number(debt.balance) || 0).toLocaleString()}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"grid grid-cols-3 gap-4 text-sm text-gray-600 dark:text-gray-400\">\r\n                            <div>\r\n                              <span>APR: </span>\r\n                              <span className=\"font-medium\">{Number(debt.apr) || 0}%</span>\r\n                            </div>\r\n                            <div>\r\n                              <span>Min Payment: </span>\r\n                              <span className=\"font-medium\">\r\n                                ┬ú{Number(debt.minimumPayment) || 0}\r\n                              </span>\r\n                            </div>\r\n                            <div>\r\n                              <span>Type: </span>\r\n                              <span className=\"font-medium capitalize\">\r\n                                {debt.type.replace('_', ' ')}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n\r\n                      <div className=\"border-t pt-4\">\r\n                        <div className=\"flex justify-between items-center text-lg font-semibold\">\r\n                          <span>Total Debt:</span>\r\n                          <span className=\"text-red-600\">\r\n                            ┬ú{results.totalBalance?.toLocaleString()}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                          <span>Total Monthly Payment:</span>\r\n                          <span>┬ú{results.totalPayment?.toLocaleString()}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Payoff Order */}\r\n                {results.payoffOrder && results.payoffOrder.length > 0 && (\r\n                  <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                    <CardHeader>\r\n                      <CardTitle>\r\n                        Payoff Schedule (\r\n                        {strategy === 'avalanche' ? 'Debt Avalanche' : 'Debt Snowball'})\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-3\">\r\n                        {results.payoffOrder.map((debt, index) => (\r\n                          <div\r\n                            key={index}\r\n                            className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\"\r\n                          >\r\n                            <div>\r\n                              <span className=\"font-medium\">{debt.name || 'Unnamed Debt'}</span>\r\n                              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                                Original balance: ┬ú{debt.originalBalance?.toLocaleString()}\r\n                              </p>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                              <div className=\"font-semibold\">Month {debt.month}</div>\r\n                              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                                {Math.floor(debt.month / 12)}y {debt.month % 12}m\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                )}\r\n\r\n                {/* Strategy Comparison */}\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardHeader>\r\n                    <CardTitle>Strategy Benefits</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"grid md:grid-cols-2 gap-6\">\r\n                      <div className=\"p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg\">\r\n                        <h4 className=\"font-semibold text-blue-900 dark:text-blue-100 mb-2\">\r\n                          Debt Avalanche\r\n                        </h4>\r\n                        <ul className=\"text-sm text-blue-800 dark:text-blue-200 space-y-1\">\r\n                          <li>ÔÇó Saves the most money in interest</li>\r\n                          <li>ÔÇó Mathematically optimal</li>\r\n                          <li>ÔÇó Focus on highest interest rates</li>\r\n                          <li>ÔÇó May take longer to see progress</li>\r\n                        </ul>\r\n                      </div>\r\n                      <div className=\"p-4 bg-green-50 dark:bg-green-900/30 rounded-lg\">\r\n                        <h4 className=\"font-semibold text-green-900 dark:text-green-100 mb-2\">\r\n                          Debt Snowball\r\n                        </h4>\r\n                        <ul className=\"text-sm text-green-800 dark:text-green-200 space-y-1\">\r\n                          <li>ÔÇó Quick psychological wins</li>\r\n                          <li>ÔÇó Builds momentum</li>\r\n                          <li>ÔÇó Focus on smallest balances</li>\r\n                          <li>ÔÇó May cost slightly more in interest</li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Tips */}\r\n                <Card className=\"bg-yellow-50 dark:bg-yellow-900/30 border-yellow-200 dark:border-yellow-700\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-yellow-800 dark:text-yellow-200\">\r\n                      Debt Repayment Tips\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-sm text-yellow-800 dark:text-yellow-200\">\r\n                    <ul className=\"space-y-2\">\r\n                      <li>\r\n                        ­ƒÆ░ <strong>Find extra money:</strong> Review your budget for areas to cut\r\n                        spending\r\n                      </li>\r\n                      <li>\r\n                        ­ƒô× <strong>Call creditors:</strong> Ask about hardship programs or lower\r\n                        interest rates\r\n                      </li>\r\n                      <li>\r\n                        ­ƒÆ│ <strong>Stop using credit:</strong> Avoid adding to your debt while\r\n                        paying it off\r\n                      </li>\r\n                      <li>\r\n                        ­ƒÄ» <strong>Stay motivated:</strong> Celebrate milestones and track your\r\n                        progress\r\n                      </li>\r\n                      <li>\r\n                        ÔÜû´©Å <strong>Consider consolidation:</strong> Lower interest loans might help\r\n                      </li>\r\n                    </ul>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"lg:col-span-2 flex items-center justify-center h-[400px] bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <div className=\"text-center text-gray-500 dark:text-gray-400\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to see your plan?</h3>\r\n                  <p>Add your debts and click \"Calculate Plan\" to become debt-free.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* FAQ Section */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 py-12 non-printable\">\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <FAQSection faqs={debtCalculatorFAQs} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* NEW: Related calculators block for contextual interlinking */}\r\n      <RelatedCalculators\r\n        calculators={[\r\n          {\r\n            name: 'Budget Planner',\r\n            url: createPageUrl('BudgetCalculator'),\r\n            description: 'Find money for debt payoff by optimising your monthly budget.',\r\n          },\r\n          {\r\n            name: 'Credit Card Repayment Calculator',\r\n            url: createPageUrl('CreditCardRepaymentCalculator'),\r\n            description: 'See how long it takes to clear your credit card.',\r\n          },\r\n          {\r\n            name: 'Loan Repayment Calculator',\r\n            url: createPageUrl('LoanRepaymentCalculator'),\r\n            description: 'Estimate payments for personal or car loans.',\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\DebtToIncomeRatioCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 88,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, TrendingDown, Plus, Trash2, Percent } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst dtiFAQs = [\r\n  {\r\n    question: 'What is a Debt-to-Income (DTI) ratio?',\r\n    answer:\r\n      'Your DTI ratio is the percentage of your gross monthly income that goes towards paying your monthly debt payments. Lenders use it to assess your ability to manage monthly payments and repay debts.',\r\n  },\r\n  {\r\n    question: 'What is a good DTI ratio?',\r\n    answer:\r\n      'Lenders generally prefer a DTI ratio of 36% or less. A ratio above 43% is often considered too high, making it difficult to get approved for a mortgage or other loans.',\r\n  },\r\n  {\r\n    question: 'How can I lower my DTI ratio?',\r\n    answer:\r\n      'You can lower your DTI by either increasing your income or reducing your monthly debt payments. Focus on paying down high-interest loans or credit card balances first. Avoid taking on new debt before applying for a major loan.',\r\n  },\r\n];\r\n\r\nexport default function DebtToIncomeRatioCalculator() {\r\n  const [grossIncome, setGrossIncome] = useState('');\r\n  const [debtItems, setDebtItems] = useState([\r\n    { name: 'Mortgage/Rent', amount: '' },\r\n    { name: 'Car Loan', amount: '' },\r\n  ]);\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const updateDebtItem = (index, field, value) => {\r\n    const newItems = [...debtItems];\r\n    newItems[index][field] = value;\r\n    setDebtItems(newItems);\r\n  };\r\n\r\n  const addDebtItem = () => setDebtItems([...debtItems, { name: '', amount: '' }]);\r\n  const removeDebtItem = (index) => setDebtItems(debtItems.filter((_, i) => i !== index));\r\n\r\n  const handleCalculate = () => {\r\n    const income = Number(grossIncome) || 0;\r\n    const totalDebts = debtItems.reduce((sum, item) => sum + (Number(item.amount) || 0), 0);\r\n\r\n    if (income <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const dtiRatio = (totalDebts / income) * 100;\r\n\r\n    let status = 'Healthy';\r\n    let statusColor = 'text-green-600';\r\n    if (dtiRatio > 43) {\r\n      status = 'High Risk';\r\n      statusColor = 'text-red-600';\r\n    } else if (dtiRatio > 36) {\r\n      status = 'Needs Improvement';\r\n      statusColor = 'text-amber-600';\r\n    }\r\n\r\n    const newResults = { dtiRatio, totalDebts, grossIncome: income, status, statusColor };\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Gross Monthly Income', `┬ú${income.toFixed(2)}`],\r\n      ...debtItems.map((item) => [\r\n        `Monthly Debt: ${item.name}`,\r\n        `┬ú${(Number(item.amount) || 0).toFixed(2)}`,\r\n      ]),\r\n      ['Total Monthly Debts', `┬ú${totalDebts.toFixed(2)}`],\r\n      ['DTI Ratio', `${dtiRatio.toFixed(2)}%`],\r\n      ['Status', status],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Debt-to-Income (DTI) Ratio Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Understand a key metric lenders use to assess your financial health before approving\r\n              you for a loan or mortgage.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid lg:grid-cols-5 gap-8\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Your Monthly Finances</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"grossIncome\">Gross Monthly Income</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"grossIncome\"\r\n                      type=\"number\"\r\n                      value={grossIncome}\r\n                      onChange={(e) => setGrossIncome(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 4000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label>Monthly Debt Payments</Label>\r\n                  <div className=\"space-y-2 mt-2\">\r\n                    {debtItems.map((item, index) => (\r\n                      <div key={index} className=\"flex gap-2 items-center\">\r\n                        <Input\r\n                          value={item.name}\r\n                          onChange={(e) => updateDebtItem(index, 'name', e.target.value)}\r\n                          placeholder=\"e.g. Credit Card\"\r\n                        />\r\n                        <div className=\"relative\">\r\n                          <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                          <Input\r\n                            type=\"number\"\r\n                            value={item.amount}\r\n                            onChange={(e) => updateDebtItem(index, 'amount', e.target.value)}\r\n                            className=\"pl-10 w-32\"\r\n                          />\r\n                        </div>\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"icon\"\r\n                          onClick={() => removeDebtItem(index)}\r\n                          className=\"text-red-500 hover:text-red-700\"\r\n                        >\r\n                          <Trash2 className=\"w-4 h-4\" />\r\n                        </Button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <Button variant=\"outline\" onClick={addDebtItem} className=\"w-full mt-2\">\r\n                    <Plus className=\"w-4 h-4 mr-2\" />\r\n                    Add Debt\r\n                  </Button>\r\n                </div>\r\n\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate DTI\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your DTI Ratio Result</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"dti-ratio-summary\"\r\n                    title=\"DTI Ratio Summary\"\r\n                  />\r\n                </div>\r\n\r\n                <Card className=\"text-center\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex justify-center items-center gap-2\">\r\n                      <Percent className=\"w-6 h-6\" />\r\n                      Your DTI Ratio\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <p className={`text-6xl font-bold ${results.statusColor}`}>\r\n                      {results.dtiRatio.toFixed(1)}%\r\n                    </p>\r\n                    <p className={`text-xl font-semibold mt-2 ${results.statusColor}`}>\r\n                      ({results.status})\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Financial Summary</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Gross Monthly Income:</span>{' '}\r\n                      <span className=\"font-semibold\">┬ú{results.grossIncome.toLocaleString()}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Total Monthly Debts:</span>{' '}\r\n                      <span className=\"font-semibold text-red-600\">\r\n                        ┬ú{results.totalDebts.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>What This Means</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4 text-sm\">\r\n                    <div className=\"flex items-start gap-4 p-3 bg-green-50 rounded-lg\">\r\n                      <div className=\"font-bold text-green-700 w-24\">0-36%</div>\r\n                      <p className=\"text-green-800\">\r\n                        <strong>Healthy:</strong> You likely have a good balance between debt and\r\n                        income and should be able to get new credit easily.\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex items-start gap-4 p-3 bg-amber-50 rounded-lg\">\r\n                      <div className=\"font-bold text-amber-700 w-24\">37-43%</div>\r\n                      <p className=\"text-amber-800\">\r\n                        <strong>Needs Improvement:</strong> You may have less room in your budget\r\n                        for unexpected costs. Lenders may see you as a higher risk.\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex items-start gap-4 p-3 bg-red-50 rounded-lg\">\r\n                      <div className=\"font-bold text-red-700 w-24\">44%+</div>\r\n                      <p className=\"text-red-800\">\r\n                        <strong>High Risk:</strong> You have a limited amount of income available\r\n                        for new credit. It will be difficult to get approved for new loans.\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px] bg-gray-50\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <TrendingDown className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Discover your DTI ratio</h3>\r\n                  <p>Enter your income and debts to see where you stand.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={dtiFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\Disclaimer.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 7,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { AlertTriangle } from 'lucide-react';\r\n\r\nexport default function Disclaimer() {\r\n  return (\r\n    <div className=\"bg-white py-12\">\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"text-center mb-12\">\r\n          <AlertTriangle className=\"w-12 h-12 mx-auto text-amber-500\" />\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mt-4\">Disclaimer</h1>\r\n          <p className=\"text-lg text-gray-600 mt-2\">Last updated: 27/08/2025</p>\r\n        </div>\r\n\r\n        <Card className=\"bg-amber-50 border-amber-200\">\r\n          <CardContent className=\"p-8 space-y-6 text-gray-700 dark:text-gray-300 leading-relaxed\">\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-gray-100\">\r\n              For Informational Purposes Only\r\n            </h2>\r\n            <p>\r\n              The information and calculations provided by CalcMyMoney.co.uk are for general\r\n              informational and educational purposes only. All information on the site is provided\r\n              in good faith, however, we make no representation or warranty of any kind, express or\r\n              implied, regarding the accuracy, adequacy, validity, reliability, availability, or\r\n              completeness of any information or calculation on the site.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-gray-100 pt-4\">\r\n              Not Professional Advice\r\n            </h2>\r\n            <p>\r\n              The use of our calculators does not create a professional-client relationship. The\r\n              website cannot and does not contain financial advice. The financial information is\r\n              provided for general informational purposes only and is not a substitute for\r\n              professional advice. Accordingly, before taking any actions based upon such\r\n              information, we encourage you to consult with the appropriate professionals.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-gray-100 pt-4\">\r\n              Calculations are Estimates\r\n            </h2>\r\n            <p>\r\n              The results generated by our calculators are estimates based on the data you provide\r\n              and current (as of the date of the last update) tax laws and financial formulas. These\r\n              figures may not reflect your actual financial situation and should be used as a guide\r\n              only. We do not guarantee the accuracy of any calculation.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-gray-100 pt-4\">\r\n              No Guarantees\r\n            </h2>\r\n            <p>\r\n              Your reliance on any information on the site is solely at your own risk. We do not\r\n              warrant that the site will be available, uninterrupted, or error-free. Under no\r\n              circumstance shall we have any liability to you for any loss or damage of any kind\r\n              incurred as a result of the use of the site or reliance on any information provided on\r\n              the site.\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\DividendTaxCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 121,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { PoundSterling, Percent, Calculator, TrendingUp } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst dividendTaxFAQs = [\r\n  {\r\n    question: 'What is the Dividend Allowance?',\r\n    answer:\r\n      'The Dividend Allowance is the amount of dividend income you can receive each tax year without paying any tax. For the 2024/25 tax year, this allowance is ┬ú500. You do not pay tax on any dividend income that falls within this allowance.',\r\n  },\r\n  {\r\n    question: 'How is dividend tax calculated?',\r\n    answer:\r\n      'Dividend tax is calculated based on your Income Tax band. After using your Personal Allowance and Dividend Allowance, any further dividends are taxed at specific rates for basic, higher, and additional rate taxpayers. Your other income (like a salary) determines which tax band your dividends fall into.',\r\n  },\r\n  {\r\n    question: 'Do I need to file a tax return for dividends?',\r\n    answer:\r\n      'If your dividend income is more than the ┬ú500 allowance, you will usually need to declare it to HMRC, typically through a Self Assessment tax return.',\r\n  },\r\n  {\r\n    question: 'A Note on Trustworthiness',\r\n    answer:\r\n      'This calculator is based on the 2024/25 tax rates for England, Wales, and Northern Ireland. Tax laws are complex and can change. This tool is for estimation purposes and should not be considered financial advice. For official guidance, refer to GOV.UK or consult a tax professional.',\r\n  },\r\n];\r\n\r\n// 2024/25 Tax Year Rates\r\nconst PERSONAL_ALLOWANCE = 12570;\r\nconst DIVIDEND_ALLOWANCE = 500;\r\nconst BASIC_RATE_LIMIT = 50270;\r\nconst HIGHER_RATE_LIMIT = 125140;\r\n\r\nconst DIVIDEND_TAX_RATES = {\r\n  basic: 0.0875,\r\n  higher: 0.3375,\r\n  additional: 0.3935,\r\n};\r\n\r\nexport default function DividendTaxCalculator() {\r\n  const [otherIncome, setOtherIncome] = useState('50000');\r\n  const [dividendIncome, setDividendIncome] = useState('5000');\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const otherInc = Number(otherIncome) || 0;\r\n    const dividendInc = Number(dividendIncome) || 0;\r\n\r\n    let personalAllowance = PERSONAL_ALLOWANCE;\r\n    if (otherInc > 100000) {\r\n      personalAllowance = Math.max(0, PERSONAL_ALLOWANCE - (otherInc - 100000) / 2);\r\n    }\r\n\r\n    const incomeAfterPA = Math.max(0, otherInc - personalAllowance);\r\n\r\n    let taxableDividends = Math.max(0, dividendInc - DIVIDEND_ALLOWANCE);\r\n    let tax = 0;\r\n    let breakdown = [];\r\n    let remainingTaxableDividends = taxableDividends;\r\n\r\n    const basicRateBandAvailable = Math.max(\r\n      0,\r\n      BASIC_RATE_LIMIT - personalAllowance - incomeAfterPA\r\n    );\r\n    const higherRateBandAvailable = Math.max(0, HIGHER_RATE_LIMIT - BASIC_RATE_LIMIT);\r\n\r\n    // Tax in basic rate band\r\n    if (remainingTaxableDividends > 0 && basicRateBandAvailable > 0) {\r\n      const amountInBand = Math.min(remainingTaxableDividends, basicRateBandAvailable);\r\n      const taxInBand = amountInBand * DIVIDEND_TAX_RATES.basic;\r\n      tax += taxInBand;\r\n      remainingTaxableDividends -= amountInBand;\r\n      if (taxInBand > 0)\r\n        breakdown.push({\r\n          name: 'Basic Rate',\r\n          amount: taxInBand,\r\n          taxableAmount: amountInBand,\r\n          rate: DIVIDEND_TAX_RATES.basic * 100,\r\n        });\r\n    }\r\n\r\n    // Tax in higher rate band\r\n    if (remainingTaxableDividends > 0 && higherRateBandAvailable > 0) {\r\n      const amountInBand = Math.min(remainingTaxableDividends, higherRateBandAvailable);\r\n      const taxInBand = amountInBand * DIVIDEND_TAX_RATES.higher;\r\n      tax += taxInBand;\r\n      remainingTaxableDividends -= amountInBand;\r\n      if (taxInBand > 0)\r\n        breakdown.push({\r\n          name: 'Higher Rate',\r\n          amount: taxInBand,\r\n          taxableAmount: amountInBand,\r\n          rate: DIVIDEND_TAX_RATES.higher * 100,\r\n        });\r\n    }\r\n\r\n    // Tax in additional rate band\r\n    if (remainingTaxableDividends > 0) {\r\n      const taxInBand = remainingTaxableDividends * DIVIDEND_TAX_RATES.additional;\r\n      tax += taxInBand;\r\n      if (taxInBand > 0)\r\n        breakdown.push({\r\n          name: 'Additional Rate',\r\n          amount: taxInBand,\r\n          taxableAmount: remainingTaxableDividends,\r\n          rate: DIVIDEND_TAX_RATES.additional * 100,\r\n        });\r\n    }\r\n\r\n    setResults({ taxPayable: tax, breakdown });\r\n  }, [otherIncome, dividendIncome]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              UK Dividend Tax Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Estimate the tax you'll owe on your dividend income for the 2024/25 tax year.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Income Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label htmlFor=\"otherIncome\">Other Annual Income (e.g. Salary) (┬ú)</Label>\r\n                  <Input\r\n                    id=\"otherIncome\"\r\n                    type=\"number\"\r\n                    value={otherIncome}\r\n                    onChange={(e) => setOtherIncome(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"dividendIncome\">Total Annual Dividend Income (┬ú)</Label>\r\n                  <Input\r\n                    id=\"dividendIncome\"\r\n                    type=\"number\"\r\n                    value={dividendIncome}\r\n                    onChange={(e) => setDividendIncome(e.target.value)}\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div>\r\n            {results ? (\r\n              <div className=\"space-y-6\">\r\n                <Card className=\"bg-red-50 border-red-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-red-900\">Estimated Dividend Tax</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <p className=\"text-5xl font-bold text-red-900\">\r\n                      ┬ú\r\n                      {results.taxPayable.toLocaleString('en-GB', {\r\n                        minimumFractionDigits: 2,\r\n                        maximumFractionDigits: 2,\r\n                      })}\r\n                    </p>\r\n                    <p className=\"text-sm text-red-700 mt-2\">\r\n                      Based on your total income and dividend allowance.\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Tax Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex justify-between items-center text-sm\">\r\n                      <span>Within ┬ú{DIVIDEND_ALLOWANCE} Dividend Allowance:</span>\r\n                      <span className=\"font-semibold text-green-700\">┬ú0.00 tax</span>\r\n                    </div>\r\n                    {results.breakdown.map((item, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className=\"flex justify-between items-center text-sm p-2 bg-gray-50 rounded-md\"\r\n                      >\r\n                        <div>\r\n                          <span>\r\n                            Tax on ┬ú{item.taxableAmount.toLocaleString()} at {item.rate.toFixed(2)}%\r\n                            ({item.name})\r\n                          </span>\r\n                        </div>\r\n                        <span className=\"font-semibold\">\r\n                          -┬ú{item.amount.toLocaleString('en-GB', { maximumFractionDigits: 2 })}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                    {results.taxPayable === 0 && (\r\n                      <p className=\"text-sm text-gray-600\">\r\n                        Your dividend income is within your tax-free allowances.\r\n                      </p>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full\">\r\n                <p className=\"text-gray-500\">Enter details to calculate tax.</p>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={dividendTaxFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\DreamLifestyleCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 235,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  PoundSterling,\r\n  Calculator,\r\n  Sparkles,\r\n  Gem,\r\n  Car,\r\n  Home,\r\n  TrendingUp,\r\n  Plane,\r\n  Crown,\r\n  Zap,\r\n  Plus,\r\n  Trash2,\r\n} from 'lucide-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\n\r\nconst dreamItems = {\r\n  property: {\r\n    icon: Home,\r\n    items: [\r\n      { name: 'Penthouse in Mayfair', value: 25000000 },\r\n      { name: 'Country Estate with 500 Acres', value: 15000000 },\r\n      { name: 'Luxury Villa in the Cotswolds', value: 8000000 },\r\n    ],\r\n  },\r\n  vehicles: {\r\n    icon: Car,\r\n    items: [\r\n      { name: 'Rolls-Royce Phantom', value: 400000 },\r\n      { name: 'Private Jet (Gulfstream G650)', value: 70000000 },\r\n      { name: 'Luxury Yacht (100ft)', value: 15000000 },\r\n    ],\r\n  },\r\n  investments: {\r\n    icon: TrendingUp,\r\n    items: [\r\n      { name: 'S&P 500 Portfolio', value: 750000 },\r\n      { name: 'Bitcoin (10 BTC)', value: 350000 },\r\n      { name: 'Art Collection (Banksy, Hockney)', value: 5000000 },\r\n    ],\r\n  },\r\n  luxury: {\r\n    icon: Gem,\r\n    items: [\r\n      { name: 'Patek Philippe Nautilus', value: 80000 },\r\n      { name: 'Diamond Engagement Ring (5 carat)', value: 150000 },\r\n      { name: 'Herm├¿s Birkin Bag Collection', value: 200000 },\r\n    ],\r\n  },\r\n  experiences: {\r\n    icon: Plane,\r\n    items: [\r\n      { name: 'Space Tourism Ticket', value: 450000 },\r\n      { name: 'Private Safari in Africa', value: 75000 },\r\n      { name: 'Formula 1 VIP Experience', value: 15000 },\r\n    ],\r\n  },\r\n};\r\n\r\nconst getFunResponse = (total) => {\r\n  if (total >= 100000000) {\r\n    return {\r\n      title: '­ƒÅ░ Royalty Status Achieved!',\r\n      message:\r\n        \"You're not just rich, you're 'buy a small country' rich! Even the Queen would be impressed. Time to start practicing your royal wave! ­ƒææ\",\r\n      tip: 'With great wealth comes great responsibility... and amazing tax planning opportunities!',\r\n    };\r\n  } else if (total >= 50000000) {\r\n    return {\r\n      title: '­ƒø®´©Å Private Jet Lifestyle',\r\n      message:\r\n        \"You've entered the stratosphere of wealth! At this level, you probably have people who have people. Don't forget us little people! Ô£ê´©Å\",\r\n      tip: 'Pro tip: This level of wealth requires serious financial planning. Our pension calculator suddenly seems quite modest!',\r\n    };\r\n  } else if (total >= 25000000) {\r\n    return {\r\n      title: '­ƒÅû´©Å Island Owner Status',\r\n      message:\r\n        \"Welcome to the 'I own my own island' club! You're so rich, your money has money. Time to start your own currency! ­ƒÅØ´©Å\",\r\n      tip: 'Reality check: Even billionaires started with budgeting. Check out our budget calculator for the journey!',\r\n    };\r\n  } else if (total >= 10000000) {\r\n    return {\r\n      title: '­ƒÄ® Definitely Not Average',\r\n      message:\r\n        \"You're living like a character from a Jane Austen novel, but with better plumbing! Society parties and fox hunting await! ­ƒªè\",\r\n      tip: 'Your fantasy lifestyle is enviable! Want to make some of it reality? Start with our compound interest calculator.',\r\n    };\r\n  } else if (total >= 5000000) {\r\n    return {\r\n      title: '­ƒì¥ Champagne Problems',\r\n      message:\r\n        \"You've got 99 problems, but money ain't one! Your biggest worry is which yacht to take to Monaco. Life is tough! ÔøÁ\",\r\n      tip: 'Living the dream! But even dreams need planning. Check out our investment calculators to get started.',\r\n    };\r\n  } else if (total >= 2000000) {\r\n    return {\r\n      title: '­ƒÅí Fancy Pants Territory',\r\n      message:\r\n        \"You're officially in 'I have arrived' territory! Time to practice saying 'my people will call your people' with a straight face! ­ƒÄ¡\",\r\n      tip: 'This lifestyle is achievable with smart planning! Our pension calculator shows how compound growth works magic.',\r\n    };\r\n  } else if (total >= 1000000) {\r\n    return {\r\n      title: '­ƒÆÄ Millionaire Mindset',\r\n      message:\r\n        \"Welcome to the millionaire's club! You can now afford to be 'eccentric' instead of 'weird'. Embrace your quirkiness! ­ƒÄ¬\",\r\n      tip: 'Being a millionaire is more achievable than you think! Our savings goal calculator can show you the path.',\r\n    };\r\n  } else if (total >= 500000) {\r\n    return {\r\n      title: '­ƒÜù Living Comfortably',\r\n      message:\r\n        \"You're in the 'comfortable' zone! You can afford the good stuff without checking your bank balance first. Living the dream! ­ƒÿî\",\r\n      tip: 'This level of wealth is definitely within reach! Start with our budget planner to see how to get there.',\r\n    };\r\n  } else {\r\n    return {\r\n      title: '­ƒî▒ Everyone Starts Somewhere',\r\n      message:\r\n        'Hey, we all have to start somewhere! Even Jeff Bezos once worried about student loans. Your empire awaits! ­ƒÜÇ',\r\n      tip: 'Turn dreams into plans! Our salary calculator and budget planner are perfect places to start your wealth journey.',\r\n    };\r\n  }\r\n};\r\n\r\nexport default function DreamLifestyleCalculator() {\r\n  const [selectedItems, setSelectedItems] = useState({});\r\n  const [customEntries, setCustomEntries] = useState({});\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const addItem = (category, item) => {\r\n    const key = `${category}_${item.name}`;\r\n    setSelectedItems((prev) => ({\r\n      ...prev,\r\n      [key]: { ...item, category, quantity: (prev[key]?.quantity || 0) + 1 },\r\n    }));\r\n  };\r\n\r\n  const removeItem = (key) => {\r\n    setSelectedItems((prev) => {\r\n      const newItems = { ...prev };\r\n      if (newItems[key].quantity > 1) {\r\n        newItems[key] = { ...newItems[key], quantity: newItems[key].quantity - 1 };\r\n      } else {\r\n        delete newItems[key];\r\n      }\r\n      return newItems;\r\n    });\r\n  };\r\n\r\n  const addCustomItem = (e, category) => {\r\n    e.preventDefault();\r\n    const name = e.target.name.value;\r\n    const value = e.target.value.value;\r\n    if (!name || !value || value <= 0) return;\r\n\r\n    setCustomEntries((prev) => ({\r\n      ...prev,\r\n      [category]: [...(prev[category] || []), { name, value: Number(value) }],\r\n    }));\r\n    e.target.reset();\r\n  };\r\n\r\n  const removeCustomItem = (category, index) => {\r\n    setCustomEntries((prev) => ({\r\n      ...prev,\r\n      [category]: prev[category].filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    let total = 0;\r\n    Object.values(selectedItems).forEach((item) => {\r\n      total += item.value * item.quantity;\r\n    });\r\n    Object.values(customEntries).forEach((categoryItems) => {\r\n      categoryItems.forEach((item) => {\r\n        total += item.value;\r\n      });\r\n    });\r\n    return total;\r\n  };\r\n\r\n  const isItemSelected = (category, item) => {\r\n    const key = `${category}_${item.name}`;\r\n    return selectedItems[key] ? true : false;\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    const total = calculateTotal();\r\n    const response = getFunResponse(total);\r\n\r\n    setResults({\r\n      total,\r\n      response,\r\n      itemCount: Object.keys(selectedItems).length + Object.values(customEntries).flat().length,\r\n    });\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Category', 'Item', 'Quantity', 'Value'],\r\n      ...Object.values(selectedItems).map((item) => [\r\n        item.category,\r\n        item.name,\r\n        item.quantity,\r\n        item.value * item.quantity,\r\n      ]),\r\n      ...Object.entries(customEntries).flatMap(([category, items]) =>\r\n        items.map((item) => [category, item.name, 1, item.value])\r\n      ),\r\n      [],\r\n      ['Summary', 'Total Dream Value', '', total.toFixed(2)],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setSelectedItems({});\r\n    setCustomEntries({});\r\n    setResults(null);\r\n    setHasCalculated(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <style>{`\r\n        .print-only {\r\n            display: none;\r\n        }\r\n        @media print {\r\n            body {\r\n                background-color: white !important;\r\n            }\r\n            .non-printable {\r\n                display: none !important;\r\n            }\r\n            .printable-area {\r\n                display: block !important;\r\n                box-shadow: none !important;\r\n                border: none !important;\r\n                padding: 0 !important;\r\n                margin: 0 !important;\r\n                width: 100% !important;\r\n                max-width: 100% !important;\r\n            }\r\n            .printable-grid-cols-1 {\r\n                grid-template-columns: 1fr !important;\r\n            }\r\n            .print-title {\r\n                display: block !important;\r\n                text-align: center;\r\n                font-size: 24px;\r\n                font-weight: bold;\r\n                margin-bottom: 2rem;\r\n            }\r\n            .print-only {\r\n                display: block;\r\n                margin-top: 2rem;\r\n            }\r\n            .print-images {\r\n                display: grid !important;\r\n                grid-template-columns: 1fr 1fr;\r\n                gap: 1rem;\r\n                margin-top: 1.5rem;\r\n                page-break-before: auto;\r\n            }\r\n            .print-images img {\r\n                width: 100%;\r\n                border-radius: 8px;\r\n                aspect-ratio: 16 / 10;\r\n                object-fit: cover;\r\n            }\r\n        }\r\n      `}</style>\r\n      <div className=\"bg-gradient-to-br from-purple-50 to-pink-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <Sparkles className=\"w-12 h-12 mx-auto text-purple-600 mb-4\" />\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Dream Lifestyle Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Go on, live a little in your imagination! Build your fantasy empire and see just how\r\n              wealthy your dreams really are.\r\n              <span className=\"text-purple-600 font-medium\">\r\n                {' '}\r\n                Warning: May cause excessive daydreaming!\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 printable-grid-cols-1 grid lg:grid-cols-5 gap-8\">\r\n        {/* Dream Builder */}\r\n        <div className=\"lg:col-span-2 space-y-6 non-printable\">\r\n          <div className=\"text-center mb-6\">\r\n            <h2 className=\"text-2xl font-bold text-gray-800\">Build Your Fantasy Empire</h2>\r\n            <p className=\"text-gray-600\">Click to add pre-defined items or add your own!</p>\r\n          </div>\r\n\r\n          {Object.entries(dreamItems).map(([category, data]) => (\r\n            <Card key={category} className=\"hover:shadow-lg transition-shadow\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-3 capitalize\">\r\n                  <data.icon className=\"w-6 h-6 text-purple-600\" />\r\n                  {category}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid md:grid-cols-2 gap-3\">\r\n                  {data.items.map((item, index) => (\r\n                    <Button\r\n                      key={index}\r\n                      variant={isItemSelected(category, item) ? 'default' : 'outline'}\r\n                      onClick={() => addItem(category, item)}\r\n                      className={`h-auto p-4 text-left justify-start transition-all duration-200 ${\r\n                        isItemSelected(category, item)\r\n                          ? 'bg-purple-600 hover:bg-purple-700 text-white border-purple-600'\r\n                          : 'hover:bg-purple-50 hover:border-purple-300'\r\n                      }`}\r\n                    >\r\n                      <div>\r\n                        <div className=\"font-medium\">{item.name}</div>\r\n                        <div\r\n                          className={`text-sm ${isItemSelected(category, item) ? 'text-purple-100' : 'text-gray-500'}`}\r\n                        >\r\n                          ┬ú{item.value.toLocaleString()}\r\n                        </div>\r\n                      </div>\r\n                    </Button>\r\n                  ))}\r\n                </div>\r\n                <div className=\"border-t my-4\"></div>\r\n                <form onSubmit={(e) => addCustomItem(e, category)} className=\"space-y-3\">\r\n                  <h4 className=\"font-medium\">Add a custom item</h4>\r\n                  <div className=\"grid sm:grid-cols-3 gap-2 items-end\">\r\n                    <div className=\"sm:col-span-2 space-y-1\">\r\n                      <Label htmlFor={`${category}-name`} className=\"text-xs\">\r\n                        Item Name\r\n                      </Label>\r\n                      <Input\r\n                        id={`${category}-name`}\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. My Beach House\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"space-y-1\">\r\n                      <Label htmlFor={`${category}-value`} className=\"text-xs\">\r\n                        Value (┬ú)\r\n                      </Label>\r\n                      <Input\r\n                        id={`${category}-value`}\r\n                        name=\"value\"\r\n                        type=\"number\"\r\n                        placeholder=\"1500000\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <Button type=\"submit\" variant=\"secondary\" size=\"sm\" className=\"w-full\">\r\n                    <Plus className=\"w-4 h-4 mr-2\" /> Add Custom {category.slice(0, -1)}\r\n                  </Button>\r\n                </form>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Dream Summary & Results */}\r\n        <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n          <div className=\"print-title hidden\">My Dream Lifestyle Vision Board</div>\r\n          <Card className=\"bg-gradient-to-br from-purple-50 to-pink-50 border-purple-200\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-purple-800\">Your Dream Empire</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {Object.keys(selectedItems).length > 0 ||\r\n              Object.values(customEntries).flat().length > 0 ? (\r\n                <div className=\"space-y-3\">\r\n                  {Object.entries(selectedItems).map(([key, item]) => (\r\n                    <div key={key} className=\"flex justify-between items-center text-sm\">\r\n                      <span className=\"pr-2\">\r\n                        {item.name} {item.quantity > 1 && `(x${item.quantity})`}\r\n                      </span>\r\n                      <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n                        <span>┬ú{(item.value * item.quantity).toLocaleString()}</span>\r\n                        <Button\r\n                          size=\"sm\"\r\n                          variant=\"ghost\"\r\n                          onClick={() => removeItem(key)}\r\n                          className=\"h-6 w-6 p-0 text-red-500 non-printable\"\r\n                        >\r\n                          ├ù\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  {Object.entries(customEntries).flatMap(([category, items]) =>\r\n                    items.map((item, index) => (\r\n                      <div\r\n                        key={`${category}-${index}`}\r\n                        className=\"flex justify-between items-center text-sm\"\r\n                      >\r\n                        <span className=\"pr-2\">\r\n                          {item.name} <em className=\"text-xs text-purple-600\">(Custom)</em>\r\n                        </span>\r\n                        <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n                          <span>┬ú{item.value.toLocaleString()}</span>\r\n                          <Button\r\n                            size=\"sm\"\r\n                            variant=\"ghost\"\r\n                            onClick={() => removeCustomItem(category, index)}\r\n                            className=\"h-6 w-6 p-0 text-red-500 non-printable\"\r\n                          >\r\n                            ├ù\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  )}\r\n\r\n                  {hasCalculated && (\r\n                    <div className=\"border-t pt-3\">\r\n                      <div className=\"flex justify-between items-center font-bold text-lg\">\r\n                        <span>Total Dream Value:</span>\r\n                        <span className=\"text-purple-800\">\r\n                          ┬ú{calculateTotal().toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"flex gap-2 pt-2 non-printable\">\r\n                    <Button\r\n                      onClick={handleCalculate}\r\n                      className=\"flex-1 bg-purple-600 hover:bg-purple-700\"\r\n                    >\r\n                      <Crown className=\"w-4 h-4 mr-2\" />\r\n                      Calculate My Empire!\r\n                    </Button>\r\n                    <Button variant=\"outline\" onClick={clearAll}>\r\n                      Clear All\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center text-gray-500 py-8 non-printable\">\r\n                  <Sparkles className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <p>Start building your dream lifestyle by selecting items above!</p>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Results */}\r\n          {hasCalculated && results && (\r\n            <div className=\"space-y-6\">\r\n              <Card className=\"bg-gradient-to-br from-yellow-50 to-orange-50 border-yellow-200\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-center text-orange-800 flex items-center justify-between\">\r\n                    {results.response.title}\r\n                    <div className=\"non-printable\">\r\n                      <ExportActions\r\n                        csvData={csvData}\r\n                        fileName=\"dream-lifestyle\"\r\n                        title=\"My Dream Lifestyle Vision Board\"\r\n                      />\r\n                    </div>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"text-center\">\r\n                    <div className=\"text-4xl font-bold text-orange-900 mb-2\">\r\n                      ┬ú{results.total.toLocaleString()}\r\n                    </div>\r\n                    <div className=\"text-sm text-orange-700\">Your total fantasy net worth</div>\r\n                  </div>\r\n\r\n                  <div className=\"p-4 bg-white rounded-lg\">\r\n                    <p className=\"text-gray-700 mb-3\">{results.response.message}</p>\r\n                    <p className=\"text-sm text-blue-600 font-medium\">{results.response.tip}</p>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2 pt-4 border-t non-printable\">\r\n                    <h4 className=\"font-semibold text-gray-800\">\r\n                      Ready to turn dreams into reality?\r\n                    </h4>\r\n                    <div className=\"flex flex-wrap gap-2\">\r\n                      <Link to={createPageUrl('SalaryCalculator')}>\r\n                        <Button size=\"sm\" variant=\"outline\">\r\n                          Start with Salary Planning\r\n                        </Button>\r\n                      </Link>\r\n                      <Link to={createPageUrl('BudgetCalculator')}>\r\n                        <Button size=\"sm\" variant=\"outline\">\r\n                          Create a Budget\r\n                        </Button>\r\n                      </Link>\r\n                      <Link to={createPageUrl('CompoundInterestCalculator')}>\r\n                        <Button size=\"sm\" variant=\"outline\">\r\n                          See Investment Growth\r\n                        </Button>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* Print Only Enhancements */}\r\n              <div className=\"print-only\">\r\n                <div className=\"text-center p-6 border-y-2 border-dashed border-gray-300\">\r\n                  <p className=\"text-lg italic text-gray-800\">\r\n                    \"Imagination is more powerful than knowledge.\"\r\n                  </p>\r\n                  <p className=\"text-md font-semibold text-gray-600 mt-1\">- Albert Einstein</p>\r\n                </div>\r\n                <div className=\"print-images\">\r\n                  <img\r\n                    src=\"https://images.unsplash.com/photo-1613490493576-7fde63acd811?q=80&w=800\"\r\n                    alt=\"Luxury modern home\"\r\n                  />\r\n                  <img\r\n                    src=\"https://images.unsplash.com/photo-1599793323219-ce4e708f1b13?q=80&w=800\"\r\n                    alt=\"Yacht on the ocean\"\r\n                  />\r\n                  <img\r\n                    src=\"https://images.unsplash.com/photo-1555215695-300494945849?q=80&w=800\"\r\n                    alt=\"Luxury sports car\"\r\n                  />\r\n                  <img\r\n                    src=\"https://images.unsplash.com/photo-1507525428034-b723a9ce6890?q=80&w=800\"\r\n                    alt=\"Tropical beach destination\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\EffectiveTaxRateCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 105,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Percent, PieChart } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst effectiveTaxRateFAQs = [\r\n  {\r\n    question: 'What is the difference between effective tax rate and marginal tax rate?',\r\n    answer:\r\n      \"Your 'marginal tax rate' is the rate you pay on your *last* pound of earnings (e.g., 20%, 40%, 45%). Your 'effective tax rate' is the *average* rate you pay across all your earnings after accounting for your tax-free personal allowance. It's a truer reflection of your overall tax burden.\",\r\n  },\r\n  {\r\n    question: \"Why isn't my effective rate simply 20% or 40%?\",\r\n    answer:\r\n      'The UK has a progressive tax system. You only pay the higher rates on the portion of your income that falls into those specific brackets. Your first ┬ú12,570 (for most people) is tax-free, which significantly lowers your overall average tax rate.',\r\n  },\r\n  {\r\n    question: 'Does this calculator include National Insurance?',\r\n    answer:\r\n      'Yes, this calculator includes both Income Tax and National Insurance (Class 1 for employees) to give you a comprehensive view of your total deductions and your true effective tax rate.',\r\n  },\r\n  {\r\n    question: 'A Note on Trustworthiness',\r\n    answer:\r\n      'The calculations are based on the 2024/2025 tax and National Insurance rates for England, Wales, and Northern Ireland. Scottish tax rates are different. This tool does not account for other deductions like student loans or pension contributions. For official guidance, refer to GOV.UK or consult a tax professional.',\r\n  },\r\n];\r\n\r\n// Calculation Functions\r\nconst calculateIncomeTax = (income) => {\r\n  let tax = 0;\r\n  let personalAllowance = 12570;\r\n  if (income > 100000) {\r\n    personalAllowance = Math.max(0, 12570 - (income - 100000) / 2);\r\n  }\r\n\r\n  const taxableIncome = Math.max(0, income - personalAllowance);\r\n\r\n  if (taxableIncome > 0) {\r\n    if (taxableIncome <= 37700) {\r\n      // Basic rate band\r\n      tax += taxableIncome * 0.2;\r\n    } else {\r\n      tax += 37700 * 0.2; // Tax on basic rate band\r\n      if (taxableIncome <= 125140) {\r\n        // Higher rate band\r\n        tax += (taxableIncome - 37700) * 0.4;\r\n      } else {\r\n        tax += (125140 - 37700) * 0.4; // Tax on higher rate band\r\n        tax += (taxableIncome - 125140) * 0.45; // Tax on additional rate band\r\n      }\r\n    }\r\n  }\r\n  return tax;\r\n};\r\n\r\nconst calculateNI = (income) => {\r\n  let ni = 0;\r\n  if (income > 12570) {\r\n    if (income <= 50270) {\r\n      ni += (income - 12570) * 0.08;\r\n    } else {\r\n      ni += (50270 - 12570) * 0.08;\r\n      ni += (income - 50270) * 0.02;\r\n    }\r\n  }\r\n  return ni;\r\n};\r\n\r\nexport default function EffectiveTaxRateCalculator() {\r\n  const [grossIncome, setGrossIncome] = useState('50000');\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const income = Number(grossIncome) || 0;\r\n    if (income <= 0) {\r\n      setResults(null);\r\n      return;\r\n    }\r\n\r\n    const totalTax = calculateIncomeTax(income);\r\n    const totalNI = calculateNI(income);\r\n    const totalDeductions = totalTax + totalNI;\r\n    const netIncome = income - totalDeductions;\r\n    const effectiveRate = income > 0 ? (totalDeductions / income) * 100 : 0;\r\n\r\n    setResults({\r\n      grossIncome: income,\r\n      totalTax,\r\n      totalNI,\r\n      totalDeductions,\r\n      netIncome,\r\n      effectiveRate,\r\n    });\r\n  }, [grossIncome]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Effective Tax Rate Calculator UK\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Find out your true tax burden by calculating the average tax rate you pay on your\r\n              total income.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Income</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div>\r\n                  <Label htmlFor=\"grossIncome\">Annual Gross Income (┬ú)</Label>\r\n                  <div className=\"relative mt-1\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"grossIncome\"\r\n                      type=\"number\"\r\n                      value={grossIncome}\r\n                      onChange={(e) => setGrossIncome(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div>\r\n            {results ? (\r\n              <div className=\"space-y-6\">\r\n                <Card className=\"bg-blue-50 border-blue-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-blue-900\">Your Effective Tax Rate</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center\">\r\n                    <p className=\"text-5xl font-bold text-blue-900\">\r\n                      {results.effectiveRate.toFixed(2)}%\r\n                    </p>\r\n                    <p className=\"text-sm text-blue-700 mt-1\">\r\n                      This is the average rate you pay across all your income.\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Gross Income:</span>{' '}\r\n                      <span className=\"font-semibold\">┬ú{results.grossIncome.toLocaleString()}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-red-600\">\r\n                      <span>Income Tax:</span>{' '}\r\n                      <span className=\"font-semibold\">\r\n                        -┬ú{results.totalTax.toLocaleString(undefined, { maximumFractionDigits: 2 })}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-red-600\">\r\n                      <span>National Insurance:</span>{' '}\r\n                      <span className=\"font-semibold\">\r\n                        -┬ú{results.totalNI.toLocaleString(undefined, { maximumFractionDigits: 2 })}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between border-t pt-2 font-bold\">\r\n                      <span>Total Deductions:</span>{' '}\r\n                      <span>\r\n                        -┬ú\r\n                        {results.totalDeductions.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between border-t pt-2 font-bold text-lg text-green-700\">\r\n                      <span>Net Income (Take-Home):</span>{' '}\r\n                      <span>\r\n                        ┬ú{results.netIncome.toLocaleString(undefined, { maximumFractionDigits: 2 })}\r\n                      </span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full\">\r\n                <p className=\"text-gray-500\">Enter your income to calculate.</p>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={effectiveTaxRateFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\EmergencyFundCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 34,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, ShieldCheck } from 'lucide-react';\r\n\r\nexport default function EmergencyFundCalculator() {\r\n  const [monthlyExpenses, setMonthlyExpenses] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = () => {\r\n    const expenses = Number(monthlyExpenses) || 0;\r\n    if (expenses <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n    setResults({\r\n      threeMonthFund: expenses * 3,\r\n      sixMonthFund: expenses * 6,\r\n      twelveMonthFund: expenses * 12,\r\n    });\r\n    setHasCalculated(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [monthlyExpenses]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Emergency Fund Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Life is unpredictable. A financial safety net provides peace of mind when you need it\r\n              most.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Expenses</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"monthlyExpenses\">Essential Monthly Expenses</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"monthlyExpenses\"\r\n                      type=\"number\"\r\n                      value={monthlyExpenses}\r\n                      onChange={(e) => setMonthlyExpenses(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 1800\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    Include rent/mortgage, bills, groceries, and transport.\r\n                  </p>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Fund Size\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          <div className=\"space-y-6\">\r\n            {hasCalculated && results ? (\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Your Emergency Fund Goal</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"p-4 bg-green-50 rounded-lg\">\r\n                    <p className=\"text-sm font-medium text-green-800\">3 Months (Bare Minimum)</p>\r\n                    <p className=\"text-2xl font-bold text-green-900\">\r\n                      ┬ú{results.threeMonthFund.toLocaleString()}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"p-4 bg-blue-50 rounded-lg\">\r\n                    <p className=\"text-sm font-medium text-blue-800\">6 Months (Recommended)</p>\r\n                    <p className=\"text-2xl font-bold text-blue-900\">\r\n                      ┬ú{results.sixMonthFund.toLocaleString()}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"p-4 bg-purple-50 rounded-lg\">\r\n                    <p className=\"text-sm font-medium text-purple-800\">12 Months (Very Secure)</p>\r\n                    <p className=\"text-2xl font-bold text-purple-900\">\r\n                      ┬ú{results.twelveMonthFund.toLocaleString()}\r\n                    </p>\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-600 pt-4 border-t\">\r\n                    Store your emergency fund in an easy-access savings account.\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <ShieldCheck className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Build your safety net</h3>\r\n                  <p>Enter your expenses to see your recommended fund size.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\EnergyBillCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 137,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Zap, Calculator, Home, TrendingUp, TrendingDown, AlertCircle } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\n\r\n// Current Ofgem price cap rates (as of 2025)\r\nconst energyRates = {\r\n  electricity: {\r\n    standingCharge: 60.1, // pence per day\r\n    unitRate: 24.5, // pence per kWh\r\n  },\r\n  gas: {\r\n    standingCharge: 31.43, // pence per day\r\n    unitRate: 6.24, // pence per kWh\r\n  },\r\n};\r\n\r\nconst propertyTypes = {\r\n  flat: { electricityUsage: 2000, gasUsage: 8000 },\r\n  terrace: { electricityUsage: 2900, gasUsage: 12000 },\r\n  semi: { electricityUsage: 3300, gasUsage: 13500 },\r\n  detached: { electricityUsage: 4200, gasUsage: 18000 },\r\n  bungalow: { electricityUsage: 3100, gasUsage: 13000 },\r\n};\r\n\r\nexport default function EnergyBillCalculator() {\r\n  const [propertyType, setPropertyType] = useState('');\r\n  const [bedrooms, setBedrooms] = useState('2');\r\n  const [occupants, setOccupants] = useState('2');\r\n  const [electricityUsage, setElectricityUsage] = useState('');\r\n  const [gasUsage, setGasUsage] = useState('');\r\n  const [useCustomUsage, setUseCustomUsage] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  // Auto-populate usage based on property type\r\n  useEffect(() => {\r\n    if (propertyType && !useCustomUsage) {\r\n      const baseUsage = propertyTypes[propertyType];\r\n      const bedroomMultiplier = Number(bedrooms) * 0.15 + 0.7;\r\n      const occupantMultiplier = Number(occupants) * 0.2 + 0.6;\r\n\r\n      setElectricityUsage(\r\n        Math.round(baseUsage.electricityUsage * bedroomMultiplier * occupantMultiplier).toString()\r\n      );\r\n      setGasUsage(\r\n        Math.round(baseUsage.gasUsage * bedroomMultiplier * occupantMultiplier).toString()\r\n      );\r\n    }\r\n  }, [propertyType, bedrooms, occupants, useCustomUsage]);\r\n\r\n  const handleCalculate = () => {\r\n    const currentElectricityUsage = Number(electricityUsage) || 0;\r\n    const currentGasUsage = Number(gasUsage) || 0;\r\n\r\n    if (currentElectricityUsage <= 0 && currentGasUsage <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    // Calculate electricity costs\r\n    const electricityStandingCharges = (energyRates.electricity.standingCharge / 100) * 365;\r\n    const electricityUnitCosts = (currentElectricityUsage * energyRates.electricity.unitRate) / 100;\r\n    const totalElectricityCost = electricityStandingCharges + electricityUnitCosts;\r\n\r\n    // Calculate gas costs\r\n    const gasStandingCharges = (energyRates.gas.standingCharge / 100) * 365;\r\n    const gasUnitCosts = (currentGasUsage * energyRates.gas.unitRate) / 100;\r\n    const totalGasCost = gasStandingCharges + gasUnitCosts;\r\n\r\n    // Total energy bill\r\n    const totalAnnualCost = totalElectricityCost + totalGasCost;\r\n    const monthlyAverageCost = totalAnnualCost / 12;\r\n\r\n    const newResults = {\r\n      electricity: {\r\n        usage: currentElectricityUsage,\r\n        standingCharges: electricityStandingCharges,\r\n        unitCosts: electricityUnitCosts,\r\n        totalCost: totalElectricityCost,\r\n      },\r\n      gas: {\r\n        usage: currentGasUsage,\r\n        standingCharges: gasStandingCharges,\r\n        unitCosts: gasUnitCosts,\r\n        totalCost: totalGasCost,\r\n      },\r\n      totalAnnualCost,\r\n      monthlyAverageCost,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    // Prepare CSV data\r\n    const csvExportData = [\r\n      ['Energy Type', 'Usage', 'Standing Charges', 'Unit Costs', 'Total'],\r\n      [\r\n        'Electricity',\r\n        `${currentElectricityUsage} kWh`,\r\n        `┬ú${electricityStandingCharges.toFixed(2)}`,\r\n        `┬ú${electricityUnitCosts.toFixed(2)}`,\r\n        `┬ú${totalElectricityCost.toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Gas',\r\n        `${currentGasUsage} kWh`,\r\n        `┬ú${gasStandingCharges.toFixed(2)}`,\r\n        `┬ú${gasUnitCosts.toFixed(2)}`,\r\n        `┬ú${totalGasCost.toFixed(2)}`,\r\n      ],\r\n      ['', '', '', '', ''],\r\n      ['Total Annual Cost', '', '', '', `┬ú${totalAnnualCost.toFixed(2)}`],\r\n      ['Average Monthly Cost', '', '', '', `┬ú${monthlyAverageCost.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [electricityUsage, gasUsage]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      {/* Page Header */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK Energy Bill Calculator 2025\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Calculate your annual electricity and gas costs based on current Ofgem price cap\r\n              rates. Get accurate estimates for your household energy bills.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Calculator Content */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Energy Bill Calculation Results</div>\r\n\r\n        <div className=\"grid lg:grid-cols-3 gap-8 printable-grid-cols-1\">\r\n          {/* Input Panel */}\r\n          <div className=\"lg:col-span-1 space-y-6 non-printable\">\r\n            <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Home className=\"w-5 h-5\" />\r\n                  Property Details\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label>Property Type</Label>\r\n                  <Select value={propertyType} onValueChange={setPropertyType}>\r\n                    <SelectTrigger>\r\n                      <SelectValue placeholder=\"Select property type\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"flat\">Flat/Apartment</SelectItem>\r\n                      <SelectItem value=\"terrace\">Terraced House</SelectItem>\r\n                      <SelectItem value=\"semi\">Semi-Detached House</SelectItem>\r\n                      <SelectItem value=\"detached\">Detached House</SelectItem>\r\n                      <SelectItem value=\"bungalow\">Bungalow</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Number of Bedrooms</Label>\r\n                  <Select value={bedrooms} onValueChange={setBedrooms}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"1\">1 Bedroom</SelectItem>\r\n                      <SelectItem value=\"2\">2 Bedrooms</SelectItem>\r\n                      <SelectItem value=\"3\">3 Bedrooms</SelectItem>\r\n                      <SelectItem value=\"4\">4 Bedrooms</SelectItem>\r\n                      <SelectItem value=\"5\">5+ Bedrooms</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Number of Occupants</Label>\r\n                  <Select value={occupants} onValueChange={setOccupants}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"1\">1 Person</SelectItem>\r\n                      <SelectItem value=\"2\">2 People</SelectItem>\r\n                      <SelectItem value=\"3\">3 People</SelectItem>\r\n                      <SelectItem value=\"4\">4 People</SelectItem>\r\n                      <SelectItem value=\"5\">5+ People</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Zap className=\"w-5 h-5\" />\r\n                  Annual Energy Usage\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"useCustomUsage\"\r\n                    checked={useCustomUsage}\r\n                    onChange={(e) => setUseCustomUsage(e.target.checked)}\r\n                    className=\"rounded\"\r\n                  />\r\n                  <Label htmlFor=\"useCustomUsage\" className=\"text-sm\">\r\n                    Use custom usage values\r\n                  </Label>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"electricityUsage\">Electricity Usage (kWh per year)</Label>\r\n                  <Input\r\n                    id=\"electricityUsage\"\r\n                    type=\"number\"\r\n                    value={electricityUsage}\r\n                    onChange={(e) => setElectricityUsage(e.target.value)}\r\n                    placeholder=\"e.g. 3000\"\r\n                    disabled={!useCustomUsage && propertyType}\r\n                  />\r\n                  <p className=\"text-xs text-gray-500\">Average UK household: 2,700 kWh</p>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"gasUsage\">Gas Usage (kWh per year)</Label>\r\n                  <Input\r\n                    id=\"gasUsage\"\r\n                    type=\"number\"\r\n                    value={gasUsage}\r\n                    onChange={(e) => setGasUsage(e.target.value)}\r\n                    placeholder=\"e.g. 12000\"\r\n                    disabled={!useCustomUsage && propertyType}\r\n                  />\r\n                  <p className=\"text-xs text-gray-500\">Average UK household: 11,500 kWh</p>\r\n                </div>\r\n\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Energy Bill\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Current Rates Info */}\r\n            <Card className=\"bg-blue-50 dark:bg-blue-900/30 border-blue-200 dark:border-blue-700\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-blue-900 dark:text-blue-400 text-base\">\r\n                  Current Ofgem Rates (2025)\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"text-sm\">\r\n                <div className=\"space-y-2\">\r\n                  <div>\r\n                    <p className=\"font-semibold\">Electricity:</p>\r\n                    <p>Standing charge: {energyRates.electricity.standingCharge}p/day</p>\r\n                    <p>Unit rate: {energyRates.electricity.unitRate}p/kWh</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"font-semibold\">Gas:</p>\r\n                    <p>Standing charge: {energyRates.gas.standingCharge}p/day</p>\r\n                    <p>Unit rate: {energyRates.gas.unitRate}p/kWh</p>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Results Panel */}\r\n          <div className=\"lg:col-span-2 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200\">\r\n                    Your Energy Bill Breakdown\r\n                  </h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"energy-bill-calculation\"\r\n                    title=\"Energy Bill Calculation\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Summary Cards */}\r\n                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                  <Card className=\"bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/50 dark:to-blue-800/50 border-blue-200 dark:border-blue-700\">\r\n                    <CardContent className=\"p-6\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-blue-800\">Annual Energy Bill</p>\r\n                          <p className=\"text-3xl font-bold text-blue-900\">\r\n                            ┬ú\r\n                            {results.totalAnnualCost.toLocaleString('en-GB', {\r\n                              maximumFractionDigits: 0,\r\n                            })}\r\n                          </p>\r\n                        </div>\r\n                        <Zap className=\"w-8 h-8 text-blue-600\" />\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  <Card className=\"bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/50 dark:to-green-800/50 border-green-200 dark:border-green-700\">\r\n                    <CardContent className=\"p-6\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-green-800\">Monthly Average</p>\r\n                          <p className=\"text-3xl font-bold text-green-900\">\r\n                            ┬ú\r\n                            {results.monthlyAverageCost.toLocaleString('en-GB', {\r\n                              maximumFractionDigits: 0,\r\n                            })}\r\n                          </p>\r\n                        </div>\r\n                        <TrendingUp className=\"w-8 h-8 text-green-600\" />\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                {/* Detailed Breakdown */}\r\n                <div className=\"grid md:grid-cols-2 gap-6\">\r\n                  {/* Electricity Breakdown */}\r\n                  <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2 text-yellow-700\">\r\n                        <Zap className=\"w-5 h-5\" />\r\n                        Electricity Costs\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-3\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Annual Usage:</span>\r\n                        <span className=\"font-semibold\">\r\n                          {results.electricity.usage.toLocaleString()} kWh\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Standing Charges:</span>\r\n                        <span>┬ú{results.electricity.standingCharges.toFixed(2)}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Unit Costs:</span>\r\n                        <span>┬ú{results.electricity.unitCosts.toFixed(2)}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between border-t pt-2 font-bold\">\r\n                        <span>Total Electricity:</span>\r\n                        <span>┬ú{results.electricity.totalCost.toFixed(2)}</span>\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500\">\r\n                        Monthly average: ┬ú{(results.electricity.totalCost / 12).toFixed(2)}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  {/* Gas Breakdown */}\r\n                  <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2 text-orange-700\">\r\n                        <Home className=\"w-5 h-5\" />\r\n                        Gas Costs\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-3\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Annual Usage:</span>\r\n                        <span className=\"font-semibold\">\r\n                          {results.gas.usage.toLocaleString()} kWh\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Standing Charges:</span>\r\n                        <span>┬ú{results.gas.standingCharges.toFixed(2)}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Unit Costs:</span>\r\n                        <span>┬ú{results.gas.unitCosts.toFixed(2)}</span>\r\n                      </div>\r\n                      <div className=\"flex justify-between border-t pt-2 font-bold\">\r\n                        <span>Total Gas:</span>\r\n                        <span>┬ú{results.gas.totalCost.toFixed(2)}</span>\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500\">\r\n                        Monthly average: ┬ú{(results.gas.totalCost / 12).toFixed(2)}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                {/* Energy Saving Tips */}\r\n                <Card className=\"bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-green-900 dark:text-green-400\">\r\n                      Energy Saving Tips\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-sm text-green-800 dark:text-green-300\">\r\n                    <div className=\"grid md:grid-cols-2 gap-4\">\r\n                      <div>\r\n                        <h4 className=\"font-semibold mb-2\">Electricity Savings:</h4>\r\n                        <ul className=\"space-y-1 text-xs\">\r\n                          <li>ÔÇó Switch to LED light bulbs</li>\r\n                          <li>ÔÇó Unplug devices when not in use</li>\r\n                          <li>ÔÇó Use energy-efficient appliances</li>\r\n                          <li>ÔÇó Wash clothes at 30┬░C</li>\r\n                          <li>ÔÇó Air dry instead of tumble drying</li>\r\n                        </ul>\r\n                      </div>\r\n                      <div>\r\n                        <h4 className=\"font-semibold mb-2\">Gas Savings:</h4>\r\n                        <ul className=\"space-y-1 text-xs\">\r\n                          <li>ÔÇó Lower thermostat by 1┬░C (saves ~10%)</li>\r\n                          <li>ÔÇó Improve home insulation</li>\r\n                          <li>ÔÇó Service boiler annually</li>\r\n                          <li>ÔÇó Use a smart thermostat</li>\r\n                          <li>ÔÇó Close curtains at dusk</li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Disclaimer */}\r\n                <Card className=\"bg-amber-50 dark:bg-amber-900/30 border-amber-200 dark:border-amber-700\">\r\n                  <CardContent className=\"p-4 flex items-start gap-3\">\r\n                    <AlertCircle className=\"w-5 h-5 text-amber-700 mt-0.5\" />\r\n                    <div className=\"text-sm text-amber-800\">\r\n                      <p className=\"font-semibold\">Important Notes:</p>\r\n                      <ul className=\"text-xs mt-1 space-y-1\">\r\n                        <li>ÔÇó Based on current Ofgem price cap rates</li>\r\n                        <li>ÔÇó Actual bills may vary based on supplier and tariff</li>\r\n                        <li>ÔÇó Usage estimates are based on typical household patterns</li>\r\n                        <li>ÔÇó Consider seasonal variations in energy usage</li>\r\n                        <li>ÔÇó Check your actual meter readings for precise calculations</li>\r\n                      </ul>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"lg:col-span-2 flex items-center justify-center h-[400px] bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Zap className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to calculate your energy bill?</h3>\r\n                  <p>Enter your property details and energy usage to get an estimate.</p>\r\n                  {hasCalculated && !results && (\r\n                    <p className=\"text-red-500 mt-2\">Please enter valid energy usage values.</p>\r\n                  )}\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\FIRECalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 232,
        "column": 9,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { PoundSterling, Calculator, Target, TrendingUp, Flame } from 'lucide-react';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst fireCalculatorFAQs = [\r\n  {\r\n    question: 'What does FIRE mean?',\r\n    answer:\r\n      \"FIRE stands for Financial Independence, Retire Early. It's a movement focused on extreme saving and investment to enable retirement much earlier than traditional retirement age.\",\r\n  },\r\n  {\r\n    question: 'How is the FIRE number calculated?',\r\n    answer:\r\n      'The FIRE number is typically calculated as 25 times your annual expenses, based on the 4% withdrawal rule. This means you can safely withdraw 4% of your portfolio each year in retirement.',\r\n  },\r\n  {\r\n    question: \"What's the difference between Lean, Regular, and Fat FIRE?\",\r\n    answer:\r\n      'Lean FIRE (~┬ú25k-40k annually), Regular FIRE (~┬ú40k-80k annually), and Fat FIRE (┬ú80k+ annually) represent different lifestyle levels in early retirement, requiring different savings targets.',\r\n  },\r\n  {\r\n    question: 'Is the 4% rule safe for early retirement?',\r\n    answer:\r\n      'The 4% rule is based on historical market performance and assumes a 30-year retirement. For very early retirement (40+ years), some prefer a 3.5% or 3.25% withdrawal rate for extra safety.',\r\n  },\r\n  {\r\n    question: 'How realistic is FIRE in the UK?',\r\n    answer:\r\n      'FIRE is achievable in the UK with high savings rates (50%+ of income), smart investing in ISAs and pensions, and careful expense management. Property costs can make it more challenging in expensive areas.',\r\n  },\r\n  {\r\n    question: 'Should I include my pension in FIRE calculations?',\r\n    answer:\r\n      'Yes, but remember UK pensions have access restrictions. Private pensions can typically be accessed from age 55 (rising to 57 in 2028), while the state pension starts much later.',\r\n  },\r\n];\r\n\r\nconst CHART_COLORS = {\r\n  currentSavings: '#10b981',\r\n  futureContributions: '#3b82f6',\r\n  investmentGrowth: '#f59e0b',\r\n};\r\n\r\nexport default function FIRECalculator() {\r\n  const [currentAge, setCurrentAge] = useState('');\r\n  const [currentNetWorth, setCurrentNetWorth] = useState('');\r\n  const [annualExpenses, setAnnualExpenses] = useState('');\r\n  const [monthlySavings, setMonthlySavings] = useState('');\r\n  const [expectedReturn, setExpectedReturn] = useState('7');\r\n  const [withdrawalRate, setWithdrawalRate] = useState('4');\r\n  const [targetAge, setTargetAge] = useState('');\r\n\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const age = Number(currentAge) || 0;\r\n    const netWorth = Number(currentNetWorth) || 0;\r\n    const expenses = Number(annualExpenses) || 0;\r\n    const savings = Number(monthlySavings) || 0;\r\n    const returnRate = Number(expectedReturn) / 100 || 0.07;\r\n    const withdrawal = Number(withdrawalRate) / 100 || 0.04;\r\n    const target = Number(targetAge) || 0;\r\n\r\n    if (expenses <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    // Calculate FIRE numbers\r\n    const fireNumber = expenses / withdrawal;\r\n    const leanFireNumber = 35000 / withdrawal; // ┬ú35k lean lifestyle\r\n    const fatFireNumber = 80000 / withdrawal; // ┬ú80k fat lifestyle\r\n\r\n    // Calculate years to FIRE\r\n    const annualSavings = savings * 12;\r\n    let yearsToFire = 0;\r\n    let balance = netWorth;\r\n\r\n    if (annualSavings > 0) {\r\n      // Use future value of annuity formula to find time to reach FIRE number\r\n      const monthlyReturn = returnRate / 12;\r\n      const monthlyGoal = fireNumber - netWorth * Math.pow(1 + returnRate, 50); // Assume max 50 years\r\n\r\n      if (monthlyReturn > 0) {\r\n        const months =\r\n          Math.log(\r\n            1 + ((fireNumber - netWorth * Math.pow(1 + returnRate, 50)) * monthlyReturn) / savings\r\n          ) / Math.log(1 + monthlyReturn);\r\n        yearsToFire = Math.max(0, months / 12);\r\n\r\n        // More precise calculation\r\n        balance = netWorth;\r\n        yearsToFire = 0;\r\n        while (balance < fireNumber && yearsToFire < 50) {\r\n          balance = balance * (1 + returnRate) + annualSavings;\r\n          yearsToFire++;\r\n        }\r\n      } else {\r\n        yearsToFire = Math.max(0, (fireNumber - netWorth) / annualSavings);\r\n      }\r\n    }\r\n\r\n    // Calculate final portfolio composition\r\n    const futureValueCurrentSavings = netWorth * Math.pow(1 + returnRate, yearsToFire);\r\n    const futureValueContributions =\r\n      annualSavings > 0\r\n        ? annualSavings * ((Math.pow(1 + returnRate, yearsToFire) - 1) / returnRate)\r\n        : 0;\r\n    const totalPortfolio = futureValueCurrentSavings + futureValueContributions;\r\n    const totalInvestmentGrowth = totalPortfolio - netWorth - annualSavings * yearsToFire;\r\n\r\n    // Target age scenarios\r\n    let targetScenario = null;\r\n    if (target > age) {\r\n      const yearsToTarget = target - age;\r\n      const neededAtTarget = fireNumber - netWorth * Math.pow(1 + returnRate, yearsToTarget);\r\n      const monthlyNeededForTarget =\r\n        neededAtTarget > 0\r\n          ? (neededAtTarget * (returnRate / 12)) /\r\n            (Math.pow(1 + returnRate / 12, yearsToTarget * 12) - 1)\r\n          : 0;\r\n\r\n      targetScenario = {\r\n        yearsToTarget,\r\n        monthlyNeededForTarget: monthlyNeededForTarget / 12,\r\n        achievable: monthlyNeededForTarget <= savings * 12,\r\n      };\r\n    }\r\n\r\n    const newResults = {\r\n      fireNumber,\r\n      leanFireNumber,\r\n      fatFireNumber,\r\n      yearsToFire,\r\n      fireAge: age + yearsToFire,\r\n      currentSavingsRate:\r\n        annualSavings > 0 ? (annualSavings / (expenses + annualSavings)) * 100 : 0,\r\n      totalPortfolio,\r\n      futureValueCurrentSavings,\r\n      futureValueContributions,\r\n      totalInvestmentGrowth,\r\n      targetScenario,\r\n      monthlyIncomeAtFire: (fireNumber * withdrawal) / 12,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    // Prepare CSV data\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Current Age', age.toString()],\r\n      ['Current Net Worth', `┬ú${netWorth.toFixed(2)}`],\r\n      ['Annual Expenses', `┬ú${expenses.toFixed(2)}`],\r\n      ['Monthly Savings', `┬ú${savings.toFixed(2)}`],\r\n      ['Expected Return', `${expectedReturn}%`],\r\n      ['Withdrawal Rate', `${withdrawalRate}%`],\r\n      ['', ''],\r\n      ['FIRE Number', `┬ú${fireNumber.toFixed(2)}`],\r\n      ['Years to FIRE', yearsToFire.toFixed(1)],\r\n      ['FIRE Age', newResults.fireAge.toFixed(1)],\r\n      ['Current Savings Rate', `${newResults.currentSavingsRate.toFixed(1)}%`],\r\n      ['Final Portfolio Value', `┬ú${totalPortfolio.toFixed(2)}`],\r\n      ['Monthly Income at FIRE', `┬ú${newResults.monthlyIncomeAtFire.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  const prepareChartData = () => {\r\n    if (!results) return { pieData: [], scenarios: [] };\r\n\r\n    const pieData = [\r\n      {\r\n        name: 'Current Savings Growth',\r\n        value: results.futureValueCurrentSavings,\r\n        color: CHART_COLORS.currentSavings,\r\n      },\r\n      {\r\n        name: 'Future Contributions',\r\n        value: results.futureValueContributions,\r\n        color: CHART_COLORS.futureContributions,\r\n      },\r\n      {\r\n        name: 'Investment Growth',\r\n        value: results.totalInvestmentGrowth,\r\n        color: CHART_COLORS.investmentGrowth,\r\n      },\r\n    ];\r\n\r\n    const scenarios = [\r\n      { name: 'Lean FIRE', value: results.leanFireNumber, color: '#10b981' },\r\n      { name: 'Regular FIRE', value: results.fireNumber, color: '#3b82f6' },\r\n      { name: 'Fat FIRE', value: results.fatFireNumber, color: '#f59e0b' },\r\n    ];\r\n\r\n    return { pieData, scenarios };\r\n  };\r\n\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload && payload.length) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <div className=\"bg-white dark:bg-gray-800 p-3 border border-gray-300 dark:border-gray-600 rounded-lg shadow-lg\">\r\n          <p className=\"font-medium text-gray-900 dark:text-gray-100\">{data.name}</p>\r\n          <p style={{ color: data.color }}>\r\n            ┬ú{data.value.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [\r\n    currentAge,\r\n    currentNetWorth,\r\n    annualExpenses,\r\n    monthlySavings,\r\n    expectedReturn,\r\n    withdrawalRate,\r\n    targetAge,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      {/* Page Header */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              ­ƒöÑ UK FIRE Calculator | Financial Independence Retire Early\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Calculate your path to Financial Independence and Early Retirement. Discover when you\r\n              can retire, how much you need to save, and different FIRE scenarios for your\r\n              lifestyle.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Calculator Content */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">FIRE Calculator Results</div>\r\n\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          {/* Input Panel */}\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24 bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Flame className=\"w-5 h-5 text-orange-500\" />\r\n                  FIRE Calculator\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label>Current Age</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={currentAge}\r\n                      onChange={(e) => setCurrentAge(e.target.value)}\r\n                      placeholder=\"e.g. 30\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label>Target FIRE Age (optional)</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={targetAge}\r\n                      onChange={(e) => setTargetAge(e.target.value)}\r\n                      placeholder=\"e.g. 50\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <Label>Current Net Worth</Label>\r\n                    <Link\r\n                      to={createPageUrl('NetWorthCalculator')}\r\n                      className=\"text-xs text-blue-600 hover:underline flex items-center gap-1\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      Calculate <Calculator className=\"w-3 h-3\" />\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={currentNetWorth}\r\n                      onChange={(e) => setCurrentNetWorth(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 50000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <Label>Annual Living Expenses</Label>\r\n                    <Link\r\n                      to={createPageUrl('BudgetCalculator')}\r\n                      className=\"text-xs text-blue-600 hover:underline flex items-center gap-1\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      Calculate <Calculator className=\"w-3 h-3\" />\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={annualExpenses}\r\n                      onChange={(e) => setAnnualExpenses(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 40000\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    Your total annual spending needs in retirement\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Monthly Savings</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={monthlySavings}\r\n                      onChange={(e) => setMonthlySavings(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 2000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Expected Annual Return (%)</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={expectedReturn}\r\n                    onChange={(e) => setExpectedReturn(e.target.value)}\r\n                    step=\"0.5\"\r\n                  />\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    Typical range: 6-8% for diversified portfolios\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Safe Withdrawal Rate (%)</Label>\r\n                  <Select value={withdrawalRate} onValueChange={setWithdrawalRate}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"3.25\">3.25% (Ultra Conservative)</SelectItem>\r\n                      <SelectItem value=\"3.5\">3.5% (Conservative)</SelectItem>\r\n                      <SelectItem value=\"4\">4% (Traditional Rule)</SelectItem>\r\n                      <SelectItem value=\"4.5\">4.5% (Aggressive)</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <Button\r\n                  onClick={handleCalculate}\r\n                  className=\"w-full text-lg bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600\"\r\n                >\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate My FIRE Plan\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Results Panel */}\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results && results.fireNumber ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200\">\r\n                    Your FIRE Plan\r\n                  </h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"fire-calculation\"\r\n                    title=\"FIRE Calculation Results\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Main FIRE Summary */}\r\n                <div className=\"grid md:grid-cols-2 gap-6\">\r\n                  <Card className=\"bg-gradient-to-br from-orange-50 to-red-50 dark:from-orange-900/30 dark:to-red-900/30 border-orange-200 dark:border-orange-800\">\r\n                    <CardContent className=\"p-6\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-orange-800 dark:text-orange-300\">\r\n                            Your FIRE Number\r\n                          </p>\r\n                          <div className=\"text-3xl font-bold text-orange-900 dark:text-orange-100\">\r\n                            ┬ú{results.fireNumber.toLocaleString()}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"w-12 h-12 bg-orange-500 rounded-full flex items-center justify-center\">\r\n                          <Target className=\"w-6 h-6 text-white\" />\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"text-sm text-orange-700 dark:text-orange-300 mt-2\">\r\n                        Based on ┬ú{Number(annualExpenses).toLocaleString()} annual expenses\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  <Card className=\"bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/30 dark:to-emerald-900/30 border-green-200 dark:border-green-800\">\r\n                    <CardContent className=\"p-6\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-green-800 dark:text-green-300\">\r\n                            Years to FIRE\r\n                          </p>\r\n                          <div className=\"text-3xl font-bold text-green-900 dark:text-green-100\">\r\n                            {results.yearsToFire.toFixed(1)}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"w-12 h-12 bg-green-500 rounded-full flex items-center justify-center\">\r\n                          <TrendingUp className=\"w-6 h-6 text-white\" />\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"text-sm text-green-700 dark:text-green-300 mt-2\">\r\n                        FIRE at age {results.fireAge.toFixed(0)}\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                {/* FIRE Scenarios */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>FIRE Scenarios</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"grid md:grid-cols-3 gap-4\">\r\n                      <div className=\"p-4 bg-green-50 dark:bg-green-900/30 rounded-lg text-center\">\r\n                        <h4 className=\"font-semibold text-green-800 dark:text-green-300\">\r\n                          Lean FIRE\r\n                        </h4>\r\n                        <p className=\"text-2xl font-bold text-green-900 dark:text-green-100\">\r\n                          ┬ú{results.leanFireNumber.toLocaleString()}\r\n                        </p>\r\n                        <p className=\"text-sm text-green-700 dark:text-green-300\">\r\n                          ~┬ú35k/year lifestyle\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg text-center border-2 border-blue-300 dark:border-blue-700\">\r\n                        <h4 className=\"font-semibold text-blue-800 dark:text-blue-300\">\r\n                          Your FIRE\r\n                        </h4>\r\n                        <p className=\"text-2xl font-bold text-blue-900 dark:text-blue-100\">\r\n                          ┬ú{results.fireNumber.toLocaleString()}\r\n                        </p>\r\n                        <p className=\"text-sm text-blue-700 dark:text-blue-300\">\r\n                          Your target lifestyle\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"p-4 bg-amber-50 dark:bg-amber-900/30 rounded-lg text-center\">\r\n                        <h4 className=\"font-semibold text-amber-800 dark:text-amber-300\">\r\n                          Fat FIRE\r\n                        </h4>\r\n                        <p className=\"text-2xl font-bold text-amber-900 dark:text-amber-100\">\r\n                          ┬ú{results.fatFireNumber.toLocaleString()}\r\n                        </p>\r\n                        <p className=\"text-sm text-amber-700 dark:text-amber-300\">\r\n                          ~┬ú80k+/year lifestyle\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Portfolio Breakdown Chart */}\r\n                <div className=\"grid md:grid-cols-2 gap-6 non-printable\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Portfolio Growth Breakdown</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <ResponsiveContainer width=\"100%\" height={250}>\r\n                        <PieChart>\r\n                          <Pie\r\n                            data={prepareChartData().pieData}\r\n                            cx=\"50%\"\r\n                            cy=\"50%\"\r\n                            outerRadius={80}\r\n                            dataKey=\"value\"\r\n                            label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n                          >\r\n                            {prepareChartData().pieData.map((entry, index) => (\r\n                              <Cell key={`cell-${index}`} fill={entry.color} />\r\n                            ))}\r\n                          </Pie>\r\n                          <Tooltip content={<CustomTooltip />} />\r\n                        </PieChart>\r\n                      </ResponsiveContainer>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Key Metrics</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Current Savings Rate:</span>\r\n                        <span className=\"font-semibold\">\r\n                          {results.currentSavingsRate.toFixed(1)}%\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Monthly Income at FIRE:</span>\r\n                        <span className=\"font-semibold\">\r\n                          ┬ú{results.monthlyIncomeAtFire.toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Final Portfolio Value:</span>\r\n                        <span className=\"font-semibold\">\r\n                          ┬ú{results.totalPortfolio.toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                      {results.currentSavingsRate < 20 && (\r\n                        <div className=\"p-3 bg-yellow-50 dark:bg-yellow-900/30 rounded-lg\">\r\n                          <p className=\"text-sm text-yellow-800 dark:text-yellow-300\">\r\n                            ­ƒÆí Consider increasing your savings rate to reach FIRE faster. Most FIRE\r\n                            achievers save 50%+ of income.\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                {/* Target Age Scenario */}\r\n                {results.targetScenario && (\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Target Age Scenario</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      {results.targetScenario.achievable ? (\r\n                        <div className=\"p-4 bg-green-50 dark:bg-green-900/30 rounded-lg\">\r\n                          <p className=\"text-green-800 dark:text-green-300\">\r\n                            Ô£à Great! You can reach FIRE by age {targetAge} with your current\r\n                            savings plan.\r\n                          </p>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"p-4 bg-red-50 dark:bg-red-900/30 rounded-lg\">\r\n                          <p className=\"text-red-800 dark:text-red-300\">\r\n                            ÔÜá´©Å To reach FIRE by age {targetAge}, you'd need to save ┬ú\r\n                            {results.targetScenario.monthlyNeededForTarget.toLocaleString()} per\r\n                            month (vs your current ┬ú{monthlySavings}).\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                    </CardContent>\r\n                  </Card>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500 dark:text-gray-400\">\r\n                  <Flame className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to ignite your FIRE journey?</h3>\r\n                  <p>Enter your details to discover your path to financial independence.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* FAQ Section */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 py-12 non-printable\">\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <FAQSection faqs={fireCalculatorFAQs} title=\"FIRE Calculator FAQ\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\FirstTimeBuyerCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 78,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Home, User, Percent, Calculator } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst ftbFAQs = [\r\n  {\r\n    question: 'What is Loan-to-Income (LTI)?',\r\n    answer:\r\n      \"Lenders use LTI as a key affordability measure. It's a multiple of your annual gross income. Most lenders cap borrowing at 4.5x your income, though some may offer more under specific circumstances.\",\r\n  },\r\n  {\r\n    question: 'What is First-Time Buyer Stamp Duty relief?',\r\n    answer:\r\n      \"In England & NI, first-time buyers pay 0% SDLT on the first ┬ú425,000 of a property's value, and 5% on the portion between ┬ú425,001 and ┬ú625,000. No relief is available if the property costs more than ┬ú625,000.\",\r\n  },\r\n  {\r\n    question: 'What other costs are involved?',\r\n    answer:\r\n      \"Besides the deposit, you'll need to budget for solicitor's fees, mortgage arrangement fees, valuation fees, and moving costs. These can add several thousand pounds to your total upfront cost.\",\r\n  },\r\n];\r\n\r\nexport default function FirstTimeBuyerCalculator() {\r\n  const [propertyPrice, setPropertyPrice] = useState('');\r\n  const [deposit, setDeposit] = useState('');\r\n  const [income, setIncome] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const price = Number(propertyPrice) || 0;\r\n    const dep = Number(deposit) || 0;\r\n    const inc = Number(income) || 0;\r\n    if (price <= 0 || inc <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const mortgageNeeded = price - dep;\r\n    const maxBorrowing = inc * 4.5;\r\n    const lti = mortgageNeeded / inc;\r\n    const depositPercent = (dep / price) * 100;\r\n    const affordable = mortgageNeeded <= maxBorrowing;\r\n\r\n    // Simplified FTB Stamp Duty\r\n    let sdlt = 0;\r\n    if (price > 425000 && price <= 625000) {\r\n      sdlt = (price - 425000) * 0.05;\r\n    } else if (price > 625000) {\r\n      // No relief\r\n      const standardThreshold1 = 250000;\r\n      const standardThreshold2 = 925000;\r\n      const standardThreshold3 = 1500000; // Added for completeness, although not used in this simplified calculation\r\n\r\n      // Re-evaluating standard SDLT based on typical UK rates for general properties\r\n      // (assuming 0% up to 250k, 5% up to 925k, 10% up to 1.5m, 12% above)\r\n      if (price > standardThreshold1) {\r\n        sdlt += (Math.min(price, standardThreshold2) - standardThreshold1) * 0.05;\r\n      }\r\n      if (price > standardThreshold2) {\r\n        sdlt += (Math.min(price, standardThreshold3) - standardThreshold2) * 0.1;\r\n      }\r\n      if (price > standardThreshold3) {\r\n        sdlt += (price - standardThreshold3) * 0.12;\r\n      }\r\n    }\r\n\r\n    setResults({ mortgageNeeded, maxBorrowing, lti, depositPercent, affordable, sdlt });\r\n    setHasCalculated(true);\r\n  }, [propertyPrice, deposit, income]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\r\n          <h1 className=\"text-3xl font-bold text-center\">First-Time Buyer Calculator</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-4xl mx-auto p-4 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Your Details</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div>\r\n                <Label>Property Price (┬ú)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={propertyPrice}\r\n                  onChange={(e) => setPropertyPrice(e.target.value)}\r\n                  placeholder=\"e.g. 280000\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Deposit Amount (┬ú)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={deposit}\r\n                  onChange={(e) => setDeposit(e.target.value)}\r\n                  placeholder=\"e.g. 30000\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Gross Annual Income (┬ú)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={income}\r\n                  onChange={(e) => setIncome(e.target.value)}\r\n                  placeholder=\"e.g. 55000\"\r\n                />\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                <Calculator className=\"w-5 h-5 mr-2\" />\r\n                Check Affordability\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n          <div>\r\n            {hasCalculated && results ? (\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Affordability Check</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div\r\n                    className={`p-4 rounded-lg ${results.affordable ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'}`}\r\n                  >\r\n                    <p className=\"font-bold\">\r\n                      {results.affordable ? 'Looking Good!' : 'May Be a Stretch'}\r\n                    </p>\r\n                    <p className=\"text-sm\">\r\n                      {results.affordable\r\n                        ? 'The mortgage required is within the typical 4.5x income multiple.'\r\n                        : 'The mortgage required may exceed what lenders typically offer.'}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"text-sm space-y-2\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Mortgage Needed:</span>{' '}\r\n                      <strong>┬ú{results.mortgageNeeded.toLocaleString()}</strong>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Max Borrowing (est.):</span>{' '}\r\n                      <strong>┬ú{results.maxBorrowing.toLocaleString()}</strong>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Loan-to-Income Ratio:</span> <strong>{results.lti.toFixed(2)}x</strong>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Deposit Percentage:</span>{' '}\r\n                      <strong>{results.depositPercent.toFixed(1)}%</strong>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Stamp Duty (FTB rate):</span>{' '}\r\n                      <strong>┬ú{results.sdlt.toLocaleString()}</strong>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[220px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Home className=\"w-10 h-10 mx-auto mb-2\" />\r\n                  <p>See if you can afford your first home.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-12\">\r\n          <FAQSection faqs={ftbFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\FreelancerDayRateCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 99,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { PoundSterling, Calculator, Briefcase, Calendar } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst freelancerFAQs = [\r\n  {\r\n    question: 'How should I set my freelance day rate?',\r\n    answer:\r\n      'Consider your desired annual income, working days per year, business expenses, tax obligations, and market rates. A good rule of thumb is to add 20-30% to the equivalent employee salary to account for additional costs and risks of freelancing.',\r\n  },\r\n  {\r\n    question: 'What expenses should I factor into my day rate?',\r\n    answer:\r\n      'Include business expenses like equipment, software, insurance, training, marketing, office costs, and accountancy fees. Also factor in non-billable time spent on administration, business development, and potential gaps between contracts.',\r\n  },\r\n  {\r\n    question: 'How many working days should I assume per year?',\r\n    answer:\r\n      'Most freelancers work 220-240 billable days per year, accounting for holidays, sick days, and time spent on business development. New freelancers might start with 200 days to be conservative.',\r\n  },\r\n];\r\n\r\nexport default function FreelancerDayRateCalculator() {\r\n  const [desiredIncome, setDesiredIncome] = useState('');\r\n  const [workingDays, setWorkingDays] = useState('220');\r\n  const [businessExpenses, setBusinessExpenses] = useState('');\r\n  const [taxRate, setTaxRate] = useState('30');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const targetIncome = Number(desiredIncome) || 0;\r\n    const billableDays = Number(workingDays) || 0;\r\n    const expenses = Number(businessExpenses) || 0;\r\n    const taxRatePercent = Number(taxRate) || 0;\r\n\r\n    if (targetIncome <= 0 || billableDays <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    // Calculate gross revenue needed\r\n    const taxAmount = (targetIncome * taxRatePercent) / 100;\r\n    const grossRevenueNeeded = targetIncome + taxAmount + expenses;\r\n\r\n    // Calculate day rate\r\n    const dayRate = grossRevenueNeeded / billableDays;\r\n    const hourlyRate = dayRate / 8; // Assuming 8-hour days\r\n\r\n    // Calculate what this means annually\r\n    const annualRevenue = dayRate * billableDays;\r\n    const netAfterTaxAndExpenses = annualRevenue - taxAmount - expenses;\r\n\r\n    const newResults = {\r\n      dayRate,\r\n      hourlyRate,\r\n      annualRevenue,\r\n      netAfterTaxAndExpenses,\r\n      taxAmount,\r\n      expenses,\r\n      workingDays: billableDays,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Recommended Day Rate', `┬ú${newResults.dayRate.toFixed(2)}`],\r\n      ['Equivalent Hourly Rate', `┬ú${newResults.hourlyRate.toFixed(2)}`],\r\n      ['Annual Revenue', `┬ú${newResults.annualRevenue.toFixed(2)}`],\r\n      ['Less: Estimated Tax', `-┬ú${newResults.taxAmount.toFixed(2)}`],\r\n      ['Less: Business Expenses', `-┬ú${newResults.expenses.toFixed(2)}`],\r\n      ['Net Income', `┬ú${newResults.netAfterTaxAndExpenses.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [desiredIncome, workingDays, businessExpenses, taxRate]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Freelancer Day Rate Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Calculate the optimal day rate for your freelance work, factoring in taxes, expenses,\r\n              and desired take-home income.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Freelancer Day Rate Calculation</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Your Freelance Goals</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"desiredIncome\">Desired Net Annual Income</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"desiredIncome\"\r\n                      type=\"number\"\r\n                      value={desiredIncome}\r\n                      onChange={(e) => setDesiredIncome(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 50000\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    What you want to take home after all costs\r\n                  </p>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"workingDays\">Billable Days Per Year</Label>\r\n                  <div className=\"relative\">\r\n                    <Calendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"workingDays\"\r\n                      type=\"number\"\r\n                      value={workingDays}\r\n                      onChange={(e) => setWorkingDays(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 220\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    Excluding holidays, sick days, and admin time\r\n                  </p>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"businessExpenses\">Annual Business Expenses</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"businessExpenses\"\r\n                      type=\"number\"\r\n                      value={businessExpenses}\r\n                      onChange={(e) => setBusinessExpenses(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 5000\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    Equipment, software, insurance, training, etc.\r\n                  </p>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Estimated Tax Rate (%)</Label>\r\n                  <Select value={taxRate} onValueChange={setTaxRate}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"20\">20% (Basic rate taxpayer)</SelectItem>\r\n                      <SelectItem value=\"30\">30% (Inc. NI & some corp tax)</SelectItem>\r\n                      <SelectItem value=\"40\">40% (Higher rate taxpayer)</SelectItem>\r\n                      <SelectItem value=\"50\">50% (Additional rate + NI)</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Day Rate\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your Recommended Rates</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"freelancer-day-rate\"\r\n                    title=\"Freelancer Day Rate\"\r\n                  />\r\n                </div>\r\n                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                  <Card className=\"bg-blue-50 border-blue-200\">\r\n                    <CardContent className=\"p-6\">\r\n                      <h3 className=\"font-semibold text-blue-800 mb-2\">Day Rate</h3>\r\n                      <div className=\"text-3xl font-bold text-blue-900\">\r\n                        ┬ú{results.dayRate.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card className=\"bg-purple-50 border-purple-200\">\r\n                    <CardContent className=\"p-6\">\r\n                      <h3 className=\"font-semibold text-purple-800 mb-2\">Hourly Rate</h3>\r\n                      <div className=\"text-3xl font-bold text-purple-900\">\r\n                        ┬ú\r\n                        {results.hourlyRate.toLocaleString('en-GB', {\r\n                          minimumFractionDigits: 2,\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Financial Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex justify-between p-3 bg-green-50 rounded\">\r\n                      <span>Annual Revenue ({results.workingDays} days)</span>\r\n                      <span className=\"font-semibold text-green-800\">\r\n                        ┬ú{results.annualRevenue.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between p-3 bg-red-50 rounded\">\r\n                      <span>Less: Estimated Tax</span>\r\n                      <span className=\"font-semibold text-red-800\">\r\n                        -┬ú{results.taxAmount.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between p-3 bg-yellow-50 rounded\">\r\n                      <span>Less: Business Expenses</span>\r\n                      <span className=\"font-semibold text-yellow-800\">\r\n                        -┬ú{results.expenses.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between p-4 bg-green-100 rounded font-bold\">\r\n                      <span>Net Take-Home Income</span>\r\n                      <span className=\"text-green-900\">\r\n                        ┬ú{results.netAfterTaxAndExpenses.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to price your services?</h3>\r\n                  <p>Enter your financial goals to calculate optimal rates.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={freelancerFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\FutureValueCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 53,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { PoundSterling, Percent, Calendar, TrendingUp } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst fvFAQs = [\r\n  {\r\n    question: 'What is Future Value (FV)?',\r\n    answer:\r\n      'Future Value is a financial formula used to determine the value of a current asset at a specified date in the future, based on an assumed rate of growth. It helps you understand the power of compounding over time.',\r\n  },\r\n  {\r\n    question: 'How is this different from the Compound Interest Calculator?',\r\n    answer:\r\n      'They are very similar! Both use the core principles of compounding. The Compound Interest Calculator is designed to show you the growth of regular savings over time. This Future Value calculator focuses on calculating the future worth of a single, one-time investment.',\r\n  },\r\n  {\r\n    question: 'What can I use Future Value for?',\r\n    answer:\r\n      \"It's great for financial planning. For example, you can use it to estimate how much a single investment of ┬ú10,000 today might be worth when you retire, helping you make informed decisions about your investment strategy.\",\r\n  },\r\n];\r\n\r\nexport default function FutureValueCalculator() {\r\n  const [presentValue, setPresentValue] = useState('10000');\r\n  const [interestRate, setInterestRate] = useState('7');\r\n  const [years, setYears] = useState('10');\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const pv = Number(presentValue) || 0;\r\n    const r = Number(interestRate) / 100;\r\n    const t = Number(years) || 0;\r\n\r\n    if (pv <= 0 || r < 0 || t <= 0) {\r\n      setResults(null);\r\n      return;\r\n    }\r\n\r\n    const futureValue = pv * Math.pow(1 + r, t);\r\n    const totalInterest = futureValue - pv;\r\n\r\n    setResults({ futureValue, totalInterest });\r\n  }, [presentValue, interestRate, years]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Future Value Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Calculate the future value of a single sum investment with compound interest.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Investment Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label htmlFor=\"presentValue\">Present Value (Current Investment) (┬ú)</Label>\r\n                  <Input\r\n                    id=\"presentValue\"\r\n                    type=\"number\"\r\n                    value={presentValue}\r\n                    onChange={(e) => setPresentValue(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"interestRate\">Annual Interest Rate (%)</Label>\r\n                  <Input\r\n                    id=\"interestRate\"\r\n                    type=\"number\"\r\n                    value={interestRate}\r\n                    onChange={(e) => setInterestRate(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"years\">Number of Years</Label>\r\n                  <Input\r\n                    id=\"years\"\r\n                    type=\"number\"\r\n                    value={years}\r\n                    onChange={(e) => setYears(e.target.value)}\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div>\r\n            {results ? (\r\n              <div className=\"space-y-6\">\r\n                <Card className=\"bg-green-50 border-green-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-green-900\">Future Value</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    {' '}\r\n                    {/* Removed text-center */}\r\n                    <p className=\"text-5xl font-bold text-green-900\">\r\n                      ┬ú\r\n                      {results.futureValue.toLocaleString('en-GB', {\r\n                        minimumFractionDigits: 2,\r\n                        maximumFractionDigits: 2,\r\n                      })}\r\n                    </p>\r\n                    <p className=\"text-sm text-green-700 mt-2\">\r\n                      {' '}\r\n                      {/* Changed mt-1 to mt-2, text-blue-700 to text-green-700 */}\r\n                      Total value after {years} years. {/* Updated text */}\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Growth Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex justify-between items-center text-sm\">\r\n                      <span>Initial Investment:</span>\r\n                      <span className=\"font-semibold\">\r\n                        ┬ú{Number(presentValue).toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center text-sm\">\r\n                      <span>Total Interest Earned:</span>\r\n                      <span className=\"font-semibold text-green-700\">\r\n                        ┬ú\r\n                        {results.totalInterest.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full\">\r\n                <p className=\"text-gray-500\">Enter details to calculate future value.</p>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-8 non-printable\">\r\n          {' '}\r\n          {/* Changed mt-12 to mt-8 */}\r\n          <FAQSection faqs={fvFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\GrossToNetCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 56,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators'; // Added import\r\n\r\nexport default function GrossToNetCalculator() {\r\n  const origin =\r\n    typeof window !== 'undefined' ? window.location.origin : 'https://www.calcmymoney.co.uk';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Salary & Income',\r\n        item: `${origin}${createPageUrl('SalaryCalculatorUK')}`,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const faqs = [\r\n    {\r\n      question: 'What does gross to net mean?',\r\n      answer:\r\n        'Gross pay is before deductions. Net pay is what you take home after income tax, National Insurance, pension and student loan repayments where applicable.',\r\n    },\r\n    {\r\n      question: 'Can I convert an annual salary to monthly net pay?',\r\n      answer:\r\n        'Yes. Enter your gross annual salary and select monthly as the output. The tool will show tax, NI and net pay per month.',\r\n    },\r\n    {\r\n      question: 'Does this account for pension and student loans?',\r\n      answer:\r\n        'You can toggle pension contributions and choose a student loan plan to see their effect on your net pay.',\r\n    },\r\n  ];\r\n\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: faqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  const LAST_UPDATED_ISO = '2025-04-06';\r\n  const LAST_UPDATED_DISPLAY = '6 April 2025';\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <script\r\n        type=\"application/ld+json\"\r\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(faqJson) }}\r\n      />\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\r\n              Gross to Net Income Calculator (UK)\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto mt-3\">\r\n              Convert gross salary to net takeÔÇæhome pay with UK tax and NI for 2025/26.\r\n            </p>\r\n\r\n            {/* Quick links: Hub + siblings */}\r\n            <div className=\"mt-4 flex flex-wrap justify-center gap-2\">\r\n              <Link\r\n                to={createPageUrl('SalaryCalculatorUK')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                Salary Hub\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('SalaryCalculatorTakeHomePay')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                TakeÔÇæHome Pay\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('SalaryCalculatorPaycheck')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                Paycheck\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10\">\r\n          <div className=\"space-y-6\">\r\n            <h2 className=\"text-2xl font-semibold text-gray-900\">Convert Gross to Net</h2>\r\n            <p className=\"text-gray-700\">\r\n              Use the hub calculator to enter your gross pay and see an instant net figure after tax\r\n              and NI.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"mt-12\">\r\n            <FAQSection faqs={faqs} title=\"GrossÔÇætoÔÇæNet FAQs\" />\r\n          </div>\r\n          <p className=\"text-xs text-gray-500 mt-6\">\r\n            Last updated: <time dateTime={LAST_UPDATED_ISO}>{LAST_UPDATED_DISPLAY}</time>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <RelatedCalculators // Added RelatedCalculators component\r\n        calculators={[\r\n          {\r\n            name: 'UK Salary Calculator (Take-Home Pay 2025/26)',\r\n            url: createPageUrl('SalaryCalculatorUK'),\r\n            description: 'Full breakdown of your net pay for 2025/26.',\r\n          },\r\n          {\r\n            name: 'Take-Home Pay Calculator UK (2025/26)',\r\n            url: createPageUrl('SalaryCalculatorTakeHomePay'),\r\n            description: 'HMRCÔÇæbased takeÔÇæhome pay estimates.',\r\n          },\r\n          {\r\n            name: 'Paycheck Calculator UK (After Tax & NI)',\r\n            url: createPageUrl('SalaryCalculatorPaycheck'),\r\n            description: 'Net pay by pay period with deductions.',\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\HolidayPayCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 79,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Calculator, CalendarDays, Briefcase } from 'lucide-react';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\n\r\nconst STATUTORY_WEEKS = 5.6;\r\n\r\nexport default function HolidayPayCalculator() {\r\n  const [calculationType, setCalculationType] = useState('days');\r\n  const [daysPerWeek, setDaysPerWeek] = useState('');\r\n  const [dailyRate, setDailyRate] = useState('');\r\n  const [weeksWorked, setWeeksWorked] = useState('');\r\n  const [hourlyRate, setHourlyRate] = useState('');\r\n\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    let holidayEntitlement = 0;\r\n    let holidayPay = 0;\r\n\r\n    if (calculationType === 'days') {\r\n      const days = Number(daysPerWeek) || 0;\r\n      const rate = Number(dailyRate) || 0;\r\n      if (days > 0 && days <= 7) {\r\n        holidayEntitlement = Math.min(days * STATUTORY_WEEKS, 28);\r\n        holidayPay = holidayEntitlement * rate;\r\n      }\r\n    } else {\r\n      // Irregular hours\r\n      const weeks = Number(weeksWorked) || 0;\r\n      const rate = Number(hourlyRate) || 0;\r\n      if (weeks > 0 && rate > 0) {\r\n        // Holiday entitlement for irregular hours workers is 12.07% of hours worked\r\n        holidayEntitlement = (weeks * 12.07) / 100; // in weeks, convert to hours\r\n        // This is a simplified model. True calculation is based on average pay over last 52 weeks.\r\n        const avgWeeklyHours = weeks;\r\n        const avgWeeklyPay = avgWeeklyHours * rate;\r\n        holidayPay = avgWeeklyPay * STATUTORY_WEEKS;\r\n      }\r\n    }\r\n\r\n    const newResults = {\r\n      holidayEntitlement,\r\n      holidayPay,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      [\r\n        'Holiday Entitlement',\r\n        `${newResults.holidayEntitlement.toFixed(2)} ${calculationType === 'days' ? 'days' : 'hours'}`,\r\n      ],\r\n      ['Estimated Holiday Pay', `┬ú${newResults.holidayPay.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [calculationType, daysPerWeek, dailyRate, weeksWorked, hourlyRate]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Holiday Pay & Entitlement Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Everyone needs a break. Make sure you're getting the paid time off you're entitled to.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Work Pattern</CardTitle>\r\n                <Select value={calculationType} onValueChange={setCalculationType}>\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"days\">I work a fixed number of days per week</SelectItem>\r\n                    <SelectItem value=\"irregular\">\r\n                      I work irregular hours / am on a zero-hour contract\r\n                    </SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                {calculationType === 'days' ? (\r\n                  <>\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"daysPerWeek\">Days worked per week</Label>\r\n                      <Input\r\n                        id=\"daysPerWeek\"\r\n                        type=\"number\"\r\n                        value={daysPerWeek}\r\n                        onChange={(e) => setDaysPerWeek(e.target.value)}\r\n                        placeholder=\"e.g. 5\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"dailyRate\">Normal daily pay (┬ú)</Label>\r\n                      <Input\r\n                        id=\"dailyRate\"\r\n                        type=\"number\"\r\n                        value={dailyRate}\r\n                        onChange={(e) => setDailyRate(e.target.value)}\r\n                        placeholder=\"e.g. 150\"\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"weeksWorked\">Average hours worked per week</Label>\r\n                      <Input\r\n                        id=\"weeksWorked\"\r\n                        type=\"number\"\r\n                        value={weeksWorked}\r\n                        onChange={(e) => setWeeksWorked(e.target.value)}\r\n                        placeholder=\"e.g. 30\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"hourlyRate\">Your hourly rate (┬ú)</Label>\r\n                      <Input\r\n                        id=\"hourlyRate\"\r\n                        type=\"number\"\r\n                        value={hourlyRate}\r\n                        onChange={(e) => setHourlyRate(e.target.value)}\r\n                        placeholder=\"e.g. 11.50\"\r\n                      />\r\n                    </div>\r\n                    <p className=\"text-xs text-gray-500\">\r\n                      For irregular hours, holiday pay is based on your average pay over the\r\n                      previous 52 weeks worked.\r\n                    </p>\r\n                  </>\r\n                )}\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Entitlement\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"space-y-6\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your Holiday Entitlement</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"holiday-entitlement\"\r\n                    title=\"Holiday Entitlement\"\r\n                  />\r\n                </div>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Annual Entitlement</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4 text-center\">\r\n                    <div className=\"p-4 bg-blue-50 rounded-lg\">\r\n                      <p className=\"text-sm font-medium text-blue-800\">Annual Holiday Days/Hours</p>\r\n                      <p className=\"text-3xl font-bold text-blue-900\">\r\n                        {results.holidayEntitlement.toFixed(1)}{' '}\r\n                        {calculationType === 'days' ? 'days' : 'hours'}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"p-4 bg-green-50 rounded-lg\">\r\n                      <p className=\"text-sm font-medium text-green-800\">Total Holiday Pay</p>\r\n                      <p className=\"text-3xl font-bold text-green-900\">\r\n                        ┬ú{results.holidayPay.toLocaleString('en-GB', { maximumFractionDigits: 2 })}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <CalendarDays className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Know your time off</h3>\r\n                  <p>Enter your details to calculate your holiday pay.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\Home.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 21,
        "column": 7,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport { Search, Calculator, TrendingUp, Users, Star, ExternalLink } from 'lucide-react';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport {\r\n  calculatorCategories,\r\n  getAllCalculators,\r\n  getCalculatorsByStatus,\r\n  getCalculatorStats,\r\n  searchCalculators,\r\n} from '../components/data/calculatorConfig';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport { HandCoins, PoundSterling, Home as HomeIcon, PiggyBank } from 'lucide-react';\r\n\r\nconst homepageFaqs = [\r\n  {\r\n    question: 'How accurate are your UK salary/tax calculators?',\r\n    answer: (\r\n      <>\r\n        <p>\r\n          Our calculators are designed to be highly accurate, based on the latest UK tax laws and\r\n          financial regulations. They use up-to-date information for Income Tax, National Insurance,\r\n          pension contributions, and student loans for the specified tax year (2025/26).\r\n        </p>\r\n        <p className=\"mt-2\">\r\n          While we strive for precision, these tools are for estimation purposes and should not be\r\n          considered financial advice. Always consult with a qualified financial advisor for\r\n          personal financial decisions.\r\n        </p>\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    question: 'Which tax year do the calculators use (2025/26)?',\r\n    answer:\r\n      'All relevant calculators, including the Salary, Income Tax, and National Insurance calculators, have been updated and are based on the 2025/26 UK tax year, which runs from 6 April 2025 to 5 April 2026. Rates and thresholds for England, Scotland, Wales, and Northern Ireland are applied where applicable.',\r\n  },\r\n  {\r\n    question: 'Can I download or print the results?',\r\n    answer:\r\n      \"Yes. Most of our calculators feature 'Export' or 'Print' buttons that allow you to either download your results as a CSV/PDF file or generate a printer-friendly version of the summary. This makes it easy to save your calculations for your records or share them with others.\",\r\n  },\r\n];\r\n\r\nexport default function Home() {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [showAllCalculators, setShowAllCalculators] = useState(false);\r\n\r\n  const stats = getCalculatorStats();\r\n  const allCalculators = getAllCalculators();\r\n  const activeCalculators = getCalculatorsByStatus('active');\r\n\r\n  // Popular/Featured calculators (you can customize this list)\r\n  const featuredCalculators = [\r\n    'SalaryCalculatorUK',\r\n    'MortgageCalculator',\r\n    'BudgetCalculator',\r\n    'IncomeTaxCalculator',\r\n    'CompoundInterestCalculator',\r\n    'PensionCalculator',\r\n  ];\r\n\r\n  const featuredCalcObjects = featuredCalculators\r\n    .map((pageName) => allCalculators.find((calc) => calc.url.includes(pageName)))\r\n    .filter(Boolean);\r\n\r\n  // Handle search\r\n  useEffect(() => {\r\n    if (searchQuery.trim()) {\r\n      const results = searchCalculators(searchQuery);\r\n      setSearchResults(results);\r\n    } else {\r\n      setSearchResults([]);\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const hubCards = [\r\n    {\r\n      title: 'Salary & Income',\r\n      icon: HandCoins,\r\n      link: '#income-employment',\r\n      description: 'Calculate take-home pay, tax, and more.',\r\n    },\r\n    {\r\n      title: 'Tax Tools',\r\n      icon: PoundSterling,\r\n      link: '#tax-calculators',\r\n      description: 'Tools for income tax, NI, VAT, and CGT.',\r\n    },\r\n    {\r\n      title: 'Mortgage & Loans',\r\n      icon: HomeIcon,\r\n      link: '#property-mortgages',\r\n      description: 'Estimate repayments and affordability.',\r\n    },\r\n    {\r\n      title: 'Savings & Finance',\r\n      icon: PiggyBank,\r\n      link: '#savings-investments',\r\n      description: 'Plan investments and savings goals.',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      {/* Hero Section - calculators.net style */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b dark:border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-20\">\r\n          <div className=\"text-center max-w-4xl mx-auto\">\r\n            <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Free UK Salary, Tax & Mortgage Calculators\r\n            </h1>\r\n            <p className=\"text-xl text-gray-600 dark:text-gray-300 mb-8\">\r\n              Use our fast, accurate UK calculators to estimate take-home pay, tax & NI, mortgage\r\n              repayments, and savings growth for the 2025/26 tax year. Start with salary, tax,\r\n              mortgage or finance tools below.\r\n            </p>\r\n\r\n            {/* Search Bar */}\r\n            <div className=\"max-w-2xl mx-auto mb-8\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Search calculators... (e.g. salary, mortgage, tax)\"\r\n                  value={searchQuery}\r\n                  onChange={handleSearchChange}\r\n                  className=\"pl-12 pr-4 py-4 text-lg border-2 border-gray-300 focus:border-blue-500 rounded-xl\"\r\n                />\r\n              </div>\r\n\r\n              {/* Search Results Dropdown */}\r\n              {searchResults.length > 0 && (\r\n                <div className=\"absolute z-10 w-full max-w-2xl mx-auto mt-2 bg-white border border-gray-200 rounded-lg shadow-lg\">\r\n                  <div className=\"p-2 max-h-64 overflow-y-auto\">\r\n                    {searchResults.slice(0, 8).map((calc, index) => (\r\n                      <Link\r\n                        key={index}\r\n                        to={calc.url}\r\n                        className=\"block p-3 hover:bg-gray-50 rounded-lg transition-colors\"\r\n                        onClick={() => {\r\n                          setSearchQuery('');\r\n                          setSearchResults([]);\r\n                        }}\r\n                      >\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div>\r\n                            <p className=\"font-medium text-gray-900\">{calc.name}</p>\r\n                            <p className=\"text-sm text-gray-600\">{calc.description}</p>\r\n                            <p className=\"text-xs text-gray-500\">\r\n                              {calc.category} ÔåÆ {calc.subCategory}\r\n                            </p>\r\n                          </div>\r\n                          {calc.status === 'planned' ? (\r\n                            <Badge variant=\"secondary\" className=\"text-xs\">\r\n                              Coming Soon\r\n                            </Badge>\r\n                          ) : (\r\n                            <ExternalLink className=\"w-4 h-4 text-gray-400\" />\r\n                          )}\r\n                        </div>\r\n                      </Link>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Quick Stats */}\r\n            <div className=\"flex justify-center items-center gap-8 text-sm text-gray-600 dark:text-gray-400\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Calculator className=\"w-4 h-4\" />\r\n                <span>{stats.total} Calculators</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <TrendingUp className=\"w-4 h-4\" />\r\n                <span>{stats.active} Active</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Users className=\"w-4 h-4\" />\r\n                <span>Free to Use</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hub Cards Section */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 -mt-16 relative z-10\">\r\n        <div className=\"grid sm:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          {hubCards.map((card, index) => (\r\n            <a\r\n              key={index}\r\n              href={card.link}\r\n              className=\"group block p-6 bg-white border border-gray-200 rounded-lg shadow-md hover:shadow-xl hover:-translate-y-1 transform transition-all duration-300\"\r\n            >\r\n              <div className=\"flex items-center gap-4 mb-2\">\r\n                <div className=\"bg-blue-100 p-3 rounded-full\">\r\n                  <card.icon className=\"w-6 h-6 text-blue-600\" />\r\n                </div>\r\n                <h3 className=\"text-lg font-semibold text-gray-900 group-hover:text-blue-700\">\r\n                  {card.title}\r\n                </h3>\r\n              </div>\r\n              <p className=\"text-sm text-gray-600\">{card.description}</p>\r\n            </a>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Featured/Popular Calculators */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"text-center mb-8\">\r\n          <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n            <Calculator className=\"inline w-9 h-9 mr-2 text-blue-600\" />\r\n            Popular Calculators\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-300\">\r\n            The most used financial calculators on our platform\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4 mb-12\">\r\n          {featuredCalcObjects.map((calc, index) => (\r\n            <Link\r\n              key={index}\r\n              to={calc.url}\r\n              className=\"group block p-6 bg-white border border-gray-200 rounded-lg hover:shadow-md hover:border-blue-300 transition-all duration-200\"\r\n            >\r\n              <div className=\"flex items-center gap-3 mb-2\">\r\n                <calc.icon className=\"w-5 h-5 text-blue-600\" />\r\n                <h3 className=\"font-semibold text-gray-900 group-hover:text-blue-600\">\r\n                  {calc.name}\r\n                </h3>\r\n              </div>\r\n              <p className=\"text-sm text-gray-600 mb-2\">{calc.description}</p>\r\n              <p className=\"text-xs text-gray-500\">{calc.category}</p>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Homepage FAQ Section */}\r\n      <div className=\"bg-white py-16\">\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 dark:text-gray-100 text-center mb-10\">\r\n            Common Questions\r\n          </h2>\r\n          <FAQSection faqs={homepageFaqs} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Complete Calculator Directory - calculators.net style */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 py-16\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"text-center mb-12\">\r\n            <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Complete Calculator Directory\r\n            </h2>\r\n            <p className=\"text-gray-600 dark:text-gray-300 mb-6\">\r\n              Browse all {stats.total} financial calculators organized by category\r\n            </p>\r\n            <button\r\n              onClick={() => setShowAllCalculators(!showAllCalculators)}\r\n              className=\"text-blue-600 hover:text-blue-800 font-medium\"\r\n            >\r\n              {showAllCalculators ? 'Hide' : 'Show'} All Calculators\r\n            </button>\r\n          </div>\r\n\r\n          {/* Calculator Categories */}\r\n          <div className=\"space-y-12\">\r\n            {calculatorCategories.map((category) => (\r\n              <div key={category.slug} id={category.slug} className=\"scroll-mt-20\">\r\n                {/* Category Header */}\r\n                <div className=\"flex items-center gap-4 mb-6 pb-3 border-b-2 border-gray-300\">\r\n                  <category.icon className=\"w-8 h-8 text-blue-600\" />\r\n                  <div>\r\n                    <h3 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n                      {category.name}\r\n                    </h3>\r\n                    <p className=\"text-gray-600 dark:text-gray-300\">{category.description}</p>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Sub-categories and Calculators */}\r\n                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n                  {category.subCategories.map((subCategory) => (\r\n                    <div key={subCategory.name} className=\"space-y-3\">\r\n                      <h4 className=\"font-semibold text-lg text-gray-800 dark:text-gray-200 border-l-4 border-blue-500 pl-3\">\r\n                        {subCategory.name}\r\n                      </h4>\r\n                      <div className=\"space-y-2 pl-3\">\r\n                        {subCategory.calculators\r\n                          .filter((calc) => showAllCalculators || calc.status === 'active')\r\n                          .map((calc, index) => (\r\n                            <div key={index} className=\"flex items-center justify-between group\">\r\n                              {calc.status === 'active' ? (\r\n                                <Link\r\n                                  to={calc.url}\r\n                                  className=\"flex-1 text-blue-600 hover:text-blue-800 hover:underline text-sm font-medium\"\r\n                                >\r\n                                  {calc.name}\r\n                                </Link>\r\n                              ) : (\r\n                                <span className=\"flex-1 text-gray-400 text-sm\">{calc.name}</span>\r\n                              )}\r\n                              {calc.status === 'planned' && (\r\n                                <Badge variant=\"outline\" className=\"text-xs ml-2\">\r\n                                  Coming Soon\r\n                                </Badge>\r\n                              )}\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Quick Stats Footer */}\r\n          <div className=\"mt-16 text-center p-8 bg-white rounded-lg border border-gray-200\">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">\r\n              Why Choose Our Calculators?\r\n            </h3>\r\n            <div className=\"grid md:grid-cols-3 gap-6 text-sm\">\r\n              <div>\r\n                <div className=\"text-3xl font-bold text-blue-600 mb-2\">{stats.active}</div>\r\n                <p className=\"text-gray-600\">Active Calculators</p>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-3xl font-bold text-green-600 mb-2\">100%</div>\r\n                <p className=\"text-gray-600\">Free to Use</p>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-3xl font-bold text-purple-600 mb-2\">2025/26</div>\r\n                <p className=\"text-gray-600\">Up-to-Date Tax Rates</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\HomeEquityLoanCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 64,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { PoundSterling, Home, Banknote, Percent } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst homeEquityFAQs = [\r\n  {\r\n    question: 'What is home equity?',\r\n    answer:\r\n      \"Home equity is the portion of your home that you own outright. It's the difference between your property's current market value and the amount you still owe on your mortgage. Equity increases as you pay down your mortgage and as your property value appreciates.\",\r\n  },\r\n  {\r\n    question: 'What is Loan-to-Value (LTV)?',\r\n    answer:\r\n      \"Loan-to-Value (LTV) is a percentage that represents the ratio of a loan to the value of the asset purchased. Lenders use LTV to assess risk. For a home equity loan, they will typically cap the total LTV (your original mortgage + new loan) at around 80-85% of the property's value.\",\r\n  },\r\n  {\r\n    question: 'What are the risks of a home equity loan?',\r\n    answer:\r\n      'The biggest risk is that a home equity loan is secured against your property. If you fail to make the repayments, your home could be at risk of repossession. Additionally, if property values fall, you could end up in negative equity, where you owe more than your house is worth.',\r\n  },\r\n  {\r\n    question: 'A Note on Trustworthiness',\r\n    answer:\r\n      'This calculator provides an estimate of the equity you could potentially borrow against. The actual amount a lender will offer depends on their specific lending criteria, your credit history, income, and a formal property valuation. Always consult with a mortgage advisor before making any decisions.',\r\n  },\r\n];\r\n\r\nexport default function HomeEquityLoanCalculator() {\r\n  const [propertyValue, setPropertyValue] = useState('350000');\r\n  const [outstandingMortgage, setOutstandingMortgage] = useState('150000');\r\n  const [ltvLimit, setLtvLimit] = useState('85');\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const value = Number(propertyValue) || 0;\r\n    const mortgage = Number(outstandingMortgage) || 0;\r\n    const ltv = Number(ltvLimit) / 100;\r\n\r\n    if (value <= 0 || mortgage < 0 || ltv <= 0) {\r\n      setResults(null);\r\n      return;\r\n    }\r\n\r\n    const currentEquity = value - mortgage;\r\n    const totalBorrowingLimit = value * ltv;\r\n    const maxAvailableToBorrow = Math.max(0, totalBorrowingLimit - mortgage);\r\n\r\n    setResults({\r\n      currentEquity,\r\n      maxAvailableToBorrow,\r\n    });\r\n  }, [propertyValue, outstandingMortgage, ltvLimit]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Home Equity Loan Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Estimate how much you could potentially borrow against the equity in your home.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Property Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label htmlFor=\"propertyValue\">Estimated Property Value (┬ú)</Label>\r\n                  <div className=\"relative mt-1\">\r\n                    <Home className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"propertyValue\"\r\n                      type=\"number\"\r\n                      value={propertyValue}\r\n                      onChange={(e) => setPropertyValue(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"outstandingMortgage\">Outstanding Mortgage Balance (┬ú)</Label>\r\n                  <div className=\"relative mt-1\">\r\n                    <Banknote className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"outstandingMortgage\"\r\n                      type=\"number\"\r\n                      value={outstandingMortgage}\r\n                      onChange={(e) => setOutstandingMortgage(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"ltvLimit\">Lender's LTV Limit (%)</Label>\r\n                  <div className=\"flex items-center gap-4 mt-1\">\r\n                    <Slider\r\n                      id=\"ltvLimit\"\r\n                      value={[parseFloat(ltvLimit)]}\r\n                      onValueChange={([val]) => setLtvLimit(val.toString())}\r\n                      min={50}\r\n                      max={95}\r\n                      step={1}\r\n                      className=\"flex-1\"\r\n                    />\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={ltvLimit}\r\n                      onChange={(e) => setLtvLimit(e.target.value)}\r\n                      className=\"w-24 text-center\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div>\r\n            {results ? (\r\n              <div className=\"space-y-6\">\r\n                <Card className=\"bg-green-50 border-green-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-green-900\">Maximum Available to Borrow</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center\">\r\n                    <p className=\"text-5xl font-bold text-green-900\">\r\n                      ┬ú\r\n                      {results.maxAvailableToBorrow.toLocaleString('en-GB', {\r\n                        maximumFractionDigits: 0,\r\n                      })}\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Equity Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Property Value:</span>{' '}\r\n                      <span className=\"font-semibold\">\r\n                        ┬ú{Number(propertyValue).toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-red-600\">\r\n                      <span>Mortgage Owed:</span>{' '}\r\n                      <span className=\"font-semibold\">\r\n                        -┬ú{Number(outstandingMortgage).toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between border-t pt-2 font-bold text-lg text-blue-700\">\r\n                      <span>Your Current Equity:</span>{' '}\r\n                      <span>┬ú{results.currentEquity.toLocaleString()}</span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <div className=\"text-xs text-gray-500 p-3 bg-gray-100 rounded-lg\">\r\n                  This is an estimate. Lenders will conduct their own valuation and have specific\r\n                  criteria regarding income and credit history that will determine the final loan\r\n                  amount.\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full\">\r\n                <p className=\"text-gray-500\">Enter your details to calculate.</p>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={homeEquityFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\HomeLoanMortgageCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 44,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\n\r\nexport default function HomeLoanMortgageCalculator() {\r\n  const origin = typeof window !== 'undefined' ? window.location.origin : '';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Mortgage Calculators Hub',\r\n        item: `${origin}/MortgageCalculatorUK`,\r\n      },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 3,\r\n        name: 'Home Loan Mortgage Calculator',\r\n        item: `${origin}/HomeLoanMortgageCalculator`,\r\n      },\r\n    ],\r\n  };\r\n  const faqs = [\r\n    {\r\n      question: 'How is the payment calculated?',\r\n      answer: 'Based on the loan amount, term and interest rate entered.',\r\n    },\r\n  ];\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: faqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <script type=\"application/ld+json\">{JSON.stringify(faqJson)}</script>\r\n\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200 text-center py-10\">\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\r\n            Home Loan Mortgage Calculator\r\n          </h1>\r\n          <p className=\"text-gray-600 mt-2\">\r\n            Quickly estimate payments for common mortgage scenarios.\r\n          </p>\r\n          <div className=\"mt-4 flex flex-wrap justify-center gap-2\">\r\n            <Link\r\n              to={createPageUrl('MortgageCalculatorUK')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Mortgage Hub\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('MortgageLoanRepayment')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Mortgage Repayment\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('MortgageComparison')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Mortgage Comparison\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10\">\r\n          <div className=\"p-6 bg-gray-50 border rounded\">\r\n            <p className=\"text-gray-700\">\r\n              Calculator coming soon. Meanwhile, use the main Mortgage Calculator for a detailed\r\n              breakdown.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"mt-12\">\r\n            <RelatedCalculators\r\n              calculators={[\r\n                {\r\n                  name: 'Back to Mortgage Hub',\r\n                  url: createPageUrl('MortgageCalculatorUK'),\r\n                  description: 'Explore all mortgage tools.',\r\n                },\r\n                {\r\n                  name: 'Mortgage Loan Repayment',\r\n                  url: createPageUrl('MortgageLoanRepayment'),\r\n                  description: 'See monthly payments.',\r\n                },\r\n                {\r\n                  name: 'Mortgage Comparison',\r\n                  url: createPageUrl('MortgageComparison'),\r\n                  description: 'Compare deals.',\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\HourlyToAnnualSalaryCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 38,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, ArrowRightLeft, Calendar, Clock } from 'lucide-react';\r\n\r\nexport default function HourlyToAnnualSalaryCalculator() {\r\n  const [hourlyRate, setHourlyRate] = useState('');\r\n  const [hoursPerWeek, setHoursPerWeek] = useState('37.5');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = () => {\r\n    const rate = Number(hourlyRate) || 0;\r\n    const hours = Number(hoursPerWeek) || 0;\r\n\r\n    if (rate <= 0 || hours <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const weekly = rate * hours;\r\n    const monthly = weekly * 4.333; // Average weeks in a month\r\n    const annual = weekly * 52;\r\n\r\n    setResults({ weekly, monthly, annual });\r\n    setHasCalculated(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [hourlyRate, hoursPerWeek]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Hourly to Annual Salary Converter\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Quickly convert your hourly wage into weekly, monthly, and annual gross salary\r\n              figures.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"hourlyRate\">Your Hourly Rate</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"hourlyRate\"\r\n                      type=\"number\"\r\n                      value={hourlyRate}\r\n                      onChange={(e) => setHourlyRate(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 15.50\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"hoursPerWeek\">Hours Worked Per Week</Label>\r\n                  <div className=\"relative\">\r\n                    <Clock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"hoursPerWeek\"\r\n                      type=\"number\"\r\n                      value={hoursPerWeek}\r\n                      onChange={(e) => setHoursPerWeek(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <ArrowRightLeft className=\"w-5 h-5 mr-2\" />\r\n                  Convert\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <Card className=\"bg-blue-50 border-blue-200\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-blue-800\">Your Salary Conversion</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-6\">\r\n                  <div className=\"text-center p-4 bg-white rounded-lg\">\r\n                    <p className=\"text-sm text-gray-500\">Weekly Salary</p>\r\n                    <p className=\"text-2xl font-bold text-gray-900\">\r\n                      ┬ú{results.weekly.toLocaleString('en-GB', { minimumFractionDigits: 2 })}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-white rounded-lg\">\r\n                    <p className=\"text-sm text-gray-500\">Monthly Salary (approx.)</p>\r\n                    <p className=\"text-2xl font-bold text-gray-900\">\r\n                      ┬ú{results.monthly.toLocaleString('en-GB', { minimumFractionDigits: 2 })}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"text-center p-6 bg-blue-100 rounded-lg\">\r\n                    <p className=\"text-lg font-medium text-blue-800\">Annual Gross Salary</p>\r\n                    <p className=\"text-4xl font-extrabold text-blue-900\">\r\n                      ┬ú{results.annual.toLocaleString('en-GB', { minimumFractionDigits: 2 })}\r\n                    </p>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">See the bigger picture</h3>\r\n                  <p>Enter your hourly rate to see your annual earnings.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\HouseholdBillsSplitter.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 30,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Plus, Trash2, Users } from 'lucide-react';\r\n\r\nexport default function HouseholdBillsSplitter() {\r\n  const [bills, setBills] = useState([\r\n    { name: 'Rent', amount: '1200' },\r\n    { name: 'Energy', amount: '150' },\r\n  ]);\r\n  const [people, setPeople] = useState(2);\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleBillChange = (index, field, value) => {\r\n    const newBills = [...bills];\r\n    newBills[index][field] = value;\r\n    setBills(newBills);\r\n  };\r\n  const addBill = () => setBills([...bills, { name: '', amount: '' }]);\r\n  const removeBill = (index) => setBills(bills.filter((_, i) => i !== index));\r\n\r\n  const calculate = () => {\r\n    const total = bills.reduce((acc, bill) => acc + (Number(bill.amount) || 0), 0);\r\n    const perPerson = total / people;\r\n    setResults({ total, perPerson });\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\r\n          <h1 className=\"text-3xl font-bold text-center\">Household Bills Splitter</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-4xl mx-auto p-4 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div>\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Enter Bills & People</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                {bills.map((bill, index) => (\r\n                  <div key={index} className=\"flex gap-2 items-center\">\r\n                    <Input\r\n                      placeholder=\"Bill Name\"\r\n                      value={bill.name}\r\n                      onChange={(e) => handleBillChange(index, 'name', e.target.value)}\r\n                    />\r\n                    <Input\r\n                      type=\"number\"\r\n                      placeholder=\"Amount\"\r\n                      value={bill.amount}\r\n                      onChange={(e) => handleBillChange(index, 'amount', e.target.value)}\r\n                    />\r\n                    <Button variant=\"ghost\" size=\"icon\" onClick={() => removeBill(index)}>\r\n                      <Trash2 className=\"w-4 h-4\" />\r\n                    </Button>\r\n                  </div>\r\n                ))}\r\n                <Button variant=\"outline\" onClick={addBill}>\r\n                  <Plus className=\"w-4 h-4 mr-2\" />\r\n                  Add Bill\r\n                </Button>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <label>Number of People:</label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={people}\r\n                    onChange={(e) => setPeople(Number(e.target.value))}\r\n                    className=\"w-20\"\r\n                  />\r\n                </div>\r\n                <Button onClick={calculate} className=\"w-full\">\r\n                  Calculate Split\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          <div>\r\n            {results && (\r\n              <Card className=\"bg-green-50 border-green-200\">\r\n                <CardHeader>\r\n                  <CardTitle>Split Result</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"text-center space-y-2\">\r\n                  <p>Total Bills</p>\r\n                  <p className=\"text-3xl font-bold\">┬ú{results.total.toLocaleString()}</p>\r\n                  <p className=\"pt-4\">Cost Per Person</p>\r\n                  <p className=\"text-4xl font-bold text-green-700\">\r\n                    ┬ú{results.perPerson.toLocaleString('en-GB', { maximumFractionDigits: 2 })}\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\ISACalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 84,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Calendar, TrendingUp } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst isaFAQs = [\r\n  {\r\n    question: 'What is an ISA?',\r\n    answer:\r\n      'An Individual Savings Account (ISA) is a tax-efficient way to save or invest. Any interest, capital gains, or dividends you earn from funds within an ISA are completely tax-free.',\r\n  },\r\n  {\r\n    question: 'What is the annual ISA allowance?',\r\n    answer:\r\n      'For the 2024/25 tax year, the annual ISA allowance is ┬ú20,000. You can put this into one type of ISA or split it across several different types.',\r\n  },\r\n  {\r\n    question: 'What are the main types of ISA?',\r\n    answer:\r\n      'The main types are: Cash ISAs (for risk-free cash savings), Stocks & Shares ISAs (for investing in the stock market), Lifetime ISAs (for first home or retirement), and Innovative Finance ISAs (for peer-to-peer lending).',\r\n  },\r\n];\r\n\r\nexport default function ISACalculator() {\r\n  const [initialDeposit, setInitialDeposit] = useState('');\r\n  const [monthlyContribution, setMonthlyContribution] = useState('');\r\n  const [interestRate, setInterestRate] = useState('');\r\n  const [years, setYears] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const P = Number(initialDeposit) || 0;\r\n    const PMT = Number(monthlyContribution) || 0;\r\n    const r = (Number(interestRate) || 0) / 100;\r\n    const t = Number(years) || 0;\r\n\r\n    if (t <= 0 || r <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const n = 12; // Compounded monthly\r\n    const nt = n * t;\r\n    const monthlyRate = r / n;\r\n\r\n    const finalBalance =\r\n      P * Math.pow(1 + monthlyRate, nt) + PMT * ((Math.pow(1 + monthlyRate, nt) - 1) / monthlyRate);\r\n    const totalContributions = P + PMT * 12 * t;\r\n    const totalInterest = finalBalance - totalContributions;\r\n\r\n    const newResults = {\r\n      finalBalance,\r\n      totalContributions,\r\n      totalInterest,\r\n      years: t,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Final Balance', `┬ú${newResults.finalBalance.toFixed(2)}`],\r\n      ['Total Contributions', `┬ú${newResults.totalContributions.toFixed(2)}`],\r\n      ['Total Interest Earned', `┬ú${newResults.totalInterest.toFixed(2)}`],\r\n      ['Investment Term', `${t} years`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [initialDeposit, monthlyContribution, interestRate, years]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              ISA Savings Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              See how your savings could grow in a tax-free ISA. Project your future balance based\r\n              on your contributions and expected returns.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">ISA Savings Projection</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Enter Your ISA Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"initialDeposit\">Initial Deposit</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"initialDeposit\"\r\n                      type=\"number\"\r\n                      value={initialDeposit}\r\n                      onChange={(e) => setInitialDeposit(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 1000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"monthlyContribution\">Monthly Contribution</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"monthlyContribution\"\r\n                      type=\"number\"\r\n                      value={monthlyContribution}\r\n                      onChange={(e) => setMonthlyContribution(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 250\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"interestRate\">Annual Growth Rate (%)</Label>\r\n                  <div className=\"relative\">\r\n                    <TrendingUp className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"interestRate\"\r\n                      type=\"number\"\r\n                      value={interestRate}\r\n                      onChange={(e) => setInterestRate(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 5\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"years\">Investment Term (Years)</Label>\r\n                  <div className=\"relative\">\r\n                    <Calendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"years\"\r\n                      type=\"number\"\r\n                      value={years}\r\n                      onChange={(e) => setYears(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Growth\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your ISA Projection</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"isa-projection\"\r\n                    title=\"ISA Projection\"\r\n                  />\r\n                </div>\r\n                <Card className=\"bg-blue-50 border-blue-200\">\r\n                  <CardContent className=\"p-6\">\r\n                    <h3 className=\"font-semibold text-blue-800 mb-2\">Projected Final Balance</h3>\r\n                    <div className=\"text-4xl font-bold text-blue-900\">\r\n                      ┬ú\r\n                      {results.finalBalance.toLocaleString('en-GB', {\r\n                        minimumFractionDigits: 2,\r\n                        maximumFractionDigits: 2,\r\n                      })}\r\n                    </div>\r\n                    <p className=\"text-sm text-blue-700\">After {results.years} years</p>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Growth Summary</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"p-4 bg-green-50 rounded-lg\">\r\n                      <p className=\"text-sm text-gray-600\">Total Contributions</p>\r\n                      <p className=\"text-lg font-semibold text-green-800\">\r\n                        ┬ú\r\n                        {results.totalContributions.toLocaleString('en-GB', {\r\n                          minimumFractionDigits: 2,\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"p-4 bg-yellow-50 rounded-lg\">\r\n                      <p className=\"text-sm text-gray-600\">Total Interest Earned</p>\r\n                      <p className=\"text-lg font-semibold text-yellow-800\">\r\n                        ┬ú\r\n                        {results.totalInterest.toLocaleString('en-GB', {\r\n                          minimumFractionDigits: 2,\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to see your ISA grow?</h3>\r\n                  <p>Enter your savings details to project your future wealth.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={isaFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\IncomeTaxCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 226,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, HelpCircle } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport CalculatorWrapper from '../components/calculators/CalculatorWrapper';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\nimport Breadcrumbs from '../components/general/Breadcrumbs'; // Added import for Breadcrumbs\r\nimport { createPageUrl } from '@/utils';\r\n\r\n// Site-wide SEO (JSON-LD) definition for the page\r\nconst incomeTaxJsonLd = {\r\n  '@context': 'https://schema.org',\r\n  '@type': 'WebPage',\r\n  name: 'UK Income Tax Calculator 2025/26',\r\n  description:\r\n    'Calculate your UK Income Tax for the 2025/26 financial year. Understand how your income is taxed across different bands including Personal Allowance, Basic, Higher, and Additional Rates.',\r\n  url: 'https://www.yourdomain.com/income-tax-calculator', // Replace with actual URL\r\n  mainEntity: {\r\n    '@type': 'Calculator',\r\n    name: 'UK Income Tax Calculator',\r\n    description: 'Calculates UK Income Tax for the 2025/26 tax year based on gross annual income.',\r\n    applicationCategory: 'Financial',\r\n    accessMode: ['visual', 'textual'],\r\n    accessModeSufficient: ['visual'],\r\n    operatingSystem: 'Any',\r\n    softwareRequirements: 'Web browser',\r\n    url: 'https://www.yourdomain.com/income-tax-calculator', // Replace with actual URL\r\n    citation: [\r\n      {\r\n        '@type': 'WebSite',\r\n        name: 'GOV.UK - Income Tax rates and allowances',\r\n        url: 'https://www.gov.uk/guidance/rates-and-allowances-for-income-tax-on-employment-income', // Link to official source\r\n      },\r\n    ],\r\n  },\r\n  breadcrumb: {\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 1,\r\n        name: 'Home',\r\n        item: createPageUrl('Home'),\r\n      },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Tax Calculators',\r\n        item: `${createPageUrl('Home')}#tax-calculators`,\r\n      },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 3,\r\n        name: 'Income Tax Calculator',\r\n      },\r\n    ],\r\n  },\r\n  about: [\r\n    {\r\n      '@type': 'Thing',\r\n      name: 'Income Tax',\r\n      description: 'A tax levied directly on personal income.',\r\n    },\r\n    {\r\n      '@type': 'Thing',\r\n      name: 'Tax Brackets',\r\n      description: 'Ranges of income that are taxed at a specific rate.',\r\n    },\r\n  ],\r\n  keywords:\r\n    'UK Income Tax, Income Tax Calculator, 2025/26 Tax Year, Personal Allowance, Basic Rate, Higher Rate, Additional Rate, Tax Bands, UK Tax, HMRC Tax',\r\n};\r\n\r\nconst taxBrackets = [\r\n  { min: 0, max: 12570, rate: 0, name: 'Personal Allowance' },\r\n  { min: 12571, max: 50270, rate: 0.2, name: 'Basic Rate' },\r\n  { min: 50271, max: 125140, rate: 0.4, name: 'Higher Rate' },\r\n  { min: 125141, max: Infinity, rate: 0.45, name: 'Additional Rate' },\r\n];\r\n\r\nconst incomeTaxFAQs = [\r\n  {\r\n    question: 'What is the Personal Allowance?',\r\n    answer:\r\n      'The Personal Allowance is the amount of income you can earn each year before you have to pay any Income Tax. For the 2025/26 tax year, the standard Personal Allowance is ┬ú12,570. This allowance is reduced by ┬ú1 for every ┬ú2 you earn over ┬ú100,000.',\r\n  },\r\n  {\r\n    question: 'How do tax bands work?',\r\n    answer:\r\n      \"Tax bands are the different levels of income on which you pay tax. In England, Wales, and Northern Ireland, once your income exceeds the Personal Allowance, you start paying the Basic Rate (20%). If your income is high enough, you'll move into the Higher Rate (40%) and then the Additional Rate (45%) bands. You only pay the higher rate on the portion of your income that falls within that specific band.\",\r\n  },\r\n  {\r\n    question: 'Is this calculator suitable for Scotland?',\r\n    answer:\r\n      \"This calculator uses the tax bands for England, Wales, and Northern Ireland. Scotland has its own set of income tax bands and rates which are different. For precise calculations for Scotland, please use our main Salary Calculator and select 'Scotland' in the advanced options.\",\r\n  },\r\n  {\r\n    question: 'Does this include National Insurance?',\r\n    answer:\r\n      'No, this calculator focuses exclusively on Income Tax to give you a clear understanding of that specific deduction. To see a full breakdown including National Insurance, pension, and student loan, please use our comprehensive Salary Calculator.',\r\n  },\r\n];\r\n\r\nexport default function IncomeTaxCalculator() {\r\n  const [grossIncome, setGrossIncome] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  // Breadcrumb path definition\r\n  const breadcrumbPath = [\r\n    { name: 'Home', url: createPageUrl('Home') },\r\n    { name: 'Tax Calculators', url: `${createPageUrl('Home')}#tax-calculators` },\r\n    { name: 'Income Tax Calculator' },\r\n  ];\r\n\r\n  const handleCalculate = () => {\r\n    const income = Number(grossIncome) || 0;\r\n    if (income <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    let totalTax = 0;\r\n    let taxBreakdown = [];\r\n    let personalAllowance = 12570;\r\n\r\n    // Personal allowance reduction for high earners\r\n    if (income > 100000) {\r\n      personalAllowance = Math.max(0, personalAllowance - (income - 100000) / 2);\r\n    }\r\n\r\n    // Re-calculating tax breakdown for accuracy, simpler logic:\r\n    let tempTotalTax = 0;\r\n    let tempTaxBreakdown = [];\r\n    let incomeRemainingForTax = income - personalAllowance;\r\n\r\n    for (const bracket of taxBrackets) {\r\n      if (bracket.rate === 0) continue; // Skip personal allowance band\r\n\r\n      const lowerBound = bracket.min;\r\n      const upperBound = bracket.max;\r\n\r\n      // Calculate the portion of taxable income that falls within this bracket\r\n      // This assumes tax brackets are for gross income, not adjusted by PA.\r\n      // We need to find the taxable portion of `incomeRemainingForTax` that falls into this bracket's range.\r\n\r\n      // Amount of the *gross income* that is above the lower bound of the bracket\r\n      const grossAboveLowerBound = Math.max(0, income - lowerBound + 1); // +1 because bracket.min is inclusive\r\n      // Amount of the *gross income* that is below the upper bound of the bracket\r\n      const grossBelowUpperBound = Math.max(0, upperBound - income + 1); // +1 because bracket.max is inclusive\r\n\r\n      // The actual range for the current bracket considering gross income\r\n      const effectiveBracketStart = Math.max(lowerBound, personalAllowance + 1); // Taxable income starts after PA\r\n      const effectiveBracketEnd = upperBound;\r\n\r\n      let amountInThisBracket = 0;\r\n      if (income > effectiveBracketStart - 1) {\r\n        // if income crosses into this effective bracket\r\n        amountInThisBracket =\r\n          Math.min(income, effectiveBracketEnd) -\r\n          Math.max(personalAllowance, effectiveBracketStart - 1);\r\n        amountInThisBracket = Math.max(0, amountInThisBracket); // Ensure it's not negative\r\n      }\r\n\r\n      // Simpler and more common approach: calculate based on remaining taxable income\r\n      // The amount of current `incomeRemainingForTax` that falls into this bracket's range\r\n      const taxableAmountInBracket = Math.min(\r\n        incomeRemainingForTax,\r\n        Math.max(\r\n          0,\r\n          (upperBound === Infinity ? Infinity : upperBound) -\r\n            Math.max(lowerBound, personalAllowance)\r\n        ) // Adjusted to handle Infinity correctly and for potential off-by-one, original logic was `upperBound - Math.max(lowerBound, personalAllowance)`\r\n      );\r\n\r\n      if (taxableAmountInBracket > 0) {\r\n        const taxOnThisBand = taxableAmountInBracket * bracket.rate;\r\n        tempTotalTax += taxOnThisBand;\r\n        tempTaxBreakdown.push({\r\n          name: bracket.name,\r\n          amount: taxOnThisBand,\r\n          rate: bracket.rate * 100,\r\n          taxableAmount: taxableAmountInBracket,\r\n        });\r\n        incomeRemainingForTax -= taxableAmountInBracket; // Deduct this amount from what's left to tax\r\n      }\r\n    }\r\n\r\n    const newResults = {\r\n      totalTax: tempTotalTax,\r\n      taxBreakdown: tempTaxBreakdown,\r\n      grossIncome: income,\r\n      personalAllowance: personalAllowance,\r\n    };\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Band', 'Taxable Amount', 'Tax Rate', 'Tax Paid'],\r\n      ...newResults.taxBreakdown.map((item) => [\r\n        item.name,\r\n        `┬ú${item.taxableAmount.toFixed(2)}`,\r\n        `${item.rate}%`,\r\n        `┬ú${item.amount.toFixed(2)}`,\r\n      ]),\r\n      ['', '', '', ''],\r\n      ['Gross Income', `┬ú${newResults.grossIncome.toFixed(2)}`, '', ''],\r\n      ['Personal Allowance', `┬ú${newResults.personalAllowance.toFixed(2)}`, '', ''],\r\n      ['Total Tax', `┬ú${newResults.totalTax.toFixed(2)}`, '', ''],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [grossIncome]);\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(incomeTaxJsonLd)}</script>\r\n      <div className=\"bg-white dark:bg-gray-900\">\r\n        <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n            {/* Breadcrumbs added here */}\r\n            <Breadcrumbs path={breadcrumbPath} />\r\n            <div className=\"text-center\">\r\n              <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n                UK Income Tax Calculator 2025/26\r\n              </h1>\r\n              <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n                Demystify your tax bill. See exactly how your income is taxed across the different\r\n                UK tax bands for the 2025/26 financial year.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"print-title hidden\">Income Tax Breakdown 2025/26</div>\r\n          <div className=\"grid md:grid-cols-2 gap-8\">\r\n            {/* Input Panel */}\r\n            <div className=\"non-printable\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Your Details</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-6\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"grossIncome\">Annual Gross Income</Label>\r\n                    <div className=\"relative\">\r\n                      <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                      <Input\r\n                        id=\"grossIncome\"\r\n                        type=\"number\"\r\n                        value={grossIncome}\r\n                        onChange={(e) => setGrossIncome(e.target.value)}\r\n                        className=\"pl-10\"\r\n                        placeholder=\"e.g. 50000\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                    <Calculator className=\"w-5 h-5 mr-2\" />\r\n                    Calculate Tax\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            {/* Results Panel */}\r\n            <div className=\"space-y-6 printable-area\">\r\n              {hasCalculated && results ? (\r\n                <>\r\n                  <div className=\"non-printable\">\r\n                    <h2 className=\"text-2xl font-bold text-gray-800\">Your Tax Breakdown</h2>\r\n                  </div>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Tax Summary</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-3\">\r\n                        <div className=\"flex justify-between items-center text-lg\">\r\n                          <span>Gross Income:</span>\r\n                          <span className=\"font-semibold\">\r\n                            ┬ú\r\n                            {results.grossIncome.toLocaleString('en-GB', {\r\n                              maximumFractionDigits: 0,\r\n                            })}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center text-lg\">\r\n                          <span>Personal Allowance:</span>\r\n                          <span className=\"font-semibold\">\r\n                            ┬ú\r\n                            {results.personalAllowance.toLocaleString('en-GB', {\r\n                              maximumFractionDigits: 0,\r\n                            })}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center p-4 bg-red-100 rounded-lg text-xl\">\r\n                          <span className=\"font-bold\">Total Estimated Tax:</span>\r\n                          <span className=\"font-bold text-red-700\">\r\n                            -┬ú\r\n                            {results.totalTax.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Breakdown by Tax Band</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-3\">\r\n                      {results.taxBreakdown.map((bracket, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className=\"flex justify-between items-center p-3 border-l-4 border-blue-400 bg-blue-50 rounded-r-lg\"\r\n                        >\r\n                          <div>\r\n                            <span className=\"font-medium\">\r\n                              {bracket.name} ({bracket.rate}%)\r\n                            </span>\r\n                            <p className=\"text-sm text-gray-600\">\r\n                              Taxable amount: ┬ú\r\n                              {bracket.taxableAmount.toLocaleString('en-GB', {\r\n                                maximumFractionDigits: 0,\r\n                              })}\r\n                            </p>\r\n                          </div>\r\n                          <span className=\"font-semibold text-blue-800\">\r\n                            -┬ú{bracket.amount.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n                    </CardContent>\r\n                  </Card>\r\n                  <div className=\"non-printable pt-6\">\r\n                    <ExportActions\r\n                      csvData={csvData}\r\n                      fileName=\"income-tax-breakdown\"\r\n                      title=\"Income Tax Breakdown\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                  <div className=\"text-center text-gray-500\">\r\n                    <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                    <h3 className=\"text-xl font-semibold\">Ready for your results?</h3>\r\n                    <p>Enter your income and click \"Calculate Tax\".</p>\r\n                  </div>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <CalculatorWrapper>\r\n          <div className=\"space-y-6\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n              Understanding UK Income Tax\r\n            </h2>\r\n            <p className=\"text-gray-700 dark:text-gray-300\">\r\n              Income Tax is the UK government's primary source of revenue, levied on most forms of\r\n              income including employment earnings, profits from self-employment, rental income, and\r\n              some state benefits. This calculator is designed to provide a clear and focused\r\n              breakdown of your potential Income Tax liability based on your annual gross income. It\r\n              isolates this single, significant deduction to help you understand exactly how it's\r\n              calculated using the UK's progressive tax band system. By entering your income, you\r\n              can see how it is divided across the different tax bandsÔÇöfrom the tax-free Personal\r\n              Allowance to the Basic, Higher, and Additional rates.\r\n            </p>\r\n\r\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n              Why Use a Dedicated Income Tax Calculator?\r\n            </h3>\r\n            <ul className=\"list-disc list-inside space-y-2 text-gray-700 dark:text-gray-300\">\r\n              <li>\r\n                <b>Clarity and Focus:</b> Unlike a full salary calculator, this tool strips away\r\n                other deductions like National Insurance, focusing solely on the Income Tax\r\n                calculation.\r\n              </li>\r\n              <li>\r\n                <b>Educational Tool:</b> It's perfect for students, those new to the UK tax system,\r\n                or anyone wanting to understand the mechanics of the tax bands.\r\n              </li>\r\n              <li>\r\n                <b>Financial Scenarios:</b> Quickly model how a change in income (like a bonus or a\r\n                new job) will affect your tax liability without the noise of other deductions.\r\n              </li>\r\n            </ul>\r\n\r\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n              Example Use Case\r\n            </h3>\r\n            <p className=\"text-gray-700 dark:text-gray-300\">\r\n              An individual earns ┬ú60,000 annually. They use this calculator to understand their\r\n              tax. The tool shows that the first ┬ú12,570 is tax-free (Personal Allowance). The next\r\n              portion of their income, from ┬ú12,571 to ┬ú50,270, is taxed at the Basic Rate of 20%.\r\n              The remaining income, from ┬ú50,271 to ┬ú60,000, is taxed at the Higher Rate of 40%. The\r\n              calculator clearly displays the tax paid within each band and provides a total tax\r\n              figure, giving the user a precise understanding of where their money goes.\r\n            </p>\r\n          </div>\r\n        </CalculatorWrapper>\r\n\r\n        <div id=\"faq-section\" className=\"bg-gray-50 dark:bg-gray-800/50 py-12 non-printable\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={incomeTaxFAQs} />\r\n          </div>\r\n        </div>\r\n\r\n        <RelatedCalculators\r\n          calculators={[\r\n            {\r\n              name: 'Salary Calculator',\r\n              url: createPageUrl('SalaryCalculator'),\r\n              description: 'Get a full breakdown of your take-home pay, including NI.',\r\n            },\r\n            {\r\n              name: 'Capital Gains Tax Calculator',\r\n              url: createPageUrl('CapitalGainsTaxCalculator'),\r\n              description: 'Calculate tax on profits from selling assets.',\r\n            },\r\n            {\r\n              name: 'Dividend Tax Calculator',\r\n              url: createPageUrl('DividendTaxCalculator'),\r\n              description: 'Understand tax on income from company shares.',\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\InflationCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 98,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, TrendingUp } from 'lucide-react';\r\nimport CalculatorWrapper from '../components/calculators/CalculatorWrapper';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\nimport AnimatedNumber from '../components/general/AnimatedNumber';\r\nimport Breadcrumbs from '../components/general/Breadcrumbs';\r\nimport { createPageUrl } from '@/utils';\r\n\r\n// Simplified historical inflation data (CPI index, rebased to 2015=100)\r\n// In a real app, this would come from an API or a more extensive dataset.\r\nconst historicalCPI = {\r\n  1990: 55.6,\r\n  2000: 72.0,\r\n  2010: 91.7,\r\n  2015: 100.0,\r\n  2020: 108.7,\r\n  2024: 133.2,\r\n};\r\n\r\nconst inflationFAQs = [\r\n  {\r\n    question: 'What is inflation and how is it measured in the UK?',\r\n    answer:\r\n      \"Inflation is the rate at which the general level of prices for goods and services is rising, and subsequently, purchasing power is falling. In the UK, the most common measure is the Consumer Prices Index (CPI), which tracks the price of a 'basket' of common goods and services over time.\",\r\n  },\r\n  {\r\n    question: 'Why is some inflation considered good for the economy?',\r\n    answer:\r\n      'A small, stable amount of inflation (typically around 2%) is often seen as a sign of a healthy economy. It can encourage people and businesses to spend and invest rather than hoard cash (which loses value), and it makes it easier for wages and prices to adjust.',\r\n  },\r\n  {\r\n    question: 'How can I protect my savings from inflation?',\r\n    answer:\r\n      'To prevent your savings from losing value, you need to earn a rate of return that is higher than the rate of inflation. This can involve investing in assets like stocks and shares, putting money into high-interest savings accounts, or using tax-efficient wrappers like ISAs and pensions.',\r\n  },\r\n  {\r\n    question: 'Does this calculator use official data?',\r\n    answer:\r\n      'This calculator uses a simplified model based on historical CPI data for demonstration purposes. While it provides a good estimate of the effects of inflation, for precise financial decisions, you should refer to official sources like the Office for National Statistics (ONS).',\r\n  },\r\n];\r\n\r\nexport default function InflationCalculator() {\r\n  const [amount, setAmount] = useState('');\r\n  const [startYear, setStartYear] = useState('2000');\r\n  const [endYear, setEndYear] = useState('2024');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const breadcrumbPath = [\r\n    { name: 'Home', url: createPageUrl('Home') },\r\n    {\r\n      name: 'Personal Finance & Budgeting',\r\n      url: `${createPageUrl('Home')}#personal-finance-budgeting`,\r\n    },\r\n    { name: 'Inflation Calculator' },\r\n  ];\r\n\r\n  const handleCalculate = () => {\r\n    const startAmount = Number(amount) || 0;\r\n    const startIndex = historicalCPI[startYear];\r\n    const endIndex = historicalCPI[endYear];\r\n\r\n    if (startAmount === 0 || !startIndex || !endIndex) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const inflationMultiplier = endIndex / startIndex;\r\n    const futureValue = startAmount * inflationMultiplier;\r\n    const changeInValue = futureValue - startAmount;\r\n    const percentageChange = ((futureValue - startAmount) / startAmount) * 100;\r\n\r\n    const newResults = {\r\n      futureValue,\r\n      startAmount,\r\n      startYear,\r\n      endYear,\r\n      changeInValue,\r\n      percentageChange,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n  }, [amount, startYear, endYear]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <Breadcrumbs path={breadcrumbPath} />\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK Inflation Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Discover the changing value of the pound over time. See how inflation affects\r\n              purchasing power between different years.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card className=\"bg-white dark:bg-gray-800\">\r\n              <CardHeader>\r\n                <CardTitle>Calculate Value</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"amount\">Amount</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"amount\"\r\n                      type=\"number\"\r\n                      value={amount}\r\n                      onChange={(e) => setAmount(e.target.value)}\r\n                      className=\"pl-10 dark:bg-gray-700\"\r\n                      placeholder=\"e.g. 1000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"startYear\">Start Year</Label>\r\n                    <select\r\n                      id=\"startYear\"\r\n                      value={startYear}\r\n                      onChange={(e) => setStartYear(e.target.value)}\r\n                      className=\"w-full p-2 border rounded-md bg-white dark:bg-gray-700 dark:border-gray-600\"\r\n                    >\r\n                      {Object.keys(historicalCPI).map((year) => (\r\n                        <option key={year} value={year}>\r\n                          {year}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"endYear\">End Year</Label>\r\n                    <select\r\n                      id=\"endYear\"\r\n                      value={endYear}\r\n                      onChange={(e) => setEndYear(e.target.value)}\r\n                      className=\"w-full p-2 border rounded-md bg-white dark:bg-gray-700 dark:border-gray-600\"\r\n                    >\r\n                      {Object.keys(historicalCPI).map((year) => (\r\n                        <option key={year} value={year}>\r\n                          {year}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"space-y-6\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200\">Results</h2>\r\n                <Card className=\"bg-gradient-to-br from-teal-50 to-teal-100 dark:from-teal-900/50 dark:to-teal-800/50 border-teal-200 dark:border-teal-700\">\r\n                  <CardContent className=\"p-6\">\r\n                    <p className=\"text-center text-gray-700 dark:text-gray-300\">\r\n                      <span className=\"font-bold text-lg text-teal-800 dark:text-teal-200\">\r\n                        ┬ú{results.startAmount.toLocaleString()}\r\n                      </span>{' '}\r\n                      in {results.startYear} has the same buying power as...\r\n                    </p>\r\n                    <p className=\"text-center text-5xl font-bold text-teal-800 dark:text-teal-100 mt-2\">\r\n                      ┬ú<AnimatedNumber value={results.futureValue} />\r\n                    </p>\r\n                    <p className=\"text-center text-lg font-semibold text-teal-800 dark:text-teal-200 mt-2\">\r\n                      in {results.endYear}\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card className=\"bg-white dark:bg-gray-800\">\r\n                  <CardHeader>\r\n                    <CardTitle>Change in Value</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex justify-between text-lg\">\r\n                      <span className=\"font-medium text-gray-800 dark:text-gray-200\">\r\n                        Total Change:\r\n                      </span>\r\n                      <span\r\n                        className={`font-bold ${results.changeInValue >= 0 ? 'text-red-600 dark:text-red-400' : 'text-green-600 dark:text-green-400'}`}\r\n                      >\r\n                        ┬ú\r\n                        {results.changeInValue.toLocaleString(undefined, {\r\n                          minimumFractionDigits: 2,\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-lg\">\r\n                      <span className=\"font-medium text-gray-800 dark:text-gray-200\">\r\n                        Percentage Change:\r\n                      </span>\r\n                      <span\r\n                        className={`font-bold ${results.percentageChange >= 0 ? 'text-red-600 dark:text-red-400' : 'text-green-600 dark:text-green-400'}`}\r\n                      >\r\n                        {results.percentageChange.toFixed(2)}%\r\n                      </span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px] bg-white dark:bg-gray-800\">\r\n                <div className=\"text-center text-gray-500 dark:text-gray-400\">\r\n                  <TrendingUp className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">See the power of inflation</h3>\r\n                  <p>Enter an amount and years to see how its value has changed.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <CalculatorWrapper>\r\n        <div className=\"space-y-6\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n            What This Calculator Shows\r\n          </h2>\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            The Inflation Calculator is a tool that demonstrates the concept of \"purchasing power.\"\r\n            It shows how the value of money erodes over time due to inflation. By inputting an\r\n            amount and selecting two different years, you can see how much money you would need in\r\n            the second year to buy the same goods and services you could afford in the first year.\r\n            It's a powerful way to visualize the real-world impact of economic changes on your\r\n            personal finances.\r\n          </p>\r\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n            When to Use This Calculator\r\n          </h3>\r\n          <ul className=\"list-disc list-inside space-y-2 text-gray-700 dark:text-gray-300\">\r\n            <li>\r\n              <b>Understanding History:</b> To find out what a historical amount of money (like an\r\n              inheritance or a salary from decades ago) would be worth today.\r\n            </li>\r\n            <li>\r\n              <b>Financial Planning:</b> To understand how the value of your savings might decrease\r\n              over time if they are not growing at a rate higher than inflation.\r\n            </li>\r\n            <li>\r\n              <b>Setting Savings Goals:</b> When planning for a long-term goal like retirement, it\r\n              helps to think about the future value of money you'll need, not just the nominal\r\n              amount.\r\n            </li>\r\n            <li>\r\n              <b>General Knowledge:</b> Simply out of curiosity to see how much prices have changed\r\n              over your lifetime.\r\n            </li>\r\n          </ul>\r\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n            Example Use Case\r\n          </h3>\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            Suppose your parents bought their first house in 1990 for ┬ú50,000. You might wonder what\r\n            that amount is equivalent to today. You can enter ┬ú50,000 as the amount, set the start\r\n            year to 1990, and the end year to 2024. The calculator would show you that, due to\r\n            cumulative inflation over those 34 years, you would need over ┬ú119,000 in 2024 to have\r\n            the same purchasing power as ┬ú50,000 did back in 1990. This illustrates just how\r\n            significantly inflation can impact value over the long term.\r\n          </p>\r\n        </div>\r\n      </CalculatorWrapper>\r\n\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 py-12 non-printable\">\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <FAQSection faqs={inflationFAQs} />\r\n        </div>\r\n      </div>\r\n\r\n      <RelatedCalculators\r\n        calculators={[\r\n          {\r\n            name: 'Compound Interest Calculator',\r\n            url: '/CompoundInterestCalculator',\r\n            description: 'See how your savings can grow to beat inflation.',\r\n          },\r\n          {\r\n            name: 'Savings Goal Calculator',\r\n            url: '/SavingsGoalCalculator',\r\n            description: 'Plan for future goals with inflation in mind.',\r\n          },\r\n          {\r\n            name: 'Pension Calculator',\r\n            url: '/PensionCalculator',\r\n            description: \"Project your retirement pot's future value.\",\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\InheritanceTaxCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 59,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useCallback, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { PoundSterling, Shield } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst iFAQs = [\r\n  {\r\n    question: 'What is Inheritance Tax (IHT)?',\r\n    answer:\r\n      \"IHT is a tax on the estate (the property, money, and possessions) of someone who has died. It's also sometimes payable on gifts made during a person's lifetime.\",\r\n  },\r\n  {\r\n    question: 'What is the Nil-Rate Band (NRB)?',\r\n    answer:\r\n      'Most estates can pass on up to ┬ú325,000 without any IHT being due. This is the Nil-Rate Band.',\r\n  },\r\n  {\r\n    question: 'What is the Residence Nil-Rate Band (RNRB)?',\r\n    answer:\r\n      'The RNRB is an additional threshold of up to ┬ú175,000 if you give away your main residence to your children or other direct descendants.',\r\n  },\r\n  {\r\n    question: 'A Note on Trustworthiness',\r\n    answer:\r\n      'This is a simplified calculator based on 2024/25 tax rules. IHT is extremely complex, involving gifts, trusts, and exemptions not covered here. This tool is for educational purposes only. Always consult a qualified legal or financial advisor for estate planning.',\r\n  },\r\n];\r\n\r\nexport default function InheritanceTaxCalculator() {\r\n  const [estateValue, setEstateValue] = useState('750000');\r\n  const [passToDirectDescendant, setPassToDirectDescendant] = useState(true);\r\n  const [results, setResults] = useState(null);\r\n\r\n  const NRB = 325000;\r\n  const RNRB = 175000;\r\n  const IHT_RATE = 0.4;\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const value = Number(estateValue) || 0;\r\n    let totalThreshold = NRB;\r\n    if (passToDirectDescendant) {\r\n      totalThreshold += RNRB;\r\n    }\r\n\r\n    const taxableAmount = Math.max(0, value - totalThreshold);\r\n    const ihtPayable = taxableAmount * IHT_RATE;\r\n\r\n    setResults({ ihtPayable, taxableAmount, totalThreshold });\r\n  }, [estateValue, passToDirectDescendant]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\r\n          <h1 className=\"text-3xl font-bold text-center\">Inheritance Tax Calculator</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-4xl mx-auto p-4 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div>\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Estate Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label>Total Estate Value (┬ú)</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={estateValue}\r\n                    onChange={(e) => setEstateValue(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <Label>Passing main home to direct descendants?</Label>\r\n                  <Switch\r\n                    checked={passToDirectDescendant}\r\n                    onCheckedChange={setPassToDirectDescendant}\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          <div>\r\n            {results && (\r\n              <Card className=\"bg-red-50 border-red-200\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-red-900\">Estimated IHT Payable</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <p className=\"text-5xl font-bold text-red-900\">\r\n                    ┬ú{results.ihtPayable.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                  </p>\r\n                  <div className=\"mt-4 text-sm space-y-2\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Total tax-free threshold:</span>{' '}\r\n                      <strong>┬ú{results.totalThreshold.toLocaleString()}</strong>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Taxable estate value:</span>{' '}\r\n                      <strong>┬ú{results.taxableAmount.toLocaleString()}</strong>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-12\">\r\n          <FAQSection faqs={iFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\InvestmentCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 108,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, TrendingUp, Percent, Calendar } from 'lucide-react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst investmentFAQs = [\r\n  {\r\n    question: 'What is compound growth?',\r\n    answer:\r\n      \"Compound growth is the 'snowball effect' where your investment earnings start to generate their own earnings. Over time, this can lead to exponential growth.\",\r\n  },\r\n  {\r\n    question: 'What is a realistic annual return rate?',\r\n    answer:\r\n      'This varies greatly depending on the investment type. The S&P 500 has historically averaged around 10% annually, but past performance is not indicative of future results. A diversified portfolio might aim for 5-8%.',\r\n  },\r\n  {\r\n    question: 'How do fees impact my investment returns?',\r\n    answer:\r\n      'Fees can significantly erode your returns over time. A 1% annual fee on a ┬ú100,000 portfolio costs you ┬ú1,000 per year, which could have been compounding and growing. Always look for low-cost investment options where possible.',\r\n  },\r\n];\r\n\r\nconst generateChartData = (initial, monthly, rate, term) => {\r\n  const data = [];\r\n  const monthlyRate = rate / 12;\r\n\r\n  for (let year = 0; year <= term; year++) {\r\n    // Calculate total value at the end of 'year'\r\n    // This calculates it from scratch for each year, not cumulatively year over year\r\n    const totalMonths = year * 12;\r\n    const futureValueInitial = initial * Math.pow(1 + monthlyRate, totalMonths);\r\n    // Handle monthly contribution for the given number of months\r\n    const futureValueMonthly =\r\n      monthly * ((Math.pow(1 + monthlyRate, totalMonths) - 1) / monthlyRate);\r\n    const totalValue = futureValueInitial + futureValueMonthly;\r\n\r\n    data.push({\r\n      year: year,\r\n      'Total Investment': totalValue.toFixed(0),\r\n      Principal: (initial + monthly * totalMonths).toFixed(0),\r\n    });\r\n  }\r\n  return data;\r\n};\r\n\r\nexport default function InvestmentCalculator() {\r\n  const [initialInvestment, setInitialInvestment] = useState('10000');\r\n  const [monthlyContribution, setMonthlyContribution] = useState('250');\r\n  const [years, setYears] = useState('20');\r\n  const [annualReturn, setAnnualReturn] = useState('7');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const initial = Number(initialInvestment) || 0;\r\n    const monthly = Number(monthlyContribution) || 0;\r\n    const term = Number(years) || 0;\r\n    const rate = Number(annualReturn) / 100;\r\n\r\n    // Critical: Check for rate <= 0 to prevent division by zero in monthlyRate calculations\r\n    if (term <= 0 || rate <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const monthlyRate = rate / 12;\r\n    const totalMonths = term * 12;\r\n\r\n    const futureValueInitial = initial * Math.pow(1 + monthlyRate, totalMonths);\r\n    const futureValueMonthly =\r\n      monthly * ((Math.pow(1 + monthlyRate, totalMonths) - 1) / monthlyRate);\r\n    const totalValue = futureValueInitial + futureValueMonthly;\r\n\r\n    const totalPrincipal = initial + monthly * totalMonths;\r\n    const totalInterest = totalValue - totalPrincipal;\r\n\r\n    const chartData = generateChartData(initial, monthly, rate, term);\r\n\r\n    setResults({\r\n      totalValue,\r\n      totalPrincipal,\r\n      totalInterest,\r\n      chartData,\r\n    });\r\n    setHasCalculated(true);\r\n  }, [initialInvestment, monthlyContribution, years, annualReturn]); // Dependencies for useCallback\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]); // useEffect now depends on the memoized handleCalculate\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Investment &amp; Savings Growth Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Visualise the power of compound growth. Project the future value of your investments\r\n              with regular contributions.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid lg:grid-cols-5 gap-8\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Investment Parameters</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div>\r\n                  <Label>Initial Investment</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4\" />\r\n                    <Input\r\n                      value={initialInvestment}\r\n                      onChange={(e) => setInitialInvestment(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      type=\"number\"\r\n                      inputMode=\"numeric\"\r\n                      pattern=\"[0-9]*\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Label>Monthly Contribution</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4\" />\r\n                    <Input\r\n                      value={monthlyContribution}\r\n                      onChange={(e) => setMonthlyContribution(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      type=\"number\"\r\n                      inputMode=\"numeric\"\r\n                      pattern=\"[0-9]*\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Label>Time in Years</Label>\r\n                  <Input\r\n                    value={years}\r\n                    onChange={(e) => setYears(e.target.value)}\r\n                    type=\"number\"\r\n                    inputMode=\"numeric\"\r\n                    pattern=\"[0-9]*\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label>Estimated Annual Return (%)</Label>\r\n                  <Input\r\n                    value={annualReturn}\r\n                    onChange={(e) => setAnnualReturn(e.target.value)}\r\n                    type=\"number\"\r\n                    inputMode=\"numeric\"\r\n                    pattern=\"[0-9]*\"\r\n                    step=\"0.1\"\r\n                  />\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Growth\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          <div className=\"lg:col-span-3 space-y-6\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <Card className=\"text-center bg-green-50 border-green-200\">\r\n                  <CardHeader>\r\n                    <CardTitle>Projected Future Value</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <p className=\"text-5xl font-bold text-green-800\">\r\n                      ┬ú{results.totalValue.toLocaleString(undefined, { maximumFractionDigits: 0 })}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-600\">after {years} years</p>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <div className=\"grid md:grid-cols-2 gap-6\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Contributions</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-2xl font-semibold\">\r\n                        ┬ú\r\n                        {results.totalPrincipal.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 0,\r\n                        })}\r\n                      </p>\r\n                      <p className=\"text-sm text-gray-500\">Total amount you invested.</p>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Total Interest Earned</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-2xl font-semibold\">\r\n                        ┬ú\r\n                        {results.totalInterest.toLocaleString(undefined, {\r\n                          maximumFractionDigits: 0,\r\n                        })}\r\n                      </p>\r\n                      <p className=\"text-sm text-gray-500\">The power of compounding.</p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Growth Over Time</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                      <LineChart data={results.chartData}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis\r\n                          dataKey=\"year\"\r\n                          label={{ value: 'Years', position: 'insideBottom', offset: -5 }}\r\n                        />\r\n                        <YAxis tickFormatter={(value) => `┬ú${Number(value) / 1000}k`} />\r\n                        <Tooltip formatter={(value) => `┬ú${Number(value).toLocaleString()}`} />\r\n                        <Legend />\r\n                        <Line\r\n                          type=\"monotone\"\r\n                          dataKey=\"Total Investment\"\r\n                          stroke=\"#16a34a\"\r\n                          strokeWidth={2}\r\n                          dot={false}\r\n                        />\r\n                        <Line\r\n                          type=\"monotone\"\r\n                          dataKey=\"Principal\"\r\n                          stroke=\"#6b7280\"\r\n                          strokeWidth={2}\r\n                          dot={false}\r\n                        />\r\n                      </LineChart>\r\n                    </ResponsiveContainer>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[400px] bg-gray-50\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <TrendingUp className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Project your investment growth</h3>\r\n                  <p>Fill in your details to see the results.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={investmentFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\JobSalaries.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 20,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { jobTitles, createSlug } from '../components/data/seo-data';\r\nimport { Briefcase, Search, PoundSterling } from 'lucide-react';\r\n\r\nexport default function JobSalaries() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const categories = [...new Set(jobTitles.map((job) => job.category))];\r\n\r\n  const filteredJobs = jobTitles.filter((job) =>\r\n    job.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK Job Salary Explorer\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Discover average salaries for hundreds of jobs across the UK. Find out what you could\r\n              be earning.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"mb-8\">\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Search for a job title...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-10 text-lg\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {searchTerm ? (\r\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {filteredJobs.length > 0 ? (\r\n              filteredJobs.map((job) => (\r\n                <Link\r\n                  to={createPageUrl(`JobSalaryPage?slug=${createSlug(job.title)}`)}\r\n                  key={job.title}\r\n                  className=\"group\"\r\n                >\r\n                  <Card className=\"hover:shadow-lg hover:border-blue-300 transition-all\">\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2\">\r\n                        <Briefcase className=\"w-5 h-5 text-blue-600\" />\r\n                        <span>{job.title}</span>\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-sm text-gray-600 mb-2\">{job.description}</p>\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <Badge variant=\"secondary\">{job.category}</Badge>\r\n                        <span className=\"font-semibold text-lg\">\r\n                          ~┬ú{job.averageSalary.toLocaleString()}/yr\r\n                        </span>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Link>\r\n              ))\r\n            ) : (\r\n              <p className=\"text-center md:col-span-3 text-gray-500\">\r\n                No job titles found for \"{searchTerm}\".\r\n              </p>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          categories.map((category) => (\r\n            <div key={category} className=\"mb-10\">\r\n              <h2 className=\"text-2xl font-bold border-b-2 border-blue-500 pb-2 mb-4\">\r\n                {category}\r\n              </h2>\r\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                {jobTitles\r\n                  .filter((job) => job.category === category)\r\n                  .map((job) => (\r\n                    <Link\r\n                      to={createPageUrl(`JobSalaryPage?slug=${createSlug(job.title)}`)}\r\n                      key={job.title}\r\n                      className=\"group\"\r\n                    >\r\n                      <div className=\"p-4 bg-gray-50 rounded-lg hover:bg-blue-100 transition-colors\">\r\n                        <p className=\"font-semibold text-gray-800 group-hover:text-blue-700\">\r\n                          {job.title}\r\n                        </p>\r\n                        <p className=\"text-sm text-gray-600\">\r\n                          ~┬ú{job.averageSalary.toLocaleString()}\r\n                        </p>\r\n                      </div>\r\n                    </Link>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\JobSalaryPage.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 39,
        "column": 7,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useMemo } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport { jobTitles, createSlug } from '../components/data/seo-data';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Briefcase, MapPin, ArrowLeft } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst jobSalaryFAQs = [\r\n  {\r\n    question: 'Where does this salary data come from?',\r\n    answer:\r\n      'The salary figures on this page are estimates based on an aggregation of publicly available data, including national statistics, industry reports, and salary data from job boards. They are intended to be used as a guideline and may not reflect the exact salary for any specific role.',\r\n  },\r\n  {\r\n    question: \"Is this the 'take-home' pay?\",\r\n    answer:\r\n      'No, the figures shown are for gross annual salary (before tax, National Insurance, pension, or other deductions). To find out what your take-home pay would be, you can use our UK Salary Calculator.',\r\n  },\r\n  {\r\n    question: 'Why do salaries for the same job title vary?',\r\n    answer:\r\n      \"Salaries can vary significantly based on a number of factors, including geographic location (e.g., London vs. other regions), the employee's years of experience, the size and type of the company, and the specific skills or specializations required for the role.\",\r\n  },\r\n];\r\n\r\nexport default function JobSalaryPage() {\r\n  const location = useLocation();\r\n  const job = useMemo(() => {\r\n    const urlParams = new URLSearchParams(location.search);\r\n    const slug = urlParams.get('slug');\r\n    return jobTitles.find((j) => createSlug(j.title) === slug);\r\n  }, [location.search]);\r\n\r\n  if (!job) {\r\n    return (\r\n      <div className=\"max-w-4xl mx-auto px-4 py-8 text-center\">\r\n        <h1 className=\"text-2xl font-bold\">Job Not Found</h1>\r\n        <p className=\"text-gray-600\">\r\n          The job salary information you're looking for could not be found.\r\n        </p>\r\n        <Link\r\n          to={createPageUrl('JobSalaries')}\r\n          className=\"mt-4 inline-block text-blue-600 hover:underline\"\r\n        >\r\n          &larr; Back to Job Salaries\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const relatedJobs = jobTitles\r\n    .filter((j) => j.category === job.category && j.title !== job.title)\r\n    .slice(0, 5);\r\n\r\n  return (\r\n    <div className=\"bg-gray-50\">\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"mb-6\">\r\n          <Link\r\n            to={createPageUrl('JobSalaries')}\r\n            className=\"text-sm text-gray-600 hover:text-gray-900 inline-flex items-center gap-2\"\r\n          >\r\n            <ArrowLeft className=\"w-4 h-4\" />\r\n            Back to All Job Salaries\r\n          </Link>\r\n        </div>\r\n\r\n        <Card className=\"bg-white shadow-lg\">\r\n          <CardHeader>\r\n            <Badge variant=\"secondary\" className=\"w-fit mb-2\">\r\n              {job.category}\r\n            </Badge>\r\n            <CardTitle className=\"text-3xl font-extrabold text-gray-900\">\r\n              {job.title} Salary in the UK\r\n            </CardTitle>\r\n            <p className=\"text-lg text-gray-600\">{job.description}</p>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-8\">\r\n            <div className=\"text-center bg-blue-50 p-6 rounded-lg\">\r\n              <p className=\"text-lg text-blue-800\">Average Annual Salary</p>\r\n              <p className=\"text-5xl font-bold text-blue-900 flex items-center justify-center\">\r\n                <PoundSterling className=\"w-10 h-10 mr-2\" />\r\n                {job.averageSalary.toLocaleString()}\r\n              </p>\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"text-xl font-bold mb-4\">Salary Overview</h3>\r\n              <p className=\"text-gray-700\">\r\n                The average salary for a {job.title} in the United Kingdom is estimated to be around\r\n                **┬ú{job.averageSalary.toLocaleString()} per year**. This figure can vary based on\r\n                factors such as experience, location, company size, and specific skill set. For\r\n                entry-level positions, the salary might start lower, while experienced professionals\r\n                in high-demand areas like London can command significantly higher wages.\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"grid md:grid-cols-2 gap-6\">\r\n              <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n                <h4 className=\"font-semibold text-gray-800\">Key Factors Influencing Salary:</h4>\r\n                <ul className=\"list-disc list-inside mt-2 text-gray-600 space-y-1\">\r\n                  <li>Experience Level (Junior, Mid, Senior)</li>\r\n                  <li>Geographic Location (e.g., London vs. North England)</li>\r\n                  <li>Company Size and Industry</li>\r\n                  <li>Specialized Skills and Certifications</li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n                <h4 className=\"font-semibold text-gray-800\">Career Path:</h4>\r\n                <p className=\"text-gray-600 mt-2\">\r\n                  A career as a {job.title} often involves continuous learning and specialization.\r\n                  Advancing in this role could lead to positions like Senior {job.title}, Lead{' '}\r\n                  {job.title}, or management roles within the {job.category} field.\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <h3 className=\"text-xl font-bold mb-4\">Related Job Salaries</h3>\r\n              <div className=\"space-y-2\">\r\n                {relatedJobs.map((relatedJob) => (\r\n                  <Link\r\n                    to={createPageUrl(`JobSalaryPage?slug=${createSlug(relatedJob.title)}`)}\r\n                    key={relatedJob.title}\r\n                    className=\"block p-3 bg-white border rounded-lg hover:bg-gray-100 transition-colors\"\r\n                  >\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"font-medium text-blue-700\">{relatedJob.title}</span>\r\n                      <span className=\"font-semibold text-gray-800\">\r\n                        ~┬ú{relatedJob.averageSalary.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h3 className=\"text-xl font-bold mb-4\">Find Your Take-Home Pay</h3>\r\n              <Card className=\"bg-green-50 border-green-200\">\r\n                <CardContent className=\"p-6\">\r\n                  <p className=\"text-green-800 mb-4\">\r\n                    Wondering what ┬ú{job.averageSalary.toLocaleString()} looks like after tax? Use\r\n                    our comprehensive UK Salary Calculator to find out your take-home pay, including\r\n                    deductions for National Insurance and student loans.\r\n                  </p>\r\n                  <Link to={createPageUrl(`SalaryCalculator?salary=${job.averageSalary}`)}>\r\n                    <Button className=\"bg-green-600 hover:bg-green-700\">\r\n                      Calculate Take-Home Pay\r\n                    </Button>\r\n                  </Link>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            <div className=\"pt-8 border-t\">\r\n              <FAQSection faqs={jobSalaryFAQs} title=\"About This Salary Data\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\Layout.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 812,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport { Menu, ChevronDown, ChevronRight } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Sheet, SheetContent, SheetHeader, SheetTrigger, SheetClose } from '@/components/ui/sheet';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible';\r\nimport ScrollToTop from '../components/general/ScrollToTop';\r\nimport CookieConsentBanner from '../components/general/CookieConsentBanner';\r\nimport { calculatorCategories } from '../components/data/calculatorConfig';\r\nimport CalculatorIndex from '../components/general/CalculatorIndex';\r\n\r\n// Define a mapping for page names to titles and descriptions for SEO\r\n// This object will be used to programmatically set SEO meta tags for each page.\r\n// In a larger application, this data might come from a CMS or a more complex routing configuration.\r\nconst pageSeo = {\r\n  Home: {\r\n    title: 'UK Salary, Tax & Mortgage Calculators | Calculate My Money',\r\n    description:\r\n      'Free UK calculators for take-home pay, tax, NI, mortgages, savings and ROI. Fast, accurate tools for 2025/26.',\r\n  },\r\n  Resources: {\r\n    title: 'Financial Resources & Guides | Calculate My Money',\r\n    description:\r\n      'Explore our financial resources and guides on Calculate My Money. Learn about tax, savings, investments, and personal finance in the UK.',\r\n  },\r\n  Blog: {\r\n    title: 'Financial Blog | Insights & Articles - Calculate My Money',\r\n    description:\r\n      'Read the latest articles and insights on UK personal finance, tax, budgeting, and investment strategies from the Calculate My Money blog.',\r\n  },\r\n  BlogSmartMoneySavingTips: {\r\n    title: 'Smart Money-Saving Tips for UK Families | Calculate My Money',\r\n    description:\r\n      'Discover practical tips for UK families to save money on groceries, energy bills, and everyday expenses. A complete guide to cut costs and budget effectively.',\r\n  },\r\n  BlogDebtRepaymentStrategies: {\r\n    title: 'Debt Snowball vs. Avalanche in the UK | Calculate My Money',\r\n    description:\r\n      'Compare the Debt Snowball and Debt Avalanche methods. Find the best strategy to pay off your debts in the UK, from credit cards to loans.',\r\n  },\r\n  BlogFinancialPsychology: {\r\n    title: 'Your Relationship with Money: A Guide to Financial Psychology',\r\n    description:\r\n      'Understand the psychology behind your spending and saving habits. Learn how your money mindset impacts your financial health and future prosperity in the UK.',\r\n  },\r\n  Contact: {\r\n    title: 'Contact Us | Calculate My Money',\r\n    description:\r\n      \"Get in touch with Calculate My Money for support, feedback, or business inquiries. We're here to help with your financial calculator needs.\",\r\n  },\r\n  PrivacyPolicy: {\r\n    title: 'Privacy Policy | Calculate My Money',\r\n    description:\r\n      'Understand our Privacy Policy at Calculate My Money. Learn how we collect, use, and protect your personal data.',\r\n  },\r\n  CookiePolicy: {\r\n    title: 'Cookie Policy | Calculate My Money',\r\n    description:\r\n      'Review our Cookie Policy at Calculate My Money to understand how we use cookies on our website.',\r\n  },\r\n  TermsOfService: {\r\n    title: 'Terms of Service | Calculate My Money',\r\n    description:\r\n      'Read the Terms of Service for Calculate My Money. By using our website, you agree to these terms.',\r\n  },\r\n  Disclaimer: {\r\n    title: 'Disclaimer | Calculate My Money',\r\n    description:\r\n      'Important disclaimer regarding the use of financial calculators and information provided on Calculate My Money.',\r\n  },\r\n  Sitemap: {\r\n    title: 'Sitemap | Calculate My Money',\r\n    description:\r\n      'Browse the sitemap for Calculate My Money to find all available financial calculators and resources.',\r\n  },\r\n  SalaryCalculatorUK: {\r\n    title: 'UK Salary Calculator (Take-Home Pay 2025/26)',\r\n    description:\r\n      'Calculate your UK take-home pay after tax and NI for 2025/26. Includes paycheck, pro-rata and gross-to-net tools.',\r\n  },\r\n  SalaryCalculatorTakeHomePay: {\r\n    title: 'Take-Home Pay Calculator UK (2025/26)',\r\n    description: 'Estimate UK take-home pay after tax, NI, pension & student loans for 2025/26.',\r\n  },\r\n  SalaryCalculatorPaycheck: {\r\n    title: 'Paycheck Calculator UK (After Tax & NI)',\r\n    description:\r\n      'Work out your UK paycheck after tax and NI. Supports weekly, fortnightly and monthly pay.',\r\n  },\r\n  GrossToNetCalculator: {\r\n    title: 'Gross to Net Income Calculator UK',\r\n    description: 'Convert gross salary to net take-home pay with UK tax and NI for 2025/26.',\r\n  },\r\n  ProRataSalaryCalculator: {\r\n    title: 'Pro-Rata Salary Calculator UK',\r\n    description: 'Convert annual salary to pro-rata pay by hours or days worked in the UK.',\r\n  },\r\n  MortgageCalculator: {\r\n    title: 'UK Mortgage Calculator | Repayments & Affordability - Calculate My Money',\r\n    description:\r\n      'Estimate your UK mortgage repayments and check affordability with our free mortgage calculator. See monthly costs, interest, and the full amortization schedule.',\r\n  },\r\n  BudgetCalculator: {\r\n    title: 'Budget Planner UK | Free Online Budgeting Tool - Calculate My Money',\r\n    description:\r\n      'Create a personal budget with our free UK budget planner. Track income and expenses to manage your finances effectively.',\r\n  },\r\n  CompoundInterestCalculator: {\r\n    title: 'Compound Interest Calculator UK | Grow Your Savings - Calculate My Money',\r\n    description:\r\n      'See how your savings can grow with our UK compound interest calculator. Plan for future investments and financial goals.',\r\n  },\r\n  PensionCalculator: {\r\n    title: 'UK Pension Calculator | Plan Your Retirement - Calculate My Money',\r\n    description:\r\n      'Estimate your future pension income with our UK pension calculator. Plan for a secure retirement.',\r\n  },\r\n  NationalInsuranceCalculator: {\r\n    title: 'UK National Insurance Calculator 2025/26 | Calculate Your NI',\r\n    description:\r\n      \"Calculate your UK National Insurance contributions for the 2025/26 tax year. Our free NI calculator shows you exactly what you'll pay based on your salary.\",\r\n  },\r\n  MaternityPayCalculator: {\r\n    title: 'Statutory Maternity Pay Calculator UK 2025 | SMP Estimator',\r\n    description:\r\n      \"Estimate your Statutory Maternity Pay (SMP) with our free UK calculator. See how much you'll receive for the 39 weeks of your maternity leave.\",\r\n  },\r\n  InflationCalculator: {\r\n    title: 'UK Inflation Calculator | Calculate the Changing Value of Money',\r\n    description:\r\n      'See how the value of the pound has changed over time with our free UK inflation calculator. Compare the purchasing power of money between any two years.',\r\n  },\r\n  IncomeTaxCalculator: {\r\n    title: 'UK Income Tax Calculator 2025/26 | Calculate Your Tax Bill - Calculate My Money',\r\n    description:\r\n      'Calculate your income tax for 2025/26 with our free UK tax calculator. Covers tax bands for England, Scotland, Wales & NI. Find out your true tax liability.',\r\n  },\r\n  SalaryIncreaseCalculator: {\r\n    title: 'Salary Increase Calculator UK | See Your New Pay - Calculate My Money',\r\n    description:\r\n      'Calculate how a percentage-based pay rise will affect your annual and monthly gross income with our simple salary increase calculator.',\r\n  },\r\n  SimpleInterestCalculator: {\r\n    title: 'Simple Interest Calculator UK | Calculate My Money',\r\n    description:\r\n      'Use our simple interest calculator to quickly determine the interest earned on a principal sum over a fixed period without compounding.',\r\n  },\r\n  EffectiveTaxRateCalculator: {\r\n    title: 'Effective Tax Rate Calculator UK | Your True Tax Rate - Calculate My Money',\r\n    description:\r\n      'Find your true, overall tax burden. Our calculator shows your effective tax rate after factoring in your personal allowance, income tax, and NI.',\r\n  },\r\n  HomeEquityLoanCalculator: {\r\n    title: 'Home Equity Loan Calculator UK | How Much Can You Borrow? - Calculate My Money',\r\n    description:\r\n      'Estimate how much equity you can borrow from your home with our free UK home equity loan calculator. Understand your LTV and available funds.',\r\n  },\r\n  AnnuityCalculator: {\r\n    title: 'Annuity Calculator UK | Estimate Your Retirement Income - Calculate My Money',\r\n    description:\r\n      'Use our annuity calculator to estimate the guaranteed income you could receive from your pension pot for a fixed term or for life.',\r\n  },\r\n  CommissionCalculator: {\r\n    title: 'Commission Calculator UK | Calculate Sales Earnings - Calculate My Money',\r\n    description:\r\n      'Easily calculate your gross commission earnings based on sales revenue and commission percentage with our free online tool.',\r\n  },\r\n  DividendTaxCalculator: {\r\n    title: 'UK Dividend Tax Calculator 2024/25 | Calculate My Money',\r\n    description:\r\n      'Estimate your tax liability on dividend income for the 2024/25 tax year. Accounts for allowances and income tax bands.',\r\n  },\r\n  FutureValueCalculator: {\r\n    title: \"Future Value Calculator | Project Your Investment's Worth - Calculate My Money\",\r\n    description:\r\n      'Calculate the future value of a single lump-sum investment based on a constant interest rate over a specific period.',\r\n  },\r\n  OvertimePayCalculator: {\r\n    title: 'Overtime Pay Calculator UK | Calculate Your Extra Earnings - Calculate My Money',\r\n    description:\r\n      'Work out your gross pay including overtime hours. Set your standard rate, overtime hours, and pay multiplier to see your total earnings.',\r\n  },\r\n  LoanComparisonCalculator: {\r\n    title: 'Loan Comparison Calculator UK | Find The Better Deal - Calculate My Money',\r\n    description:\r\n      'Compare two loan offers side-by-side to determine the true cost. Analyze monthly payments, total interest, and the total amount repaid.',\r\n  },\r\n  InheritanceTaxCalculator: {\r\n    title: 'Inheritance Tax Calculator UK | IHT Estimator - Calculate My Money',\r\n    description:\r\n      'Estimate your potential Inheritance Tax (IHT) liability with our easy-to-use UK calculator. Understand the nil-rate bands.',\r\n  },\r\n  CouncilTaxCalculator: {\r\n    title: 'Council Tax Calculator UK | Estimate Your Bill - Calculate My Money',\r\n    description:\r\n      \"Get an estimate of your annual Council Tax bill based on your property's band. Covers average rates for England.\",\r\n  },\r\n  MortgageRepaymentCalculator: {\r\n    title: 'Mortgage Repayment Schedule Calculator | Amortization - Calculate My Money',\r\n    description:\r\n      'Generate a full mortgage repayment (amortization) schedule. See the breakdown of principal and interest and interest for each payment.',\r\n  },\r\n  FirstTimeBuyerCalculator: {\r\n    title: 'First-Time Buyer Calculator UK | Affordability & Costs - Calculate My Money',\r\n    description:\r\n      'Assess your affordability as a first-time buyer. Calculate your loan-to-income ratio, deposit percentage, and estimated stamp duty.',\r\n  },\r\n  RentVsBuyCalculator: {\r\n    title: 'Rent vs Buy Calculator UK | Financial Comparison - Calculate My Money',\r\n    description:\r\n      'Compare the estimated monthly costs of renting a property versus buying a home to help you make an informed financial decision.',\r\n  },\r\n  HouseholdBillsSplitter: {\r\n    title: 'Household Bill Splitter Calculator | Calculate My Money',\r\n    description:\r\n      'Easily split rent, utilities, and other shared household expenses between multiple people with our simple bill splitting tool.',\r\n  },\r\n  CommuteCostCalculator: {\r\n    title: 'Commute Cost Calculator UK | Fuel & Transport Costs - Calculate My Money',\r\n    description:\r\n      'Calculate the weekly and monthly cost of your commute, factoring in fuel consumption, prices, and public transport expenses.',\r\n  },\r\n  CarCostCalculator: {\r\n    title: 'True Cost of Car Ownership Calculator UK | Calculate My Money',\r\n    description:\r\n      'Calculate the total cost of owning a car, including depreciation, fuel, insurance, tax, and maintenance over your ownership term.',\r\n  },\r\n  SubscriptionCostCalculator: {\r\n    title: 'Subscription Cost Calculator | Track Your Spending - Calculate My Money',\r\n    description:\r\n      'Track all your monthly and annual subscriptions in one place to see the total cost and find areas to save money.',\r\n  },\r\n  RuleOf72Calculator: {\r\n    title: 'Rule of 72 Calculator | Doubling Time for Investments - Calculate My Money',\r\n    description:\r\n      'Use the Rule of 72 to quickly estimate how many years it will take for your investment to double at a given rate of return.',\r\n  },\r\n  StudentLoanRepaymentCalculator: {\r\n    title: 'Student Loan Repayment Calculator UK (All Plans) | Calculate My Money',\r\n    description:\r\n      'Calculate your estimated monthly and annual student loan repayments based on your salary and specific UK loan plan (Plan 1, 2, 4, 5, or Postgraduate).',\r\n  },\r\n  WeddingBudgetCalculator: {\r\n    title: 'Wedding Budget Calculator & Tracker | Calculate My Money',\r\n    description:\r\n      'Plan and track your wedding expenses with our comprehensive budget calculator. Manage your spending across all categories.',\r\n  },\r\n  TravelBudgetCalculator: {\r\n    title: 'Travel & Holiday Budget Calculator | Calculate My Money',\r\n    description:\r\n      'Plan your next holiday with our easy-to-use travel budget calculator. Estimate costs for flights, accommodation, food, and activities.',\r\n  },\r\n  ChildcareCostCalculator: {\r\n    title: 'Childcare Cost Calculator UK | Nursery Fees Estimator - Calculate My Money',\r\n    description:\r\n      'Estimate the weekly, monthly, and annual cost of childcare based on daily rates and the number of days required.',\r\n  },\r\n  TipCalculator: {\r\n    title: 'UK Tip & Bill Splitting Calculator | Calculate My Money',\r\n    description:\r\n      'Easily calculate a tip and split the total bill between any number of people. Perfect for dining out in the UK.',\r\n  },\r\n  OvertimeRateCalculator: {\r\n    title: 'Overtime Rate Calculator UK | Calculate My Money',\r\n    description:\r\n      'Calculate your hourly pay rate for overtime work based on your standard rate and contract multiplier (e.g., time-and-a-half).',\r\n  },\r\n  CurrencyConverter: {\r\n    title: 'Currency Converter & Exchange Rate Hub | Calculate My Money',\r\n    description:\r\n      'Understand currency exchange and find links to reliable, live exchange rates for GBP, USD, EUR, and more. An educational tool for travellers and investors.',\r\n  },\r\n  UKGovernmentBudget: {\r\n    title: 'UK Government Budget Analysis | Calculate My Money',\r\n    description:\r\n      'Detailed analysis of the latest UK Government Budget announcements and their impact on your finances and calculators.',\r\n  },\r\n  UKFinancialStats: {\r\n    title: 'Live UK Financial Statistics Dashboard | BoE Rate, Inflation, House Prices',\r\n    description:\r\n      'Track key UK economic indicators in real-time. Our dashboard provides the latest Bank of England interest rate, inflation (CPI), house prices, and more.',\r\n  },\r\n  JobSalaries: {\r\n    title: 'Average Job Salaries UK | By Industry & Region - Calculate My Money',\r\n    description:\r\n      'Discover average job salaries across various industries and regions in the UK. Compare earnings and career prospects with our tools.',\r\n  },\r\n  CostOfLiving: {\r\n    title: 'Cost of Living UK | City & Regional Breakdown - Calculate My Money',\r\n    description:\r\n      'Explore the cost of living in various UK cities and regions. Understand typical expenses for housing, food, and transport with our data.',\r\n  },\r\n  Methodology: {\r\n    title: 'Methodology & Data Sources (HMRC, BoE) | Calculate My Money',\r\n    description:\r\n      'How we calculate UK salary, tax and mortgage results. Data sources: HMRC 2025/26, Bank of England.',\r\n  },\r\n  About: {\r\n    title: 'About Calculate My Money ÔÇô UK Financial Calculators',\r\n    description: 'Who we are and how we build accurate, transparent UK financial calculators.',\r\n  },\r\n  TaxCalculatorsUK: {\r\n    title: 'UK Tax Calculators Hub | Income Tax, NI, Net Income',\r\n    description:\r\n      'Explore UK tax tools for 2025/26: Income Tax after tax, Tax + NI, Net Income and Self Assessment guides.',\r\n  },\r\n  TaxAfterTaxCalculator: {\r\n    title: 'Tax After Tax Calculator UK | 2025/26',\r\n    description:\r\n      'Work out your UK tax after tax for the 2025/26 year. Clear band-by-band breakdowns.',\r\n  },\r\n  TaxAndNICalculator: {\r\n    title: 'Tax and NI Calculator UK | Combined Deductions 2025/26',\r\n    description: 'Calculate combined UK Income Tax and National Insurance for 2025/26.',\r\n  },\r\n  NetIncomeUKCalculator: {\r\n    title: 'Net Income Calculator UK | Take-Home After Tax & NI',\r\n    description: 'Estimate your UK net income after tax and NI deductions for 2025/26.',\r\n  },\r\n  SelfAssessmentGuide: {\r\n    title: 'UK Self Assessment Guide | Deadlines, Rates, Tips',\r\n    description:\r\n      'Understand UK Self Assessment: deadlines, allowances, rates and tips for 2025/26.',\r\n  },\r\n  MortgageCalculatorUK: {\r\n    title: 'UK Mortgage Calculators Hub | Repayments, Comparison',\r\n    description:\r\n      'Explore UK mortgage tools: loan repayment, comparisons, and home loan calculators for 2025/26.',\r\n  },\r\n  MortgageLoanRepayment: {\r\n    title: 'Mortgage Loan Repayment Calculator UK',\r\n    description: 'Estimate monthly mortgage repayments and total interest across the term.',\r\n  },\r\n  HomeLoanMortgageCalculator: {\r\n    title: 'Home Loan Mortgage Calculator UK',\r\n    description: 'Quick home loan mortgage estimates: payments by rate, term and deposit.',\r\n  },\r\n  MortgageComparison: {\r\n    title: 'Mortgage Comparison Calculator UK',\r\n    description: 'Compare two mortgage deals side-by-side. See total costs and savings.',\r\n  },\r\n  // Add entries for other specific pages/calculators here following the same pattern\r\n};\r\n\r\n// ---- OG/Twitter images for key salary pages (merge without replacing other entries) ----\r\nconst CDN = 'https://xifmvsuddgebmlleggqz.supabase.co/storage/v1/object/public/CalcMyMoney.co.uk';\r\n\r\npageSeo.SalaryCalculatorUK = {\r\n  ...pageSeo.SalaryCalculatorUK,\r\n  ogImage: `${CDN}/og-final-salary-hub.png`,\r\n  ogImageAlt: 'UK Salary Calculator ÔÇô Take-Home Pay (2025/26)',\r\n};\r\n\r\npageSeo.SalaryCalculatorTakeHomePay = {\r\n  ...pageSeo.SalaryCalculatorTakeHomePay,\r\n  ogImage: `${CDN}/og-final-take-home.png`,\r\n  ogImageAlt: 'Take-Home Pay Calculator UK (2025/26)',\r\n};\r\n\r\npageSeo.SalaryCalculatorPaycheck = {\r\n  ...pageSeo.SalaryCalculatorPaycheck,\r\n  ogImage: `${CDN}/og-final-paycheck.png`,\r\n  ogImageAlt: 'Paycheck Calculator UK ÔÇô After Tax & NI',\r\n};\r\n\r\npageSeo.GrossToNetCalculator = {\r\n  ...pageSeo.GrossToNetCalculator,\r\n  ogImage: `${CDN}/og-final-gross-to-net.png`,\r\n  ogImageAlt: 'Gross to Net Income Calculator (UK)',\r\n};\r\n\r\npageSeo.ProRataSalaryCalculator = {\r\n  ...pageSeo.ProRataSalaryCalculator,\r\n  ogImage: `${CDN}/og-final-pro-rata.png`,\r\n  ogImageAlt: 'Pro-Rata Salary Calculator (UK)',\r\n};\r\n\r\n// Add a default Open Graph image (used if page-specific image isn't set)\r\nconst defaultOgImage =\r\n  'https://xifmvsuddgebmlleggqz.supabase.co/storage/v1/object/public/CalcMyMoney.co.uk/og-default.png';\r\nconst defaultOgAlt = 'Calculate My Money ÔÇô Free UK Calculators';\r\n\r\n// Helper function to get or create a meta tag dynamically\r\nconst getOrCreateMeta = (name, attribute = 'name') => {\r\n  let element = document.head.querySelector(`meta[${attribute}=\"${name}\"]`);\r\n  if (!element) {\r\n    element = document.createElement('meta');\r\n    element.setAttribute(attribute, name);\r\n    document.head.appendChild(element);\r\n  }\r\n  return element;\r\n};\r\n\r\n// Helper function to get or create a link tag dynamically\r\nconst getOrCreateLink = (rel) => {\r\n  let element = document.head.querySelector(`link[rel=\"${rel}\"]`);\r\n  if (!element) {\r\n    element = document.createElement('link');\r\n    element.setAttribute('rel', rel);\r\n    document.head.appendChild(element);\r\n  }\r\n  return element;\r\n};\r\n\r\nexport default function Layout({ children, currentPageName }) {\r\n  const location = useLocation();\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n  const [openCategories, setOpenCategories] = useState({});\r\n  const isHomePage = location.pathname === createPageUrl('Home');\r\n\r\n  // Toggle category expansion in mobile menu\r\n  const toggleCategory = (categorySlug) => {\r\n    setOpenCategories((prev) => ({\r\n      ...prev,\r\n      [categorySlug]: !prev[categorySlug],\r\n    }));\r\n  };\r\n\r\n  // NEW: Fallback H1 control\r\n  const [needsFallbackH1, setNeedsFallbackH1] = useState(false);\r\n\r\n  // Which pages should get a fallback H1 if one isn't present in their content\r\n  // CHANGED: memoize for stable ref (fixes missing dependency warning)\r\n  const fallbackH1Pages = React.useMemo(\r\n    () =>\r\n      new Set([\r\n        'Contact',\r\n        'StampDutyCalculator',\r\n        'PAYECalculator',\r\n        'CostOfLiving', // hub page\r\n        'CostOfLivingPage', // dynamic city page\r\n        'StudentLoanRepaymentCalculator',\r\n        'NationalInsuranceCalculator',\r\n      ]),\r\n    []\r\n  );\r\n\r\n  // Helper: Title-case a slug (e.g., london -> London)\r\n  const toTitleCase = (str) =>\r\n    (str || '')\r\n      .split('-')\r\n      .map((s) => s.charAt(0).toUpperCase() + s.slice(1))\r\n      .join(' ');\r\n\r\n  // Derive a sensible fallback H1 per page\r\n  const getFallbackH1Text = () => {\r\n    switch (currentPageName) {\r\n      case 'Contact':\r\n        return 'Contact Us';\r\n      case 'StampDutyCalculator':\r\n        return 'Stamp Duty Calculator';\r\n      case 'PAYECalculator':\r\n        return 'UK PAYE Calculator';\r\n      case 'CostOfLiving': {\r\n        // hub page with optional slug\r\n        const params = new URLSearchParams(window.location.search);\r\n        const slug = params.get('slug');\r\n        return slug ? `Cost of Living in ${toTitleCase(slug)}` : 'UK Cost of Living Explorer';\r\n      }\r\n      case 'CostOfLivingPage': {\r\n        // dynamic city page\r\n        const params = new URLSearchParams(window.location.search);\r\n        const slug = params.get('slug');\r\n        return slug ? `Cost of Living in ${toTitleCase(slug)}` : 'UK Cost of Living Explorer';\r\n      }\r\n      case 'StudentLoanRepaymentCalculator':\r\n        return 'Student Loan Repayment Calculator';\r\n      case 'NationalInsuranceCalculator':\r\n        return 'UK National Insurance Calculator';\r\n      default:\r\n        // Fall back to pageSeo title (left part before a pipe) if available\r\n        const pageData = pageSeo[currentPageName];\r\n        if (pageData?.title) {\r\n          return pageData.title.split('|')[0].trim();\r\n        }\r\n        return currentPageName || 'Calculator';\r\n    }\r\n  };\r\n\r\n  // Detect if the current page already rendered an H1; only show fallback if none found\r\n  useEffect(() => {\r\n    if (!fallbackH1Pages.has(currentPageName)) {\r\n      setNeedsFallbackH1(false);\r\n      return;\r\n    }\r\n    const mainEl = document.querySelector('main');\r\n    const checkForH1 = () => {\r\n      const hasH1 = !!(mainEl && mainEl.querySelector('h1'));\r\n      setNeedsFallbackH1(!hasH1);\r\n    };\r\n    // Initial check after mount\r\n    checkForH1();\r\n\r\n    // Observe for dynamically injected content (e.g., after data fetch)\r\n    const observer = new MutationObserver(() => {\r\n      const hasH1 = !!(mainEl && mainEl.querySelector('h1'));\r\n      if (hasH1) {\r\n        setNeedsFallbackH1(false);\r\n        observer.disconnect();\r\n      } else {\r\n        setNeedsFallbackH1(true);\r\n      }\r\n    });\r\n\r\n    if (mainEl) {\r\n      observer.observe(mainEl, { childList: true, subtree: true });\r\n    }\r\n    return () => observer.disconnect();\r\n  }, [currentPageName, location.pathname, fallbackH1Pages]); // CHANGED: added fallbackH1Pages\r\n\r\n  useEffect(() => {\r\n    // Add Google Analytics script\r\n    const gaMeasurementId = 'G-ESNP2YRGWB';\r\n\r\n    // Performance: preconnect to frequently used domains\r\n    const preconnects = [];\r\n    const addPreconnect = (href) => {\r\n      const link = document.createElement('link');\r\n      link.rel = 'preconnect';\r\n      link.href = href;\r\n      // crossOrigin=\"anonymous\" is often needed for fonts and other assets served from a different origin,\r\n      // but might not be strictly necessary for all preconnects. Including for consistency based on outline.\r\n      if (href.startsWith('https://')) {\r\n        link.crossOrigin = 'anonymous';\r\n      }\r\n      document.head.appendChild(link);\r\n      preconnects.push(link);\r\n    };\r\n\r\n    addPreconnect('https://www.googletagmanager.com');\r\n    addPreconnect('https://images.unsplash.com'); // Example for external image hosts if used\r\n    addPreconnect('https://qtrypzzcjebvfcihiynt.supabase.co'); // For Supabase storage\r\n    addPreconnect('https://xifmvsuddgebmlleggqz.supabase.co'); // For Supabase storage (new og image)\r\n\r\n    if (gaMeasurementId.startsWith('G-')) {\r\n      const script1 = document.createElement('script');\r\n      script1.src = `https://www.googletagmanager.com/gtag/js?id=${gaMeasurementId}`;\r\n      script1.async = true;\r\n      document.head.appendChild(script1);\r\n\r\n      const script2 = document.createElement('script');\r\n      script2.innerHTML = `\r\n          window.dataLayer = window.dataLayer || [];\r\n          function gtag(){dataLayer.push(arguments);}\r\n          gtag('js', new Date());\r\n          gtag('config', '${gaMeasurementId}');\r\n        `;\r\n      document.head.appendChild(script2);\r\n\r\n      return () => {\r\n        // Clean up scripts on component unmount\r\n        if (document.head.contains(script1)) {\r\n          document.head.removeChild(script1);\r\n        }\r\n        if (document.head.contains(script2)) {\r\n          document.head.removeChild(script2);\r\n        }\r\n        // Clean up preconnects\r\n        preconnects.forEach((link) => {\r\n          if (document.head.contains(link)) document.head.removeChild(link);\r\n        });\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fire calculator_view for calculator-like pages (simple heuristic)\r\n    if (typeof window !== 'undefined' && window.gtag && /Calculator/i.test(currentPageName || '')) {\r\n      window.gtag('event', 'calculator_view', {\r\n        page_name: currentPageName,\r\n        page_path: window.location.pathname,\r\n        page_title: document.title,\r\n      });\r\n    }\r\n  }, [currentPageName]);\r\n\r\n  // SEO: Update page title and meta description based on currentPageName\r\n  useEffect(() => {\r\n    const defaultTitle = 'Calculate My Money - Free UK Financial Calculators';\r\n    const defaultDescription =\r\n      'Your go-to source for free UK financial calculators including salary, tax, mortgage, pension, and budget tools from Calculate My Money. Make smart money decisions.';\r\n\r\n    const pageData = pageSeo[currentPageName];\r\n\r\n    // Set document title\r\n    document.title = pageData?.title || defaultTitle;\r\n\r\n    // Set main meta description\r\n    const descriptionMeta = getOrCreateMeta('description');\r\n    descriptionMeta.setAttribute('content', pageData?.description || defaultDescription);\r\n\r\n    // Add robots meta tag\r\n    const robotsMeta = getOrCreateMeta('robots');\r\n    robotsMeta.setAttribute('content', 'index,follow,max-image-preview:large');\r\n\r\n    // Add theme-color meta tag\r\n    const themeColorMeta = getOrCreateMeta('theme-color');\r\n    themeColorMeta.setAttribute('content', '#0b5fff');\r\n\r\n    // Add canonical link tag (updated to support dynamic pages with slug)\r\n    const canonicalLink = getOrCreateLink('canonical');\r\n    const origin = window.location.origin.endsWith('/')\r\n      ? window.location.origin.slice(0, -1)\r\n      : window.location.origin;\r\n    const pathname = location.pathname;\r\n\r\n    // Pages that rely on a \"slug\" query param for unique content\r\n    const dynamicCanonicalPages = new Set(['CostOfLiving', 'JobSalaries']); // Updated CostOfLivingPage to CostOfLiving\r\n\r\n    let canonicalUrl;\r\n    if (currentPageName === 'Home' || pathname === '/') {\r\n      canonicalUrl = `${origin}/`;\r\n    } else if (dynamicCanonicalPages.has(currentPageName)) {\r\n      // Keep only the slug param; drop tracking and other params\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const slug = urlParams.get('slug');\r\n      const canonicalParams = new URLSearchParams();\r\n      if (slug) canonicalParams.set('slug', slug);\r\n      const search = canonicalParams.toString();\r\n      canonicalUrl = `${origin}${pathname}${search ? `?${search}` : ''}`;\r\n    } else {\r\n      // For all other pages, strip query params from canonical\r\n      canonicalUrl = `${origin}${pathname}`;\r\n    }\r\n    canonicalLink.setAttribute('href', canonicalUrl);\r\n\r\n    // Set Open Graph (for Facebook, LinkedIn, etc.) meta tags\r\n    const ogTitleMeta = getOrCreateMeta('og:title', 'property');\r\n    ogTitleMeta.setAttribute('content', pageData?.title || defaultTitle);\r\n\r\n    const ogDescriptionMeta = getOrCreateMeta('og:description', 'property');\r\n    ogDescriptionMeta.setAttribute('content', pageData?.description || defaultDescription);\r\n\r\n    const ogUrlMeta = getOrCreateMeta('og:url', 'property');\r\n    ogUrlMeta.setAttribute('content', canonicalUrl); // Use canonical URL for consistency\r\n\r\n    const ogTypeMeta = getOrCreateMeta('og:type', 'property');\r\n    ogTypeMeta.setAttribute('content', 'website'); // Default type for general pages\r\n\r\n    const ogSiteNameMeta = getOrCreateMeta('og:site_name', 'property');\r\n    ogSiteNameMeta.setAttribute('content', 'Calculate My Money');\r\n\r\n    // NEW: locale for consistency\r\n    const ogLocaleMeta = getOrCreateMeta('og:locale', 'property');\r\n    ogLocaleMeta.setAttribute('content', 'en_GB');\r\n\r\n    // Set OG/Twitter images (use page-specific if provided, else default)\r\n    const ogImageMeta = getOrCreateMeta('og:image', 'property');\r\n    ogImageMeta.setAttribute('content', pageData?.ogImage || defaultOgImage);\r\n\r\n    // Explicit dimensions and alt for OG image\r\n    const ogImageWidthMeta = getOrCreateMeta('og:image:width', 'property');\r\n    ogImageWidthMeta.setAttribute('content', '1200');\r\n\r\n    const ogImageHeightMeta = getOrCreateMeta('og:image:height', 'property');\r\n    ogImageHeightMeta.setAttribute('content', '630');\r\n\r\n    const ogImageAltMeta = getOrCreateMeta('og:image:alt', 'property');\r\n    ogImageAltMeta.setAttribute('content', pageData?.ogImageAlt || defaultOgAlt);\r\n\r\n    // Set Twitter Card meta tags\r\n    const twitterCardMeta = getOrCreateMeta('twitter:card');\r\n    twitterCardMeta.setAttribute('content', 'summary_large_image'); // Or 'summary' for smaller image/no image\r\n\r\n    const twitterTitleMeta = getOrCreateMeta('twitter:title');\r\n    twitterTitleMeta.setAttribute('content', pageData?.title || defaultTitle);\r\n\r\n    const twitterDescriptionMeta = getOrCreateMeta('twitter:description');\r\n    twitterDescriptionMeta.setAttribute('content', pageData?.description || defaultDescription);\r\n\r\n    const twitterImageMeta = getOrCreateMeta('twitter:image');\r\n    twitterImageMeta.setAttribute('content', pageData?.ogImage || defaultOgImage);\r\n\r\n    // NEW: twitter image alt for accessibility\r\n    const twitterImageAltMeta = getOrCreateMeta('twitter:image:alt');\r\n    twitterImageAltMeta.setAttribute('content', pageData?.ogImageAlt || defaultOgAlt);\r\n\r\n    // --- Add JSON-LD Schema ---\r\n    const organizationSchema = {\r\n      '@context': 'https://schema.org',\r\n      '@type': 'Organization',\r\n      name: 'Calculate My Money',\r\n      url: `${origin}/`,\r\n      logo: 'https://www.calcmymoney.co.uk/images/logo-high-res.png', // Existing logo\r\n      sameAs: [],\r\n    };\r\n\r\n    const websiteSchema = {\r\n      '@context': 'https://schema.org',\r\n      '@type': 'WebSite',\r\n      name: 'Calculate My Money',\r\n      url: `${origin}/`,\r\n      potentialAction: {\r\n        '@type': 'SearchAction',\r\n        target: {\r\n          '@type': 'EntryPoint',\r\n          urlTemplate: `${origin}/?q={search_term_string}`,\r\n        },\r\n        'query-input': 'required name=search_term_string',\r\n      },\r\n    };\r\n\r\n    // Function to create or update script tags\r\n    const createOrUpdateJsonLd = (id, schema) => {\r\n      let script = document.head.querySelector(`script[id=\"${id}\"]`);\r\n      if (!script) {\r\n        script = document.createElement('script');\r\n        script.id = id;\r\n        script.type = 'application/ld+json';\r\n        document.head.appendChild(script);\r\n      }\r\n      script.textContent = JSON.stringify(schema);\r\n    };\r\n\r\n    createOrUpdateJsonLd('organization-schema', organizationSchema);\r\n    createOrUpdateJsonLd('website-schema', websiteSchema);\r\n\r\n    // Add FAQ schema for specific pages\r\n    const faqPages = [\r\n      'Home',\r\n      'SalaryCalculatorUK',\r\n      'MortgageCalculator',\r\n      'PensionCalculator',\r\n      'BudgetCalculator',\r\n    ];\r\n\r\n    const existingFaqSchemaElement = document.head.querySelector(`script[id=\"faq-schema\"]`);\r\n\r\n    // NEW: detect if the page already includes any FAQPage JSON-LD to avoid duplicates\r\n    const pageHasFAQSchema = () => {\r\n      const scripts = Array.from(document.querySelectorAll('script[type=\"application/ld+json\"]'));\r\n      const hasFAQ = (node) => {\r\n        if (!node) return false;\r\n        if (Array.isArray(node)) {\r\n          // If node is an array (e.g., '@graph'), check each item\r\n          return node.some(hasFAQ);\r\n        }\r\n        if (typeof node === 'object' && node !== null) {\r\n          // Check for @type directly\r\n          if (node['@type'] === 'FAQPage') return true;\r\n          // If there's an @graph, recurse into it\r\n          if (node['@graph']) return hasFAQ(node['@graph']);\r\n        }\r\n        return false;\r\n      };\r\n\r\n      for (const s of scripts) {\r\n        // Skip the specific script we control if it's currently being removed\r\n        if (s.id === 'faq-schema' && !faqPages.includes(currentPageName)) {\r\n          continue;\r\n        }\r\n        try {\r\n          const json = JSON.parse(s.textContent || '{}');\r\n          if (hasFAQ(json)) return true;\r\n        } catch (_) {\r\n          // ignore parse errors on unrelated JSON-LD\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n\r\n    if (faqPages.includes(currentPageName) && !pageHasFAQSchema()) {\r\n      const faqSchema = {\r\n        '@context': 'https://schema.org',\r\n        '@type': 'FAQPage',\r\n        mainEntity: [\r\n          {\r\n            '@type': 'Question',\r\n            name: 'How accurate are your UK salary/tax calculators?',\r\n            acceptedAnswer: {\r\n              '@type': 'Answer',\r\n              text: 'Our calculators are designed for high accuracy, using the latest UK tax laws for the specified tax year (2025/26). They cover Income Tax, National Insurance, and more. While we strive for precision, these tools are for estimation purposes and should not be considered financial advice.',\r\n            },\r\n          },\r\n          {\r\n            '@type': 'Question',\r\n            name: 'Which tax year do the calculators use (2025/26)?',\r\n            acceptedAnswer: {\r\n              '@type': 'Answer',\r\n              text: 'All relevant financial calculators have been updated for the 2025/26 UK tax year, which runs from 6 April 2025 to 5 April 2026. Rates and thresholds for all UK nations are applied where applicable.',\r\n            },\r\n          },\r\n          {\r\n            '@type': 'Question',\r\n            name: 'Can I download or print the results?',\r\n            acceptedAnswer: {\r\n              '@type': 'Answer',\r\n              text: \"Yes. Most of our calculators feature 'Export' or 'Print' buttons, allowing you to download your results as a CSV/PDF file or generate a printer-friendly version of the summary for your records.\",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n      createOrUpdateJsonLd('faq-schema', faqSchema);\r\n    } else if (!faqPages.includes(currentPageName) && existingFaqSchemaElement) {\r\n      // Clean up our injected FAQ schema if we navigate away from the specified FAQ pages\r\n      document.head.removeChild(existingFaqSchemaElement);\r\n    }\r\n  }, [currentPageName, location.pathname]); // Dependency array: re-run when currentPageName changes, or location for accurate og:url\r\n\r\n  const mainNavLinks = [\r\n    { name: 'All Calculators', url: createPageUrl('Home') },\r\n    { name: 'Job Salaries', url: createPageUrl('JobSalaries') },\r\n    { name: 'Cost of Living', url: createPageUrl('CostOfLiving') },\r\n    { name: 'Financial Stats', url: createPageUrl('UKFinancialStats') },\r\n    { name: 'Blog', url: createPageUrl('Blog') },\r\n    { name: 'Resources', url: createPageUrl('Resources') },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 text-gray-800\">\r\n      <ScrollToTop />\r\n      <style jsx global>{`\r\n        html {\r\n          scroll-behavior: smooth;\r\n        }\r\n        * {\r\n          transition:\r\n            background-color 0.3s ease,\r\n            color 0.3s ease,\r\n            border-color 0.3s ease;\r\n        }\r\n        @media print {\r\n          html {\r\n            scroll-behavior: auto;\r\n          }\r\n          .non-printable {\r\n            display: none !important;\r\n          }\r\n          .printable-area {\r\n            display: block !important;\r\n            width: 100% !important;\r\n            max-width: 100% !important;\r\n            flex: 1 !important;\r\n          }\r\n          .printable-grid-cols-1 {\r\n            grid-template-columns: 1fr !important;\r\n          }\r\n          .printable-content {\r\n            padding: 0 !important;\r\n            margin: 0 !important;\r\n          }\r\n          .print-title {\r\n            display: block !important;\r\n            text-align: center;\r\n            font-size: 24px;\r\n            font-weight: bold;\r\n            margin-bottom: 2rem;\r\n          }\r\n        }\r\n      `}</style>\r\n\r\n      {/* Header */}\r\n      <header className=\"bg-white/95 backdrop-blur-sm sticky top-0 z-40 border-b border-gray-200 non-printable\">\r\n        <nav className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center h-16\">\r\n            <div className=\"flex-shrink-0\">\r\n              <Link to={createPageUrl('Home')} className=\"flex items-center space-x-2\">\r\n                <img\r\n                  src=\"https://www.calcmymoney.co.uk/images/logo-high-res.png\"\r\n                  alt=\"Calculate My Money Logo\"\r\n                  className=\"h-8 w-8\"\r\n                />\r\n                <span className=\"font-bold text-xl text-gray-800\">Calculate My Money</span>\r\n              </Link>\r\n            </div>\r\n\r\n            {/* Desktop Navigation - Simple Links */}\r\n            <div className=\"hidden md:flex md:items-center md:space-x-6\">\r\n              {mainNavLinks.map((link) => (\r\n                <Link\r\n                  key={link.name}\r\n                  to={link.url}\r\n                  className=\"text-gray-700 hover:text-blue-600 font-medium transition-colors\"\r\n                >\r\n                  {link.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Mobile Menu Button */}\r\n            <div className=\"md:hidden flex items-center\">\r\n              <Sheet open={mobileMenuOpen} onOpenChange={setMobileMenuOpen}>\r\n                <SheetTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"icon\" className=\"text-gray-600\">\r\n                    <Menu className=\"h-6 w-6\" />\r\n                  </Button>\r\n                </SheetTrigger>\r\n                <SheetContent className=\"bg-white border-gray-200 w-[300px] sm:w-[340px] overflow-y-auto\">\r\n                  <SheetHeader>\r\n                    <Link\r\n                      to={createPageUrl('Home')}\r\n                      className=\"flex items-center space-x-2\"\r\n                      onClick={() => setMobileMenuOpen(false)}\r\n                    >\r\n                      <img\r\n                        src=\"https://www.calcmymoney.co.uk/images/logo-high-res.png\"\r\n                        alt=\"Calculate My Money Logo\"\r\n                        className=\"h-8 w-8\"\r\n                      />\r\n                      <span className=\"font-bold text-xl text-gray-800\">Calculate My Money</span>\r\n                    </Link>\r\n                  </SheetHeader>\r\n\r\n                  <div className=\"mt-6\">\r\n                    {/* Main Navigation Links */}\r\n                    <div className=\"space-y-4 mb-6\">\r\n                      {mainNavLinks.map((link) => (\r\n                        <SheetClose key={link.name} asChild>\r\n                          <Link\r\n                            to={link.url}\r\n                            className=\"block text-lg font-medium text-gray-700 hover:text-blue-600 py-2\"\r\n                          >\r\n                            {link.name}\r\n                          </Link>\r\n                        </SheetClose>\r\n                      ))}\r\n                    </div>\r\n\r\n                    <Separator className=\"my-4\" />\r\n\r\n                    {/* Calculator Categories with Collapsibles */}\r\n                    <div className=\"space-y-2\">\r\n                      <h3 className=\"font-semibold text-gray-900 mb-3\">Browse Calculators</h3>\r\n                      {calculatorCategories.map((category) => (\r\n                        <Collapsible\r\n                          key={category.slug}\r\n                          open={openCategories[category.slug]}\r\n                          onOpenChange={() => toggleCategory(category.slug)}\r\n                        >\r\n                          <CollapsibleTrigger className=\"flex items-center justify-between w-full p-2 text-left hover:bg-gray-50 rounded-lg transition-colors\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <category.icon className=\"w-4 h-4 text-gray-600\" />\r\n                              <span className=\"font-medium text-gray-800\">{category.name}</span>\r\n                            </div>\r\n                            {openCategories[category.slug] ? (\r\n                              <ChevronDown className=\"w-4 h-4 text-gray-500\" />\r\n                            ) : (\r\n                              <ChevronRight className=\"w-4 h-4 text-gray-500\" />\r\n                            )}\r\n                          </CollapsibleTrigger>\r\n                          <CollapsibleContent className=\"pl-6 mt-2 space-y-3\">\r\n                            {category.subCategories.map((subCategory) => (\r\n                              <div key={subCategory.name} className=\"space-y-2\">\r\n                                <h4 className=\"text-sm font-medium text-gray-700 border-b border-gray-200 pb-1\">\r\n                                  {subCategory.name}\r\n                                </h4>\r\n                                <div className=\"space-y-1 pl-2\">\r\n                                  {subCategory.calculators.map((calc) => (\r\n                                    <SheetClose key={calc.name} asChild>\r\n                                      <Link\r\n                                        to={calc.url}\r\n                                        className={`block text-sm py-1 transition-colors ${\r\n                                          calc.status === 'active'\r\n                                            ? 'text-gray-600 hover:text-blue-600'\r\n                                            : 'text-gray-400 cursor-not-allowed'\r\n                                        }`}\r\n                                      >\r\n                                        {calc.name}{' '}\r\n                                        {calc.status === 'planned' && (\r\n                                          <span className=\"text-xs\">(soon)</span>\r\n                                        )}\r\n                                      </Link>\r\n                                    </SheetClose>\r\n                                  ))}\r\n                                </div>\r\n                              </div>\r\n                            ))}\r\n                          </CollapsibleContent>\r\n                        </Collapsible>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </SheetContent>\r\n              </Sheet>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"flex-1 printable-content bg-gray-50\">\r\n        {/* NEW: Fallback H1 (only shows if page has no H1 and is one of the designated fallback pages) */}\r\n        {needsFallbackH1 && fallbackH1Pages.has(currentPageName) && (\r\n          <div className=\"bg-white border-b border-gray-200 non-printable\">\r\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n              <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\r\n                {getFallbackH1Text()}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {children}\r\n      </main>\r\n\r\n      {/* NEW: Global collapsed calculator index to add strong internal linking */}\r\n      <CalculatorIndex />\r\n\r\n      {/* Footer */}\r\n      <footer className=\"bg-white border-t border-gray-200 mt-16 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"grid md:grid-cols-5 gap-8\">\r\n            <div className=\"md:col-span-1\">\r\n              <Link to={createPageUrl('Home')} className=\"flex items-center space-x-2 mb-4\">\r\n                <img\r\n                  src=\"https://www.calcmymoney.co.uk/images/logo-high-res.png\"\r\n                  alt=\"Calculate My Money Logo\"\r\n                  className=\"h-8 w-8\"\r\n                />\r\n                <span className=\"font-bold text-xl text-gray-800\">Calculate My Money</span>\r\n              </Link>\r\n              <p className=\"text-gray-600 text-sm\">\r\n                Free UK financial calculators for salary, tax, mortgages, pensions, budgets and\r\n                investments.\r\n              </p>\r\n            </div>\r\n\r\n            <div>\r\n              <h4 className=\"font-semibold text-gray-900 mb-4\">Popular Calculators</h4>\r\n              <ul className=\"space-y-2\">\r\n                <li>\r\n                  <Link\r\n                    to={createPageUrl('SalaryCalculatorUK')}\r\n                    className=\"text-gray-700 hover:text-blue-600 hover:underline\"\r\n                  >\r\n                    Salary Calculator\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to={createPageUrl('MortgageCalculator')}\r\n                    className=\"text-gray-700 hover:text-blue-600 hover:underline\"\r\n                  >\r\n                    Mortgage Calculator\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to={createPageUrl('BudgetCalculator')}\r\n                    className=\"text-gray-700 hover:text-blue-600 hover:underline\"\r\n                  >\r\n                    Budget Planner\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to={createPageUrl('CompoundInterestCalculator')}\r\n                    className=\"text-gray-700 hover:text-blue-600 hover:underline\"\r\n                  >\r\n                    Compound Interest\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to={createPageUrl('PensionCalculator')}\r\n                    className=\"text-gray-700 hover:text-blue-600 hover:underline\"\r\n                  >\r\n                    Pension Calculator\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div>\r\n              <h4 className=\"font-semibold text-gray-900 mb-4\">Categories</h4>\r\n              <ul className=\"space-y-2 text-gray-600\">\r\n                {calculatorCategories.slice(0, 6).map((category) => (\r\n                  <li key={category.slug}>\r\n                    {isHomePage ? (\r\n                      <a\r\n                        href={`#${category.slug}`}\r\n                        className=\"text-gray-700 hover:text-blue-600 hover:underline\"\r\n                      >\r\n                        {category.name}\r\n                      </a>\r\n                    ) : (\r\n                      <Link\r\n                        to={`${createPageUrl('Home')}#${category.slug}`}\r\n                        className=\"text-gray-700 hover:text-blue-600 hover:underline\"\r\n                      >\r\n                        {category.name}\r\n                      </Link>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n\r\n            <div>\r\n              <h4 className=\"font-semibold text-gray-900 mb-4\">Information</h4>\r\n              <ul className=\"space-y-2 text-gray-600\">\r\n                <li>\r\n                  <Link to={createPageUrl('About')} className=\"hover:text-blue-600\">\r\n                    About\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={createPageUrl('Methodology')} className=\"hover:text-blue-600\">\r\n                    Methodology\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={createPageUrl('Blog')} className=\"hover:text-blue-600\">\r\n                    Blog\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={createPageUrl('Resources')} className=\"hover:text-blue-600\">\r\n                    Resources\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={createPageUrl('UKGovernmentBudget')} className=\"hover:text-blue-600\">\r\n                    UK Budget Analysis\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={createPageUrl('JobSalaries')} className=\"hover:text-blue-600\">\r\n                    Job Salaries\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={createPageUrl('CostOfLiving')} className=\"hover:text-blue-600\">\r\n                    Cost of Living\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={createPageUrl('UKFinancialStats')} className=\"hover:text-blue-600\">\r\n                    Financial Stats\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={createPageUrl('Contact')} className=\"hover:text-blue-600\">\r\n                    Contact Us\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={createPageUrl('Sitemap')} className=\"hover:text-blue-600\">\r\n                    Sitemap\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={createPageUrl('LinkToUs')} className=\"hover:text-blue-600\">\r\n                    Link to Us\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <h4 className=\"font-semibold text-gray-900 mb-4\">Legal</h4>\r\n              <ul className=\"space-y-2 text-gray-600\">\r\n                <li>\r\n                  <Link to={createPageUrl('PrivacyPolicy')} className=\"hover:text-blue-600\">\r\n                    Privacy Policy\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={createPageUrl('CookiePolicy')} className=\"hover:text-blue-600\">\r\n                    Cookie Policy\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={createPageUrl('TermsOfService')} className=\"hover:text-blue-600\">\r\n                    Terms of Service\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={createPageUrl('Disclaimer')} className=\"hover:text-blue-600\">\r\n                    Disclaimer\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"border-t border-gray-200 mt-8 pt-8 text-center text-gray-500 text-sm\">\r\n            <p>&copy; 2025 Calculate My Money - UK Financial Calculator Tools</p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n\r\n      <CookieConsentBanner />\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\LinkToUs.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 10,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\n\r\nexport default function LinkToUs() {\r\n  const badgeHtml = `<a href=\"https://www.calcmymoney.co.uk/SalaryCalculatorUK\" target=\"_blank\" rel=\"noopener\">\r\n  <img src=\"https://www.calcmymoney.co.uk/images/logo-high-res.png\" alt=\"Powered by Calculate My Money ÔÇö Free UK Salary Calculator\" style=\"height:28px; vertical-align:middle; margin-right:8px;\" />\r\n  <span>Powered by Calculate My Money ÔÇö Free UK Salary Calculator</span>\r\n</a>`;\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200\">\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12 text-center\">\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">Link to Us</h1>\r\n          <p className=\"text-lg text-gray-600 mt-2\">\r\n            Support our free UK calculators by adding a badge to your site.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10 space-y-6\">\r\n        <p className=\"text-gray-700\">\r\n          Use the snippet below to link back to us. It helps your users and supports the continued\r\n          development of free, adÔÇælight tools.\r\n        </p>\r\n        <div className=\"p-4 bg-gray-50 border rounded font-mono text-sm overflow-auto\">\r\n          <pre>{badgeHtml}</pre>\r\n        </div>\r\n        <div className=\"pt-4\">\r\n          <p className=\"text-sm text-gray-500\">Preview:</p>\r\n          <div className=\"mt-2\" dangerouslySetInnerHTML={{ __html: badgeHtml }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\LoanComparisonCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 28,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Banknote, Repeat, CheckCircle2, XCircle } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst loanComparisonFAQs = [\r\n  {\r\n    question: 'What is APR?',\r\n    answer:\r\n      \"APR stands for Annual Percentage Rate. It represents the yearly cost of a loan, including the interest rate and any extra fees. It's the most reliable way to compare the true cost of different loan offers.\",\r\n  },\r\n  {\r\n    question: 'Why is the total cost important?',\r\n    answer:\r\n      'While a lower monthly payment might seem attractive, a longer loan term can mean you pay significantly more in total interest over the life of the loan. The total cost gives you the complete picture.',\r\n  },\r\n  {\r\n    question: 'What else should I consider besides the numbers?',\r\n    answer:\r\n      \"Always check for early repayment charges (ERCs), flexibility in making overpayments, and the lender's customer service reputation. The 'best' loan isn't always the one with the lowest APR.\",\r\n  },\r\n];\r\n\r\nconst LoanInput = ({ id, loan, setLoan, title }) => (\r\n  <Card>\r\n    <CardHeader>\r\n      <CardTitle className=\"text-lg\">{title}</CardTitle>\r\n    </CardHeader>\r\n    <CardContent className=\"space-y-4\">\r\n      <div>\r\n        <Label htmlFor={`amount-${id}`}>Loan Amount (┬ú)</Label>\r\n        <Input\r\n          id={`amount-${id}`}\r\n          type=\"number\"\r\n          value={loan.amount}\r\n          onChange={(e) => setLoan({ ...loan, amount: e.target.value })}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Label htmlFor={`apr-${id}`}>APR (%)</Label>\r\n        <Input\r\n          id={`apr-${id}`}\r\n          type=\"number\"\r\n          value={loan.apr}\r\n          onChange={(e) => setLoan({ ...loan, apr: e.target.value })}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Label htmlFor={`term-${id}`}>Term (Years)</Label>\r\n        <Input\r\n          id={`term-${id}`}\r\n          type=\"number\"\r\n          value={loan.term}\r\n          onChange={(e) => setLoan({ ...loan, term: e.target.value })}\r\n        />\r\n      </div>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nconst calculateLoanDetails = (loan) => {\r\n  const P = Number(loan.amount) || 0;\r\n  const r = Number(loan.apr) / 100 / 12;\r\n  const n = (Number(loan.term) || 0) * 12;\r\n\r\n  if (P <= 0 || r <= 0 || n <= 0) return null;\r\n\r\n  const M = (P * (r * Math.pow(1 + r, n))) / (Math.pow(1 + r, n) - 1);\r\n  const totalPaid = M * n;\r\n  const totalInterest = totalPaid - P;\r\n\r\n  return { monthlyPayment: M, totalPaid, totalInterest };\r\n};\r\n\r\nexport default function LoanComparisonCalculator() {\r\n  const [loan1, setLoan1] = useState({ amount: '10000', apr: '7.5', term: '5' });\r\n  const [loan2, setLoan2] = useState({ amount: '10000', apr: '8.0', term: '4' });\r\n  const [results1, setResults1] = useState(null);\r\n  const [results2, setResults2] = useState(null);\r\n\r\n  const handleCompare = () => {\r\n    setResults1(calculateLoanDetails(loan1));\r\n    setResults2(calculateLoanDetails(loan2));\r\n  };\r\n\r\n  // Initial calculation on load\r\n  useState(() => {\r\n    handleCompare();\r\n  }, []);\r\n\r\n  const betterMonthly = results1 && results2 && results1.monthlyPayment < results2.monthlyPayment;\r\n  const betterTotal = results1 && results2 && results1.totalPaid < results2.totalPaid;\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Loan Comparison Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Compare two loan offers side-by-side to see which one is truly the better deal for\r\n              you.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8 mb-8\">\r\n          <LoanInput id=\"1\" loan={loan1} setLoan={setLoan1} title=\"Loan Offer 1\" />\r\n          <LoanInput id=\"2\" loan={loan2} setLoan={setLoan2} title=\"Loan Offer 2\" />\r\n        </div>\r\n        <div className=\"text-center mb-8\">\r\n          <Button size=\"lg\" onClick={handleCompare}>\r\n            <Repeat className=\"w-5 h-5 mr-2\" />\r\n            Compare Loans\r\n          </Button>\r\n        </div>\r\n        {results1 && results2 && (\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Comparison Results</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-3 gap-4 text-center\">\r\n                <div className=\"p-4\">\r\n                  <h3 className=\"font-semibold text-lg\">Metric</h3>\r\n                </div>\r\n                <div className=\"p-4 bg-blue-50 rounded-lg\">\r\n                  <h3 className=\"font-semibold text-lg\">Loan 1</h3>\r\n                </div>\r\n                <div className=\"p-4 bg-indigo-50 rounded-lg\">\r\n                  <h3 className=\"font-semibold text-lg\">Loan 2</h3>\r\n                </div>\r\n\r\n                <div className=\"p-4 font-medium self-center\">Monthly Payment</div>\r\n                <div className=\"p-4 bg-blue-50 rounded-lg flex items-center justify-center\">\r\n                  <span className=\"text-2xl font-bold\">┬ú{results1.monthlyPayment.toFixed(2)}</span>\r\n                  {betterMonthly && <CheckCircle2 className=\"w-6 h-6 text-green-600 ml-2\" />}\r\n                  {!betterMonthly && <XCircle className=\"w-6 h-6 text-red-500 ml-2\" />}\r\n                </div>\r\n                <div className=\"p-4 bg-indigo-50 rounded-lg flex items-center justify-center\">\r\n                  <span className=\"text-2xl font-bold\">┬ú{results2.monthlyPayment.toFixed(2)}</span>\r\n                  {!betterMonthly && <CheckCircle2 className=\"w-6 h-6 text-green-600 ml-2\" />}\r\n                  {betterMonthly && <XCircle className=\"w-6 h-6 text-red-500 ml-2\" />}\r\n                </div>\r\n\r\n                <div className=\"p-4 font-medium self-center\">Total Interest Paid</div>\r\n                <div className=\"p-4 bg-blue-50 rounded-lg\">\r\n                  <span className=\"text-xl font-bold\">┬ú{results1.totalInterest.toFixed(2)}</span>\r\n                </div>\r\n                <div className=\"p-4 bg-indigo-50 rounded-lg\">\r\n                  <span className=\"text-xl font-bold\">┬ú{results2.totalInterest.toFixed(2)}</span>\r\n                </div>\r\n\r\n                <div className=\"p-4 font-medium self-center\">Total Amount Paid</div>\r\n                <div className=\"p-4 bg-blue-50 rounded-lg flex items-center justify-center\">\r\n                  <span className=\"text-2xl font-bold\">┬ú{results1.totalPaid.toFixed(2)}</span>\r\n                  {betterTotal && <CheckCircle2 className=\"w-6 h-6 text-green-600 ml-2\" />}\r\n                  {!betterTotal && <XCircle className=\"w-6 h-6 text-red-500 ml-2\" />}\r\n                </div>\r\n                <div className=\"p-4 bg-indigo-50 rounded-lg flex items-center justify-center\">\r\n                  <span className=\"text-2xl font-bold\">┬ú{results2.totalPaid.toFixed(2)}</span>\r\n                  {!betterTotal && <CheckCircle2 className=\"w-6 h-6 text-green-600 ml-2\" />}\r\n                  {betterTotal && <XCircle className=\"w-6 h-6 text-red-500 ml-2\" />}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={loanComparisonFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\LoanRepaymentCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 77,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Calendar, Percent } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst loanFAQs = [\r\n  {\r\n    question: 'How is loan interest calculated?',\r\n    answer:\r\n      'Most personal loans use a method where interest is calculated on the remaining balance. Each monthly payment consists of two parts: one part pays down the principal (the amount you borrowed), and the other part pays the interest accrued for that month.',\r\n  },\r\n  {\r\n    question: 'What is APR (Annual Percentage Rate)?',\r\n    answer:\r\n      \"APR represents the total yearly cost of borrowing, including the interest rate and any mandatory fees. It provides a more complete picture of the loan's cost than the interest rate alone.\",\r\n  },\r\n  {\r\n    question: 'Can I pay off my loan early?',\r\n    answer:\r\n      \"Yes, you can usually pay off a personal loan early, which can save you a significant amount in interest. However, some lenders may charge an early repayment fee, typically equivalent to 1-2 months' interest, so it's important to check your loan agreement.\",\r\n  },\r\n];\r\n\r\nexport default function LoanRepaymentCalculator() {\r\n  const [loanAmount, setLoanAmount] = useState('');\r\n  const [interestRate, setInterestRate] = useState('');\r\n  const [loanTerm, setLoanTerm] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const P = Number(loanAmount) || 0;\r\n    const r = (Number(interestRate) || 0) / 100 / 12; // Monthly interest rate\r\n    const n = (Number(loanTerm) || 0) * 12; // Total number of payments\r\n\r\n    if (P <= 0 || r <= 0 || n <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const monthlyPayment = (P * (r * Math.pow(1 + r, n))) / (Math.pow(1 + r, n) - 1);\r\n    const totalRepayment = monthlyPayment * n;\r\n    const totalInterest = totalRepayment - P;\r\n\r\n    const newResults = {\r\n      monthlyPayment,\r\n      totalRepayment,\r\n      totalInterest,\r\n      loanAmount: P,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Monthly Payment', `┬ú${newResults.monthlyPayment.toFixed(2)}`],\r\n      ['Total Repayments', `┬ú${newResults.totalRepayment.toFixed(2)}`],\r\n      ['Total Interest Paid', `┬ú${newResults.totalInterest.toFixed(2)}`],\r\n      ['Loan Amount', `┬ú${newResults.loanAmount.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [loanAmount, interestRate, loanTerm]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Personal Loan Repayment Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Calculate your monthly payments and the total interest you'll pay on a personal loan.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Loan Repayment Calculation</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Loan Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"loanAmount\">Loan Amount</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"loanAmount\"\r\n                      type=\"number\"\r\n                      value={loanAmount}\r\n                      onChange={(e) => setLoanAmount(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 10000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"interestRate\">Annual Interest Rate (APR %)</Label>\r\n                  <div className=\"relative\">\r\n                    <Percent className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"interestRate\"\r\n                      type=\"number\"\r\n                      value={interestRate}\r\n                      onChange={(e) => setInterestRate(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 7.5\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"loanTerm\">Loan Term (Years)</Label>\r\n                  <div className=\"relative\">\r\n                    <Calendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"loanTerm\"\r\n                      type=\"number\"\r\n                      value={loanTerm}\r\n                      onChange={(e) => setLoanTerm(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 5\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your Loan Repayments</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"loan-repayment\"\r\n                    title=\"Loan Repayment\"\r\n                  />\r\n                </div>\r\n                <Card className=\"bg-blue-50 border-blue-200\">\r\n                  <CardContent className=\"p-6\">\r\n                    <h3 className=\"font-semibold text-blue-800 mb-2\">Monthly Payment</h3>\r\n                    <div className=\"text-4xl font-bold text-blue-900\">\r\n                      ┬ú\r\n                      {results.monthlyPayment.toLocaleString('en-GB', {\r\n                        minimumFractionDigits: 2,\r\n                        maximumFractionDigits: 2,\r\n                      })}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Loan Summary</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n                      <p className=\"text-sm text-gray-600\">Total Repayments</p>\r\n                      <p className=\"text-lg font-semibold\">\r\n                        ┬ú\r\n                        {results.totalRepayment.toLocaleString('en-GB', {\r\n                          minimumFractionDigits: 2,\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"p-4 bg-red-50 rounded-lg\">\r\n                      <p className=\"text-sm text-gray-600\">Total Interest Paid</p>\r\n                      <p className=\"text-lg font-semibold text-red-800\">\r\n                        ┬ú\r\n                        {results.totalInterest.toLocaleString('en-GB', {\r\n                          minimumFractionDigits: 2,\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to see your repayments?</h3>\r\n                  <p>Enter the loan details to calculate your monthly costs.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={loanFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\MaternityPayCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 82,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Baby } from 'lucide-react';\r\nimport CalculatorWrapper from '../components/calculators/CalculatorWrapper';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\nimport AnimatedNumber from '../components/general/AnimatedNumber';\r\nimport Breadcrumbs from '../components/general/Breadcrumbs';\r\nimport { createPageUrl } from '@/utils';\r\n\r\nconst SMP_WEEKS_90_PERCENT = 6;\r\nconst SMP_WEEKS_FLAT_RATE = 33;\r\nconst SMP_FLAT_RATE_WEEKLY = 184.03; // For 2024/25, assumed for 2025/26\r\n\r\nconst maternityPayFAQs = [\r\n  {\r\n    question: 'Who is eligible for Statutory Maternity Pay (SMP)?',\r\n    answer:\r\n      \"To be eligible for SMP, you must be an employee who has worked for your employer continuously for at least 26 weeks up to the 'qualifying week' (the 15th week before the expected week of childbirth). You must also earn, on average, at least ┬ú123 a week.\",\r\n  },\r\n  {\r\n    question: 'What is the difference between Maternity Pay and Maternity Allowance?',\r\n    answer:\r\n      \"Statutory Maternity Pay (SMP) is paid by your employer. Maternity Allowance (MA) is paid by the government if you don't qualify for SMP, for example, if you're self-employed or haven't been with your employer long enough. MA is a standard flat rate.\",\r\n  },\r\n  {\r\n    question: 'Can my employer offer more than the statutory amount?',\r\n    answer:\r\n      \"Yes. Many employers offer 'enhanced' or 'contractual' maternity pay, which can be more generous than the statutory minimum. Check your employment contract or company handbook for details. Our calculator shows the statutory minimum you are entitled to.\",\r\n  },\r\n  {\r\n    question: 'When does Statutory Maternity Pay start and end?',\r\n    answer:\r\n      'You can start your maternity leave and pay any time from 11 weeks before the expected week of childbirth. The pay lasts for up to 39 weeks.',\r\n  },\r\n];\r\n\r\nexport default function MaternityPayCalculator() {\r\n  const [averageWeeklyEarnings, setAverageWeeklyEarnings] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const breadcrumbPath = [\r\n    { name: 'Home', url: createPageUrl('Home') },\r\n    { name: 'Life & Events', url: `${createPageUrl('Home')}#life-events` },\r\n    { name: 'Maternity Pay Calculator' },\r\n  ];\r\n\r\n  const handleCalculate = () => {\r\n    const awe = Number(averageWeeklyEarnings) || 0;\r\n    if (awe === 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const first6WeeksPay = awe * 0.9 * SMP_WEEKS_90_PERCENT;\r\n    const flatRatePay = Math.min(awe * 0.9, SMP_FLAT_RATE_WEEKLY);\r\n    const remaining33WeeksPay = flatRatePay * SMP_WEEKS_FLAT_RATE;\r\n    const totalSMP = first6WeeksPay + remaining33WeeksPay;\r\n\r\n    const newResults = {\r\n      first6WeeksTotal: first6WeeksPay,\r\n      first6WeeksWeekly: awe * 0.9,\r\n      remaining33WeeksTotal: remaining33WeeksPay,\r\n      remaining33WeeksWeekly: flatRatePay,\r\n      totalSMP: totalSMP,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n  }, [averageWeeklyEarnings]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <Breadcrumbs path={breadcrumbPath} />\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK Statutory Maternity Pay (SMP) Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Planning for a new arrival? Estimate your statutory maternity pay to help you budget\r\n              during your maternity leave.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card className=\"bg-white dark:bg-gray-800\">\r\n              <CardHeader>\r\n                <CardTitle>Your Earnings</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"awe\">Average Weekly Earnings (before tax)</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"awe\"\r\n                      type=\"number\"\r\n                      value={averageWeeklyEarnings}\r\n                      onChange={(e) => setAverageWeeklyEarnings(e.target.value)}\r\n                      className=\"pl-10 dark:bg-gray-700\"\r\n                      placeholder=\"e.g. 500\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                    This is your average gross pay over the 8 weeks before your qualifying week.\r\n                  </p>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate SMP\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"space-y-6\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200\">\r\n                  Your SMP Estimate\r\n                </h2>\r\n                <Card className=\"bg-gradient-to-br from-pink-50 to-pink-100 dark:from-pink-900/50 dark:to-pink-800/50 border-pink-200 dark:border-pink-700\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-pink-900 dark:text-pink-200\">\r\n                      Total Estimated SMP (39 weeks)\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center\">\r\n                    <p className=\"text-4xl font-bold text-pink-800 dark:text-pink-100\">\r\n                      ┬ú<AnimatedNumber value={results.totalSMP} />\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card className=\"bg-white dark:bg-gray-800\">\r\n                  <CardHeader>\r\n                    <CardTitle>Payment Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"p-4 bg-green-50 dark:bg-green-900/30 rounded-lg\">\r\n                      <p className=\"font-bold text-green-800 dark:text-green-200\">First 6 Weeks</p>\r\n                      <p className=\"text-lg font-semibold text-green-900 dark:text-green-100\">\r\n                        ┬ú{results.first6WeeksWeekly.toFixed(2)} per week\r\n                      </p>\r\n                      <p className=\"text-sm text-green-700 dark:text-green-300\">\r\n                        (90% of your average weekly earnings)\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"p-4 bg-purple-50 dark:bg-purple-900/30 rounded-lg\">\r\n                      <p className=\"font-bold text-purple-800 dark:text-purple-200\">\r\n                        Remaining 33 Weeks\r\n                      </p>\r\n                      <p className=\"text-lg font-semibold text-purple-900 dark:text-purple-100\">\r\n                        ┬ú{results.remaining33WeeksWeekly.toFixed(2)} per week\r\n                      </p>\r\n                      <p className=\"text-sm text-purple-700 dark:text-purple-300\">\r\n                        (Statutory flat rate or 90% of earnings, whichever is lower)\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px] bg-white dark:bg-gray-800\">\r\n                <div className=\"text-center text-gray-500 dark:text-gray-400\">\r\n                  <Baby className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Plan your maternity leave finances</h3>\r\n                  <p>Enter your earnings to estimate your pay.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <CalculatorWrapper>\r\n        <div className=\"space-y-6\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n            Understanding Statutory Maternity Pay\r\n          </h2>\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            Statutory Maternity Pay (SMP) is the legal minimum your employer must pay you while\r\n            you're on maternity leave, provided you meet the eligibility criteria. It's designed to\r\n            provide financial support during the 39 weeks of your leave. Understanding your\r\n            entitlement is a crucial first step in budgeting for your growing family.\r\n          </p>\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            The payment structure is split into two parts. For the first 6 weeks, you receive 90% of\r\n            your average weekly earnings (with no upper limit). For the following 33 weeks, you\r\n            receive a flat statutory rate (currently ┬ú{SMP_FLAT_RATE_WEEKLY} per week for 2024/25)\r\n            or 90% of your average weekly earnings, whichever amount is lower.\r\n          </p>\r\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n            When to Use This Calculator\r\n          </h3>\r\n          <ul className=\"list-disc list-inside space-y-2 text-gray-700 dark:text-gray-300\">\r\n            <li>\r\n              <b>When you've just found out you're expecting:</b> To get an early idea of your\r\n              financial situation during leave.\r\n            </li>\r\n            <li>\r\n              <b>When planning your household budget:</b> To accurately forecast your income for the\r\n              months you'll be on leave.\r\n            </li>\r\n            <li>\r\n              <b>When discussing leave with your employer:</b> To understand the baseline statutory\r\n              amount before finding out if your company offers enhanced pay.\r\n            </li>\r\n          </ul>\r\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n            Example Use Case\r\n          </h3>\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            Imagine your average weekly earnings are ┬ú600 before tax. For the first 6 weeks of your\r\n            maternity leave, you would receive 90% of this, which is ┬ú540 per week. For the next 33\r\n            weeks, since 90% of your earnings (┬ú540) is higher than the statutory flat rate (┬ú\r\n            {SMP_FLAT_RATE_WEEKLY}), you would receive the flat rate of ┬ú{SMP_FLAT_RATE_WEEKLY} per\r\n            week. Our calculator totals this up to give you a full 39-week projection, helping you\r\n            plan with confidence.\r\n          </p>\r\n        </div>\r\n      </CalculatorWrapper>\r\n\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 py-12 non-printable\">\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <FAQSection faqs={maternityPayFAQs} />\r\n        </div>\r\n      </div>\r\n\r\n      <RelatedCalculators\r\n        calculators={[\r\n          {\r\n            name: 'Salary Calculator',\r\n            url: '/SalaryCalculator',\r\n            description: 'See how maternity pay affects your annual take-home projections.',\r\n          },\r\n          {\r\n            name: 'Childcare Cost Calculator',\r\n            url: '/ChildcareCostCalculator',\r\n            description: 'Plan for future childcare expenses.',\r\n          },\r\n          {\r\n            name: 'Budget Planner',\r\n            url: '/BudgetCalculator',\r\n            description: 'Create a detailed budget for your growing family.',\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\Methodology.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 20,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\n\r\nexport default function Methodology() {\r\n  const LAST_UPDATED_ISO = '2025-09-10';\r\n  const LAST_UPDATED_DISPLAY = '10 September 2025';\r\n\r\n  const origin =\r\n    typeof window !== 'undefined' ? window.location.origin : 'https://www.calcmymoney.co.uk';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      { '@type': 'ListItem', position: 2, name: 'Methodology', item: `${origin}/Methodology` },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200\">\r\n          <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-12 text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\r\n              Our Methodology & Data Sources\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto mt-3\">\r\n              How we calculate UK salary, tax and mortgage results. Data sources: HMRC 2025/26, Bank\r\n              of England.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-10 space-y-6\">\r\n          <Card>\r\n            <CardContent className=\"p-6 space-y-4\">\r\n              <p>\r\n                At Calculate My Money, accuracy and transparency are core principles. All of our\r\n                calculators are built on official UK sources, and we update them as new figures are\r\n                released. This page explains the rules we use, how frequently we refresh our data,\r\n                and the assumptions behind our estimates.\r\n              </p>\r\n              <p className=\"text-gray-700\">\r\n                While our tools are carefully engineered, they are designed for guidance only and\r\n                should not be relied upon as financial or legal advice. For personal advice, please\r\n                consult a qualified professional, your employer, or your lender.\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Tax Year & Thresholds</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"p-6 space-y-3\">\r\n              <ul className=\"list-disc list-inside space-y-2 text-gray-700\">\r\n                <li>\r\n                  <strong>Current default:</strong> 2025/26 UK tax year\r\n                </li>\r\n                <li>\r\n                  <strong>Data source:</strong>{' '}\r\n                  <a\r\n                    href=\"https://www.gov.uk/guidance/rates-and-allowances-for-income-tax\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"text-blue-600 hover:underline\"\r\n                  >\r\n                    HMRC Income Tax Rates and Allowances\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <strong>Regional support:</strong> calculators reflect both rUK and Scottish tax\r\n                  bands\r\n                </li>\r\n                <li>\r\n                  <strong>National Insurance:</strong> thresholds and rates from{' '}\r\n                  <a\r\n                    href=\"https://www.gov.uk/national-insurance-rates-letters\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"text-blue-600 hover:underline\"\r\n                  >\r\n                    HMRC National Insurance Rates\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Pension & Student Loans</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"p-6 space-y-3\">\r\n              <ul className=\"list-disc list-inside space-y-2 text-gray-700\">\r\n                <li>\r\n                  Pension contributions: calculated on either a relief-at-source or net pay basis\r\n                  (depending on input).\r\n                </li>\r\n                <li>Student loans: Plan 1, Plan 2, Plan 4, and Postgraduate Loans supported.</li>\r\n                <li>\r\n                  Thresholds from{' '}\r\n                  <a\r\n                    href=\"https://www.gov.uk/repaying-your-student-loan/what-you-pay\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"text-blue-600 hover:underline\"\r\n                  >\r\n                    HMRC Student Loan Repayment\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Mortgage & Interest Rates</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"p-6 space-y-3\">\r\n              <ul className=\"list-disc list-inside space-y-2 text-gray-700\">\r\n                <li>Mortgage calculators allow flexible entry of rate, deposit, and term.</li>\r\n                <li>We recommend cross-checking with current lender offers.</li>\r\n                <li>\r\n                  Reference:{' '}\r\n                  <a\r\n                    href=\"https://www.bankofengland.co.uk/monetary-policy/the-interest-rate-bank-rate\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"text-blue-600 hover:underline\"\r\n                  >\r\n                    Bank of England Base Rate\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Assumptions & Rounding</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"p-6 space-y-3\">\r\n              <ul className=\"list-disc list-inside space-y-2 text-gray-700\">\r\n                <li>Results rounded to the nearest ┬ú1 for clarity.</li>\r\n                <li>\r\n                  Annual to monthly/weekly conversions use standard 12-month or 52-week assumptions.\r\n                </li>\r\n                <li>PAYE applied cumulatively across the tax year.</li>\r\n              </ul>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Updates & Maintenance</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"p-6 space-y-2\">\r\n              <p>Figures updated within 1 week of official HMRC or BoE releases.</p>\r\n              <p>\r\n                <strong>Last updated:</strong> {LAST_UPDATED_DISPLAY}\r\n              </p>\r\n              <p>\r\n                <strong>Maintained by:</strong> Calculate My Money Team\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\MinimumWageCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 76,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { PoundSterling, Calculator, Scale, AlertCircle, CheckCircle } from 'lucide-react';\r\n\r\n// Rates for 2024/2025 - check gov.uk for latest figures\r\nconst wageRates = {\r\n  '21+': 11.44,\r\n  '18-20': 8.6,\r\n  'under-18': 6.4,\r\n  apprentice: 6.4,\r\n};\r\n\r\nexport default function MinimumWageCalculator() {\r\n  const [ageGroup, setAgeGroup] = useState('21+');\r\n  const [pay, setPay] = useState('');\r\n  const [hours, setHours] = useState('');\r\n  const [payPeriod, setPayPeriod] = useState('weekly');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = () => {\r\n    const currentPay = Number(pay) || 0;\r\n    const currentHours = Number(hours) || 0;\r\n\r\n    if (currentPay <= 0 || currentHours <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    let effectiveHourlyRate = 0;\r\n    if (payPeriod === 'hourly') {\r\n      effectiveHourlyRate = currentPay;\r\n    } else if (payPeriod === 'weekly') {\r\n      effectiveHourlyRate = currentPay / currentHours;\r\n    } else if (payPeriod === 'monthly') {\r\n      // Approximate weekly hours from monthly\r\n      effectiveHourlyRate = currentPay / (currentHours * 4.333);\r\n    }\r\n\r\n    const minimumRate = wageRates[ageGroup];\r\n    const difference = effectiveHourlyRate - minimumRate;\r\n    const weeklyDifference =\r\n      difference *\r\n      (payPeriod === 'weekly' || payPeriod === 'monthly'\r\n        ? currentHours\r\n        : payPeriod === 'hourly'\r\n          ? 40\r\n          : 0); // Assume 40h week for hourly rate comparison\r\n\r\n    setResults({\r\n      effectiveHourlyRate,\r\n      minimumRate,\r\n      difference,\r\n      weeklyDifference,\r\n    });\r\n    setHasCalculated(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [ageGroup, pay, hours, payPeriod]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              UK Minimum Wage Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Are you being paid correctly? Check your wage against the UK's National Minimum Wage\r\n              and National Living Wage rates.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Pay Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label>Your Age Group</Label>\r\n                  <Select value={ageGroup} onValueChange={setAgeGroup}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"21+\">21 and over (National Living Wage)</SelectItem>\r\n                      <SelectItem value=\"18-20\">18 to 20</SelectItem>\r\n                      <SelectItem value=\"under-18\">Under 18</SelectItem>\r\n                      <SelectItem value=\"apprentice\">Apprentice</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Pay (before tax)</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={pay}\r\n                      onChange={(e) => setPay(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 400\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Hours Worked</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={hours}\r\n                    onChange={(e) => setHours(e.target.value)}\r\n                    placeholder=\"e.g. 40\"\r\n                  />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Pay Period</Label>\r\n                  <Select value={payPeriod} onValueChange={setPayPeriod}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"hourly\">Per Hour</SelectItem>\r\n                      <SelectItem value=\"weekly\">Per Week</SelectItem>\r\n                      <SelectItem value=\"monthly\">Per Month</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Check My Wage\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <Card\r\n                  className={\r\n                    results.difference >= 0\r\n                      ? 'bg-green-50 border-green-200'\r\n                      : 'bg-red-50 border-red-200'\r\n                  }\r\n                >\r\n                  <CardHeader>\r\n                    <CardTitle\r\n                      className={`flex items-center gap-2 ${results.difference >= 0 ? 'text-green-800' : 'text-red-800'}`}\r\n                    >\r\n                      {results.difference >= 0 ? (\r\n                        <CheckCircle className=\"w-6 h-6\" />\r\n                      ) : (\r\n                        <AlertCircle className=\"w-6 h-6\" />\r\n                      )}\r\n                      Pay Assessment\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center\">\r\n                    {results.difference >= 0 ? (\r\n                      <div>\r\n                        <p className=\"text-green-700\">\r\n                          Your effective hourly rate appears to be above the minimum wage.\r\n                        </p>\r\n                        <p className=\"text-4xl font-bold text-green-900 mt-2\">\r\n                          ┬ú{results.effectiveHourlyRate.toFixed(2)}\r\n                        </p>\r\n                        <p className=\"text-gray-600\">\r\n                          Minimum for your age: ┬ú{results.minimumRate.toFixed(2)} per hour\r\n                        </p>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <p className=\"text-red-700\">\r\n                          Your effective hourly rate appears to be <strong>below</strong> the\r\n                          minimum wage.\r\n                        </p>\r\n                        <p className=\"text-4xl font-bold text-red-900 mt-2\">\r\n                          ┬ú{results.effectiveHourlyRate.toFixed(2)}\r\n                        </p>\r\n                        <p className=\"text-gray-600\">\r\n                          Minimum for your age: ┬ú{results.minimumRate.toFixed(2)} per hour\r\n                        </p>\r\n                        <p className=\"text-red-800 font-semibold mt-4\">\r\n                          You may be underpaid by approximately ┬ú\r\n                          {Math.abs(results.weeklyDifference).toFixed(2)} per week.\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>What to do next</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-sm text-gray-700 space-y-3\">\r\n                    <p>\r\n                      This calculator provides an estimate. Certain deductions can affect the\r\n                      calculation.\r\n                    </p>\r\n                    <p>If you believe you are being underpaid:</p>\r\n                    <ul className=\"list-disc list-inside space-y-1\">\r\n                      <li>Speak to your employer first. It could be a simple mistake.</li>\r\n                      <li>\r\n                        Contact ACAS (Advisory, Conciliation and Arbitration Service) for free,\r\n                        impartial advice.\r\n                      </li>\r\n                      <li>\r\n                        You can make a confidential complaint to HMRC, who can investigate on your\r\n                        behalf.\r\n                      </li>\r\n                    </ul>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Scale className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Check your pay</h3>\r\n                  <p>Enter your details to see if you're being paid the correct minimum wage.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\MortgageAffordabilityCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 91,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Users, Home, TrendingDown } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst affordabilityFAQs = [\r\n  {\r\n    question: 'How do lenders calculate mortgage affordability?',\r\n    answer:\r\n      \"Lenders typically use an income multiple, usually around 4 to 4.5 times your annual income. They then subtract existing financial commitments (like loans and credit card debt) and apply 'stress tests' to ensure you could afford repayments if interest rates were to rise.\",\r\n  },\r\n  {\r\n    question: 'What is a Loan-to-Income (LTI) ratio?',\r\n    answer:\r\n      'Loan-to-Income (LTI) is the ratio of the mortgage amount to your gross annual income. For example, borrowing ┬ú200,000 on a ┬ú50,000 salary gives you an LTI of 4. This is a key metric for lenders.',\r\n  },\r\n  {\r\n    question: 'How can I improve my mortgage affordability?',\r\n    answer:\r\n      'You can improve your chances by paying down existing debts, closing unused credit cards, saving for a larger deposit, and checking your credit report for errors. A stable employment history also helps.',\r\n  },\r\n];\r\n\r\nexport default function MortgageAffordabilityCalculator() {\r\n  const [applicant1Income, setApplicant1Income] = useState('');\r\n  const [applicant2Income, setApplicant2Income] = useState('');\r\n  const [deposit, setDeposit] = useState('');\r\n  const [monthlyDebts, setMonthlyDebts] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const inc1 = Number(applicant1Income) || 0;\r\n    const inc2 = Number(applicant2Income) || 0;\r\n    const totalIncome = inc1 + inc2;\r\n    const dep = Number(deposit) || 0;\r\n    const debts = Number(monthlyDebts) || 0;\r\n\r\n    if (totalIncome <= 0 || dep <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    // A more realistic calculation than a simple multiplier\r\n    const annualDebt = debts * 12;\r\n    const disposableForMortgage = Math.max(0, totalIncome - annualDebt * 2); // Lenders heavily weigh debt\r\n    const baseMultiplier = 4.5;\r\n\r\n    // Adjust multiplier based on LTI - simplified model\r\n    const estimatedLTI = (disposableForMortgage * baseMultiplier) / totalIncome;\r\n    let multiplier = baseMultiplier;\r\n    if (estimatedLTI < 4) multiplier = 4.75;\r\n    if (totalIncome > 100000) multiplier = 5.0;\r\n\r\n    const estimatedBorrowing = disposableForMortgage * multiplier;\r\n    const maxPropertyPrice = estimatedBorrowing + dep;\r\n    const loanToIncome = (estimatedBorrowing / totalIncome).toFixed(2);\r\n\r\n    const newResults = {\r\n      estimatedBorrowing,\r\n      maxPropertyPrice,\r\n      deposit: dep,\r\n      loanToIncome,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Estimated Borrowing Amount', `┬ú${newResults.estimatedBorrowing.toFixed(2)}`],\r\n      ['Maximum Property Price', `┬ú${newResults.maxPropertyPrice.toFixed(2)}`],\r\n      ['Your Deposit', `┬ú${newResults.deposit.toFixed(2)}`],\r\n      ['Loan-to-Income (LTI) Ratio', newResults.loanToIncome],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [applicant1Income, applicant2Income, deposit, monthlyDebts]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Mortgage Affordability Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Get a realistic estimate of how much you could borrow for a mortgage based on your\r\n              income and outgoings.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Mortgage Affordability Estimate</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Your Financial Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"applicant1Income\">Applicant 1 Annual Income</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"applicant1Income\"\r\n                      type=\"number\"\r\n                      value={applicant1Income}\r\n                      onChange={(e) => setApplicant1Income(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 45000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"applicant2Income\">Applicant 2 Annual Income (optional)</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"applicant2Income\"\r\n                      type=\"number\"\r\n                      value={applicant2Income}\r\n                      onChange={(e) => setApplicant2Income(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 30000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"deposit\">Your Deposit Amount</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"deposit\"\r\n                      type=\"number\"\r\n                      value={deposit}\r\n                      onChange={(e) => setDeposit(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 25000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"monthlyDebts\">Monthly Debt Repayments</Label>\r\n                  <div className=\"relative\">\r\n                    <TrendingDown className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"monthlyDebts\"\r\n                      type=\"number\"\r\n                      value={monthlyDebts}\r\n                      onChange={(e) => setMonthlyDebts(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 300\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">e.g., loans, credit cards, car finance.</p>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Affordability\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your Affordability Estimate</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"mortgage-affordability\"\r\n                    title=\"Mortgage Affordability\"\r\n                  />\r\n                </div>\r\n                <Card className=\"bg-green-50 border-green-200\">\r\n                  <CardContent className=\"p-6\">\r\n                    <h3 className=\"font-semibold text-green-800 mb-2\">You could borrow up to</h3>\r\n                    <div className=\"text-4xl font-bold text-green-900\">\r\n                      ┬ú\r\n                      {results.estimatedBorrowing.toLocaleString('en-GB', {\r\n                        maximumFractionDigits: 0,\r\n                      })}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Buying Power</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"p-4 bg-blue-50 rounded-lg\">\r\n                      <p className=\"text-sm text-blue-600\">Maximum Property Price</p>\r\n                      <p className=\"text-2xl font-semibold text-blue-800\">\r\n                        ┬ú\r\n                        {results.maxPropertyPrice.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 0,\r\n                        })}\r\n                      </p>\r\n                      <p className=\"text-xs text-blue-500\">\r\n                        (Based on your estimated borrowing plus your deposit of ┬ú\r\n                        {results.deposit.toLocaleString()})\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n                      <p className=\"text-sm text-gray-600\">Your Loan-to-Income (LTI) Ratio</p>\r\n                      <p className=\"text-lg font-semibold\">{results.loanToIncome}</p>\r\n                      <p className=\"text-xs text-gray-500\">\r\n                        Lenders typically cap this around 4.5 to 5.5.\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card className=\"border-yellow-300 bg-yellow-50\">\r\n                  <CardContent className=\"p-6\">\r\n                    <p className=\"text-sm text-yellow-800\">\r\n                      <strong>Disclaimer:</strong> This is an estimate for informational purposes\r\n                      only. Lenders use complex criteria and a full credit check. Always speak to a\r\n                      mortgage advisor for a precise figure.\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">How much can you borrow?</h3>\r\n                  <p>Enter your financial details to get an estimate.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={affordabilityFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\MortgageCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 220,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom'; // Import useLocation\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { PoundSterling, Home, Calculator, TrendingUp, Percent } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport { Button } from '@/components/ui/button'; // Added Button import\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport CalculatorWrapper from '../components/calculators/CalculatorWrapper';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\nimport Breadcrumbs from '../components/general/Breadcrumbs';\r\nimport { createPageUrl } from '@/utils';\r\n\r\nconst mortgageCalculatorJsonLd = {\r\n  '@context': 'https://schema.org',\r\n  '@type': 'WebApplication',\r\n  name: 'UK Mortgage Calculator 2025/26',\r\n  applicationCategory: 'FinanceApplication',\r\n  operatingSystem: 'Web Browser',\r\n  description:\r\n    'Free UK mortgage calculator with stamp duty. Calculate monthly payments, affordability, and total costs for UK property purchases.',\r\n  offers: {\r\n    '@type': 'Offer',\r\n    price: '0',\r\n    priceCurrency: 'GBP',\r\n  },\r\n};\r\n\r\nconst mortgageCalculatorFAQs = [\r\n  {\r\n    question: 'How much can I borrow for a mortgage?',\r\n    answer:\r\n      'UK lenders typically offer 4-4.5 times your annual income, but this depends on affordability assessments including your monthly expenses, credit score, and existing debts. Some lenders may offer up to 5-6 times income in certain circumstances.',\r\n  },\r\n  {\r\n    question: 'What is Loan-to-Value (LTV) and why does it matter?',\r\n    answer:\r\n      \"LTV is the percentage of the property value you're borrowing. A lower LTV (higher deposit) typically gets you better interest rates. For example, 90% LTV means a 10% deposit, while 75% LTV means a 25% deposit.\",\r\n  },\r\n  {\r\n    question: 'What is stamp duty and how much will I pay?',\r\n    answer:\r\n      'Stamp duty is a tax on property purchases in England and Wales. For 2025/26, you pay 5% on the portion between ┬ú250k-┬ú925k, 10% on ┬ú925k-┬ú1.5m, and 12% above ┬ú1.5m. First-time buyers get relief up to ┬ú425k.',\r\n  },\r\n  {\r\n    question: 'Should I choose a fixed or variable rate mortgage?',\r\n    answer:\r\n      'Fixed rates provide payment certainty but may be higher initially. Variable rates can go up or down but offer potential savings if rates fall. Consider your risk tolerance and how long you plan to stay in the property.',\r\n  },\r\n  {\r\n    question: \"What's the difference between capital repayment and interest-only mortgages?\",\r\n    answer:\r\n      'Capital repayment mortgages pay off both the loan and interest, so you own the property outright at the end. Interest-only mortgages have lower monthly payments but you still owe the full loan amount at the end of the term.',\r\n  },\r\n  {\r\n    question: 'What additional costs should I budget for when buying a home?',\r\n    answer:\r\n      'Beyond the deposit and stamp duty, budget for: legal fees (┬ú1,000-┬ú2,000), survey costs (┬ú400-┬ú1,200), mortgage arrangement fees (┬ú0-┬ú2,000), buildings insurance, and moving costs. Allow 3-5% of purchase price for total costs.',\r\n  },\r\n];\r\n\r\nexport default function MortgageCalculator() {\r\n  const [propertyValue, setPropertyValue] = useState('');\r\n  const [deposit, setDeposit] = useState('');\r\n  const [interestRate, setInterestRate] = useState('');\r\n  const [term, setTerm] = useState(25);\r\n  const [repaymentType, setRepaymentType] = useState('repayment');\r\n  const [income, setIncome] = useState('');\r\n  const [monthlyExpenses, setMonthlyExpenses] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [csvData, setCsvData] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false); // New state for tracking calculation attempt\r\n\r\n  const location = useLocation(); // Get location object\r\n\r\n  const breadcrumbPath = [\r\n    { name: 'Home', url: createPageUrl('Home') },\r\n    { name: 'Property & Mortgages', url: `${createPageUrl('Home')}#property-mortgages` },\r\n    { name: 'Mortgage Calculator' },\r\n  ];\r\n\r\n  // Effect to scroll to section from URL hash\r\n  useEffect(() => {\r\n    if (location.hash) {\r\n      const id = location.hash.substring(1); // remove #\r\n      setTimeout(() => {\r\n        const element = document.getElementById(id);\r\n        if (element) {\r\n          element.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        }\r\n      }, 100); // Small delay to ensure page has rendered\r\n    }\r\n  }, [location]);\r\n\r\n  const handleCalculate = () => {\r\n    // Renamed from calculateMortgage\r\n    const currentPropertyValue = Number(propertyValue) || 0;\r\n    const currentDeposit = Number(deposit) || 0;\r\n    const currentInterestRate = Number(interestRate) || 0;\r\n    const currentTerm = Number(term) || 0;\r\n    const currentIncome = Number(income) || 0;\r\n    const currentMonthlyExpenses = Number(monthlyExpenses) || 0;\r\n\r\n    const loanAmount = currentPropertyValue - currentDeposit;\r\n\r\n    // Validate inputs for meaningful calculation\r\n    if (\r\n      currentPropertyValue <= 0 ||\r\n      currentDeposit < 0 ||\r\n      loanAmount <= 0 ||\r\n      currentInterestRate <= 0 ||\r\n      currentTerm <= 0\r\n    ) {\r\n      setResults(null);\r\n      setHasCalculated(true); // Indicate calculation was attempted but inputs were invalid\r\n      return;\r\n    }\r\n\r\n    const monthlyRate = currentInterestRate / 100 / 12;\r\n    const numPayments = currentTerm * 12;\r\n    const depositPercentage = (currentDeposit / currentPropertyValue) * 100;\r\n\r\n    let monthlyPayment = 0;\r\n    let totalInterest = 0;\r\n    let totalPayable = 0;\r\n\r\n    if (repaymentType === 'repayment') {\r\n      // Capital and Interest\r\n      if (monthlyRate > 0) {\r\n        monthlyPayment =\r\n          (loanAmount * (monthlyRate * Math.pow(1 + monthlyRate, numPayments))) /\r\n          (Math.pow(1 + monthlyRate, numPayments) - 1);\r\n      } else {\r\n        monthlyPayment = loanAmount / numPayments;\r\n      }\r\n      totalPayable = monthlyPayment * numPayments;\r\n      totalInterest = totalPayable - loanAmount;\r\n    } else {\r\n      // Interest Only\r\n      monthlyPayment = (loanAmount * currentInterestRate) / 100 / 12;\r\n      totalInterest = monthlyPayment * numPayments;\r\n      totalPayable = totalInterest + loanAmount;\r\n    }\r\n\r\n    // Affordability calculations\r\n    const maxAffordableMortgage = currentIncome * 4.5; // Common UK multiplier\r\n    const monthlyIncome = currentIncome / 12;\r\n    const disposableIncome = monthlyIncome - currentMonthlyExpenses;\r\n    const loanToValue = (loanAmount / currentPropertyValue) * 100;\r\n\r\n    // Stamp duty calculation (England & Wales) - Updated tiers based on outline\r\n    let stampDuty = 0;\r\n    if (currentPropertyValue > 250000) {\r\n      stampDuty += Math.min(currentPropertyValue - 250000, 925000 - 250000) * 0.05;\r\n    }\r\n    if (currentPropertyValue > 925000) {\r\n      stampDuty += Math.min(currentPropertyValue - 925000, 1500000 - 925000) * 0.1;\r\n    }\r\n    if (currentPropertyValue > 1500000) {\r\n      stampDuty += (currentPropertyValue - 1500000) * 0.12;\r\n    }\r\n\r\n    // Additional costs\r\n    const legalFees = 1500; // Average\r\n    const surveyFees = 600; // Average\r\n    const totalUpfrontCosts = currentDeposit + stampDuty + legalFees + surveyFees;\r\n\r\n    const newResults = {\r\n      loanAmount,\r\n      monthlyPayment,\r\n      totalInterest,\r\n      totalPayable,\r\n      depositPercentage,\r\n      loanToValue,\r\n      maxAffordableMortgage,\r\n      disposableIncome,\r\n      stampDuty,\r\n      totalUpfrontCosts,\r\n      affordabilityRatio: (monthlyPayment / monthlyIncome) * 100,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true); // Set to true after a successful calculation\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Property Value', `┬ú${currentPropertyValue.toFixed(2)}`],\r\n      ['Deposit Amount', `┬ú${currentDeposit.toFixed(2)}`],\r\n      ['Loan Amount', `┬ú${newResults.loanAmount.toFixed(2)}`],\r\n      ['Interest Rate', `${currentInterestRate.toFixed(2)}%`],\r\n      ['Mortgage Term', `${currentTerm} years`],\r\n      ['', ''],\r\n      ['Monthly Payment', `┬ú${newResults.monthlyPayment.toFixed(2)}`],\r\n      ['Total Interest Paid', `┬ú${newResults.totalInterest.toFixed(2)}`],\r\n      ['Total Payable', `┬ú${newResults.totalPayable.toFixed(2)}`],\r\n      ['', ''],\r\n      ['Stamp Duty', `┬ú${newResults.stampDuty.toFixed(2)}`],\r\n      ['Estimated Legal & Survey Fees', `┬ú2100.00`],\r\n      ['Total Upfront Costs', `┬ú${newResults.totalUpfrontCosts.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Clear results and reset calculation status when any input changes\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n    setCsvData(null);\r\n  }, [propertyValue, deposit, interestRate, term, repaymentType, income, monthlyExpenses]);\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(mortgageCalculatorJsonLd)}</script>\r\n\r\n      <div className=\"bg-white dark:bg-gray-900\">\r\n        {/* Page Header */}\r\n        <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n            <Breadcrumbs path={breadcrumbPath} />\r\n            <div className=\"text-center\">\r\n              <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n                UK Mortgage Calculator\r\n              </h1>\r\n              <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n                Calculate UK mortgage payments, affordability, and stamp duty costs. Free mortgage\r\n                calculator for England, Wales, Scotland & Northern Ireland property purchases.\r\n              </p>\r\n              <div className=\"mt-6 text-sm text-gray-500 dark:text-gray-400 max-w-4xl mx-auto\">\r\n                <p>\r\n                  Includes stamp duty calculator ÔÇó Affordability assessment ÔÇó Interest-only &\r\n                  repayment mortgages ÔÇó Updated 2025/26 rates\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Calculator Content */}\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"print-title hidden\">Mortgage Calculation Results</div>\r\n\r\n          <div className=\"grid lg:grid-cols-3 gap-8 printable-grid-cols-1\">\r\n            {/* Input Panel */}\r\n            <div className=\"lg:col-span-1 space-y-6 non-printable\">\r\n              <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Home className=\"w-5 h-5\" />\r\n                    Property Details\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"propertyValue\">Property Value</Label>\r\n                    <div className=\"relative\">\r\n                      <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                      <Input\r\n                        id=\"propertyValue\"\r\n                        type=\"number\"\r\n                        value={propertyValue}\r\n                        onChange={(e) => setPropertyValue(e.target.value)}\r\n                        className=\"pl-10\"\r\n                        placeholder=\"e.g. 300000\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"deposit\">Deposit Amount</Label>\r\n                    <div className=\"relative\">\r\n                      <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                      <Input\r\n                        id=\"deposit\"\r\n                        type=\"number\"\r\n                        value={deposit}\r\n                        onChange={(e) => setDeposit(e.target.value)}\r\n                        className=\"pl-10\"\r\n                        placeholder=\"e.g. 60000\"\r\n                      />\r\n                    </div>\r\n                    <p className=\"text-xs text-gray-500 h-4\">\r\n                      {propertyValue && deposit && Number(propertyValue) > 0\r\n                        ? `${((Number(deposit) / Number(propertyValue)) * 100).toFixed(1)}% of property value`\r\n                        : ''}\r\n                    </p>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Calculator className=\"w-5 h-5\" />\r\n                    Mortgage Details\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"interestRate\">Interest Rate (%)</Label>\r\n                    <div className=\"relative\">\r\n                      <Percent className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                      <Input\r\n                        id=\"interestRate\"\r\n                        type=\"number\"\r\n                        value={interestRate}\r\n                        onChange={(e) => setInterestRate(e.target.value)}\r\n                        className=\"pl-10\"\r\n                        step=\"0.1\"\r\n                        placeholder=\"e.g. 4.5\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"term\">Mortgage Term (Years)</Label>\r\n                    <Select\r\n                      value={term.toString()}\r\n                      onValueChange={(value) => setTerm(Number(value))}\r\n                    >\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"15\">15 years</SelectItem>\r\n                        <SelectItem value=\"20\">20 years</SelectItem>\r\n                        <SelectItem value=\"25\">25 years</SelectItem>\r\n                        <SelectItem value=\"30\">30 years</SelectItem>\r\n                        <SelectItem value=\"35\">35 years</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"repaymentType\">Repayment Type</Label>\r\n                    <Select value={repaymentType} onValueChange={setRepaymentType}>\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"repayment\">Capital & Interest</SelectItem>\r\n                        <SelectItem value=\"interest_only\">Interest Only</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <TrendingUp className=\"w-5 h-5\" />\r\n                    Affordability Check\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"income\">Annual Gross Income</Label>\r\n                    <div className=\"relative\">\r\n                      <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                      <Input\r\n                        id=\"income\"\r\n                        type=\"number\"\r\n                        value={income}\r\n                        onChange={(e) => setIncome(e.target.value)}\r\n                        className=\"pl-10\"\r\n                        placeholder=\"e.g. 50000\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"monthlyExpenses\">Monthly Expenses</Label>\r\n                    <div className=\"relative\">\r\n                      <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                      <Input\r\n                        id=\"monthlyExpenses\"\r\n                        type=\"number\"\r\n                        value={monthlyExpenses}\r\n                        onChange={(e) => setMonthlyExpenses(e.target.value)}\r\n                        className=\"pl-10\"\r\n                        placeholder=\"e.g. 1500\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <Button onClick={handleCalculate} className=\"w-full text-lg !mt-6\">\r\n                    <Calculator className=\"w-5 h-5 mr-2\" />\r\n                    Calculate Mortgage\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            {/* Results Panel */}\r\n            <div className=\"lg:col-span-2 space-y-6 printable-area\">\r\n              {hasCalculated && results ? ( // Conditionally render results\r\n                <>\r\n                  <div className=\"flex justify-between items-center non-printable\">\r\n                    <h2 className=\"text-2xl font-bold text-gray-800\">Your Mortgage Summary</h2>\r\n                  </div>\r\n                  {/* Summary Cards */}\r\n                  <div className=\"grid md:grid-cols-3 gap-4\">\r\n                    <Card className=\"bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/50 dark:to-blue-800/50 border-blue-200 dark:border-blue-700\">\r\n                      <CardContent className=\"p-6\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div>\r\n                            <p className=\"text-sm font-medium text-blue-800\">Monthly Payment</p>\r\n                            <p className=\"text-2xl font-bold text-blue-900\">\r\n                              ┬ú\r\n                              {results.monthlyPayment?.toLocaleString('en-GB', {\r\n                                maximumFractionDigits: 0,\r\n                              })}\r\n                            </p>\r\n                          </div>\r\n                          <Home className=\"w-8 h-8 text-blue-600\" />\r\n                        </div>\r\n                        <p className=\"text-xs text-blue-700 mt-1\">\r\n                          {repaymentType === 'repayment' ? 'Capital & Interest' : 'Interest Only'}\r\n                        </p>\r\n                      </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/50 dark:to-green-800/50 border-green-200 dark:border-green-700\">\r\n                      <CardContent className=\"p-6\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div>\r\n                            <p className=\"text-sm font-medium text-green-800\">Loan Amount</p>\r\n                            <p className=\"text-2xl font-bold text-green-900\">\r\n                              ┬ú\r\n                              {results.loanAmount?.toLocaleString('en-GB', {\r\n                                maximumFractionDigits: 0,\r\n                              })}\r\n                            </p>\r\n                          </div>\r\n                          <Calculator className=\"w-8 h-8 text-green-600\" />\r\n                        </div>\r\n                        <p className=\"text-xs text-green-700 mt-1\">\r\n                          {results.loanToValue?.toFixed(1)}% Loan-to-Value\r\n                        </p>\r\n                      </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"bg-gradient-to-br from-purple-50 to-purple-100 dark:from-purple-900/50 dark:to-purple-800/50 border-purple-200 dark:border-purple-700\">\r\n                      <CardContent className=\"p-6\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div>\r\n                            <p className=\"text-sm font-medium text-purple-800\">Total Interest</p>\r\n                            <p className=\"text-2xl font-bold text-purple-900\">\r\n                              ┬ú\r\n                              {results.totalInterest?.toLocaleString('en-GB', {\r\n                                maximumFractionDigits: 0,\r\n                              })}\r\n                            </p>\r\n                          </div>\r\n                          <Percent className=\"w-8 h-8 text-purple-600\" />\r\n                        </div>\r\n                        <p className=\"text-xs text-purple-700 mt-1\">Over {term} years</p>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </div>\r\n\r\n                  {/* Affordability Assessment */}\r\n                  <Card\r\n                    id=\"affordability-assessment\"\r\n                    className={`${results.affordabilityRatio > 45 ? 'bg-red-50 dark:bg-red-900/30 border-red-200 dark:border-red-700' : results.affordabilityRatio > 35 ? 'bg-yellow-50 dark:bg-yellow-900/30 border-yellow-200 dark:border-yellow-700' : 'bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700'}`}\r\n                  >\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2\">\r\n                        <TrendingUp className=\"w-5 h-5\" />\r\n                        Affordability Assessment\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"grid md:grid-cols-2 gap-6\">\r\n                        <div className=\"space-y-3\">\r\n                          <div className=\"flex justify-between\">\r\n                            <span>Monthly Income:</span>\r\n                            <span className=\"font-semibold\">\r\n                              ┬ú{(income / 12).toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"flex justify-between\">\r\n                            <span>Monthly Expenses:</span>\r\n                            <span className=\"font-semibold\">\r\n                              -┬ú\r\n                              {monthlyExpenses.toLocaleString('en-GB', {\r\n                                maximumFractionDigits: 0,\r\n                              })}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"flex justify-between\">\r\n                            <span>Mortgage Payment:</span>\r\n                            <span className=\"font-semibold\">\r\n                              -┬ú\r\n                              {results.monthlyPayment?.toLocaleString('en-GB', {\r\n                                maximumFractionDigits: 0,\r\n                              })}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"flex justify-between border-t pt-2\">\r\n                            <span>Remaining:</span>\r\n                            <span\r\n                              className={`font-bold ${results.disposableIncome - results.monthlyPayment >= 0 ? 'text-green-600' : 'text-red-600'}`}\r\n                            >\r\n                              ┬ú\r\n                              {(results.disposableIncome - results.monthlyPayment)?.toLocaleString(\r\n                                'en-GB',\r\n                                { maximumFractionDigits: 0 }\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"space-y-3\">\r\n                          <div className=\"flex justify-between\">\r\n                            <span>Payment-to-Income Ratio:</span>\r\n                            <span\r\n                              className={`font-semibold ${results.affordabilityRatio > 45 ? 'text-red-600' : results.affordabilityRatio > 35 ? 'text-yellow-600' : 'text-green-600'}`}\r\n                            >\r\n                              {results.affordabilityRatio?.toFixed(1)}%\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"flex justify-between\">\r\n                            <span>Max Affordable Loan:</span>\r\n                            <span className=\"font-semibold\">\r\n                              ┬ú\r\n                              {results.maxAffordableMortgage?.toLocaleString('en-GB', {\r\n                                maximumFractionDigits: 0,\r\n                              })}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"flex justify-between\">\r\n                            <span>Current Loan Amount:</span>\r\n                            <span\r\n                              className={`font-semibold ${results.loanAmount > results.maxAffordableMortgage ? 'text-red-600' : 'text-green-600'}`}\r\n                            >\r\n                              ┬ú\r\n                              {results.loanAmount?.toLocaleString('en-GB', {\r\n                                maximumFractionDigits: 0,\r\n                              })}\r\n                            </span>\r\n                          </div>\r\n\r\n                          {results.affordabilityRatio > 45 && (\r\n                            <div className=\"p-3 bg-red-100 rounded-lg mt-3\">\r\n                              <p className=\"text-sm text-red-800\">\r\n                                ÔÜá´©Å Payment ratio exceeds recommended 45% - consider a lower loan\r\n                                amount\r\n                              </p>\r\n                            </div>\r\n                          )}\r\n\r\n                          {results.loanAmount > results.maxAffordableMortgage && (\r\n                            <div className=\"p-3 bg-yellow-100 rounded-lg mt-3\">\r\n                              <p className=\"text-sm text-yellow-800\">\r\n                                ­ƒÆí Loan exceeds typical 4.5x income multiplier\r\n                              </p>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  {/* Cost Breakdown */}\r\n                  <Card\r\n                    id=\"cost-breakdown\"\r\n                    className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\"\r\n                  >\r\n                    <CardHeader>\r\n                      <CardTitle>Cost Breakdown</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        <div className=\"grid md:grid-cols-2 gap-6\">\r\n                          <div className=\"space-y-3\">\r\n                            <h4 className=\"font-semibold text-gray-900\">Upfront Costs</h4>\r\n                            <div className=\"space-y-2 text-sm\">\r\n                              <div className=\"flex justify-between\">\r\n                                <span>Deposit ({results.depositPercentage?.toFixed(1)}%):</span>\r\n                                <span>\r\n                                  ┬ú\r\n                                  {Number(deposit).toLocaleString('en-GB', {\r\n                                    maximumFractionDigits: 0,\r\n                                  })}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"flex justify-between\">\r\n                                <span>Stamp Duty:</span>\r\n                                <span>\r\n                                  ┬ú\r\n                                  {results.stampDuty?.toLocaleString('en-GB', {\r\n                                    maximumFractionDigits: 0,\r\n                                  })}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"flex justify-between\">\r\n                                <span>Legal Fees (est.):</span>\r\n                                <span>┬ú1,500</span>\r\n                              </div>\r\n                              <div className=\"flex justify-between\">\r\n                                <span>Survey Fees (est.):</span>\r\n                                <span>┬ú600</span>\r\n                              </div>\r\n                              <div className=\"flex justify-between border-t pt-2 font-semibold\">\r\n                                <span>Total Upfront:</span>\r\n                                <span>\r\n                                  ┬ú\r\n                                  {results.totalUpfrontCosts?.toLocaleString('en-GB', {\r\n                                    maximumFractionDigits: 0,\r\n                                  })}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"space-y-3\">\r\n                            <h4 className=\"font-semibold text-gray-900\">Lifetime Costs</h4>\r\n                            <div className=\"space-y-2 text-sm\">\r\n                              <div className=\"flex justify-between\">\r\n                                <span>Loan Amount:</span>\r\n                                <span>\r\n                                  ┬ú\r\n                                  {results.loanAmount?.toLocaleString('en-GB', {\r\n                                    maximumFractionDigits: 0,\r\n                                  })}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"flex justify-between\">\r\n                                <span>Total Interest:</span>\r\n                                <span>\r\n                                  ┬ú\r\n                                  {results.totalInterest?.toLocaleString('en-GB', {\r\n                                    maximumFractionDigits: 0,\r\n                                  })}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"flex justify-between\">\r\n                                <span>Monthly Payment:</span>\r\n                                <span>\r\n                                  ┬ú\r\n                                  {results.monthlyPayment?.toLocaleString('en-GB', {\r\n                                    maximumFractionDigits: 0,\r\n                                  })}\r\n                                </span>\r\n                              </div>\r\n                              {repaymentType === 'interest_only' && (\r\n                                <div className=\"flex justify-between text-red-600\">\r\n                                  <span>Final Balloon Payment:</span>\r\n                                  <span>\r\n                                    ┬ú\r\n                                    {results.loanAmount?.toLocaleString('en-GB', {\r\n                                      maximumFractionDigits: 0,\r\n                                    })}\r\n                                  </span>\r\n                                </div>\r\n                              )}\r\n                              <div className=\"flex justify-between border-t pt-2 font-semibold\">\r\n                                <span>Total Payable:</span>\r\n                                <span>\r\n                                  ┬ú\r\n                                  {results.totalPayable?.toLocaleString('en-GB', {\r\n                                    maximumFractionDigits: 0,\r\n                                  })}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  {/* Important Notes */}\r\n                  <Card className=\"bg-blue-50 dark:bg-blue-900/30 border-blue-200 dark:border-blue-700\">\r\n                    <CardHeader>\r\n                      <CardTitle className=\"text-blue-900\">Important Information</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"text-sm text-blue-800\">\r\n                      <ul className=\"space-y-2\">\r\n                        <li>\r\n                          ­ƒÅá <strong>Stamp Duty:</strong> Calculated for England & Wales. Scotland\r\n                          and Northern Ireland have different rates.\r\n                        </li>\r\n                        <li>\r\n                          ­ƒôè <strong>LTV Ratio:</strong> Lower ratios typically qualify for better\r\n                          interest rates\r\n                        </li>\r\n                        <li>\r\n                          ­ƒÆ░ <strong>Affordability:</strong> Lenders typically offer 4-4.5x annual\r\n                          income, subject to affordability tests\r\n                        </li>\r\n                        <li>\r\n                          ­ƒôê <strong>Interest Only:</strong> Remember you'll still owe the full loan\r\n                          amount at the end of the term\r\n                        </li>\r\n                        <li>\r\n                          ÔÜû´©Å <strong>Additional Costs:</strong> Consider buildings insurance,\r\n                          mortgage protection, and ongoing maintenance\r\n                        </li>\r\n                        <li>\r\n                          ­ƒô× <strong>Professional Advice:</strong> Consult a mortgage advisor for\r\n                          personalized recommendations\r\n                        </li>\r\n                      </ul>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  <div className=\"non-printable pt-6\">\r\n                    <ExportActions\r\n                      csvData={csvData}\r\n                      fileName=\"mortgage-summary\"\r\n                      title=\"Mortgage Summary\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                // Placeholder if no calculation has occurred or results are null\r\n                <Card className=\"lg:col-span-2 flex items-center justify-center h-[400px] bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <div className=\"text-center text-gray-500\">\r\n                    <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                    <h3 className=\"text-xl font-semibold\">Ready for your mortgage estimate?</h3>\r\n                    <p>Fill in the details and click \"Calculate Mortgage\" to see your breakdown.</p>\r\n                    {hasCalculated &&\r\n                      !results && ( // Display error message if calculation was attempted but results are null\r\n                        <p className=\"text-red-500 mt-2\">\r\n                          Please ensure all required fields are filled and valid (e.g., property\r\n                          value, deposit, interest rate, term, and loan amount is positive).\r\n                        </p>\r\n                      )}\r\n                  </div>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <CalculatorWrapper>\r\n          <div className=\"space-y-6\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n              How to Use the UK Mortgage Calculator\r\n            </h2>\r\n            <p className=\"text-gray-700 dark:text-gray-300\">\r\n              A mortgage is typically the largest financial commitment you'll ever make. Our UK\r\n              Mortgage Calculator is a powerful tool designed to give you clarity and confidence by\r\n              estimating your monthly mortgage repayments. By entering the property price, your\r\n              deposit amount, the mortgage interest rate, and the loan term, you can instantly see\r\n              your potential monthly costs. This allows you to assess the affordability of a\r\n              property, compare different mortgage deals, and understand the long-term financial\r\n              implications of your homeownership journey.\r\n            </p>\r\n\r\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n              When Should You Use This Calculator?\r\n            </h3>\r\n            <ul className=\"list-disc list-inside space-y-2 text-gray-700 dark:text-gray-300\">\r\n              <li>\r\n                <b>Early-Stage House Hunting:</b> Get a feel for what you can afford before you\r\n                start viewing properties.\r\n              </li>\r\n              <li>\r\n                <b>Comparing Mortgage Deals:</b> Enter details from different lenders to see how a\r\n                small change in interest rate can affect your monthly payment.\r\n              </li>\r\n              <li>\r\n                <b>Considering Overpayments:</b> See how much you could save on interest by paying\r\n                more than the required amount each month.\r\n              </li>\r\n              <li>\r\n                <b>Choosing a Mortgage Term:</b> Understand the trade-off between a shorter term\r\n                (higher monthly payments, less total interest) and a longer term (lower monthly\r\n                payments, more total interest).\r\n              </li>\r\n            </ul>\r\n\r\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n              Example Use Case\r\n            </h3>\r\n            <p className=\"text-gray-700 dark:text-gray-300\">\r\n              A couple is looking to buy a house valued at ┬ú300,000. They have saved a 15% deposit\r\n              of ┬ú45,000, meaning they need to borrow ┬ú255,000. They have been offered a mortgage\r\n              with a 4.5% interest rate over a 30-year term. They enter these values into the\r\n              calculator. The result shows a monthly repayment of approximately ┬ú1,292. The\r\n              amortization chart reveals that in the early years, a large portion of their payment\r\n              goes towards interest, but this gradually shifts towards paying down the principal\r\n              loan amount over time. This information helps them confidently confirm that the\r\n              property fits within their monthly budget.\r\n            </p>\r\n          </div>\r\n        </CalculatorWrapper>\r\n\r\n        <div id=\"faq-section\" className=\"bg-gray-50 dark:bg-gray-800/50 py-12 non-printable\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={mortgageCalculatorFAQs} />\r\n          </div>\r\n        </div>\r\n\r\n        <RelatedCalculators\r\n          calculators={[\r\n            {\r\n              name: 'Stamp Duty Calculator',\r\n              url: createPageUrl('StampDutyCalculator'),\r\n              description: 'Calculate the property tax due on your purchase.',\r\n            },\r\n            {\r\n              name: 'Rent vs Buy Calculator',\r\n              url: createPageUrl('RentVsBuyCalculator'),\r\n              description: 'Compare the financial costs of renting versus buying a home.',\r\n            },\r\n            {\r\n              name: 'Mortgage Affordability Calculator',\r\n              url: createPageUrl('MortgageAffordabilityCalculator'),\r\n              description: 'Estimate how much you might be able to borrow.',\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\MortgageCalculatorUK.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 43,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\n\r\nexport default function MortgageCalculatorUK() {\r\n  const origin = typeof window !== 'undefined' ? window.location.origin : '';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Mortgage Calculators Hub',\r\n        item: `${origin}/MortgageCalculatorUK`,\r\n      },\r\n    ],\r\n  };\r\n  const faqs = [\r\n    {\r\n      question: 'What inputs do the mortgage tools use?',\r\n      answer: 'Rate, term, deposit, and loan amount; some include fees and overpayments.',\r\n    },\r\n    {\r\n      question: 'Where do rates come from?',\r\n      answer:\r\n        'We recommend cross-checking offers; refer to the Bank of England base rate for context.',\r\n    },\r\n  ];\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: faqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <script type=\"application/ld+json\">{JSON.stringify(faqJson)}</script>\r\n\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\r\n              UK Mortgage Calculators Hub\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto mt-3\">\r\n              Explore UK mortgage tools: repayment, comparison, and home loan calculators.\r\n            </p>\r\n\r\n            <div className=\"mt-6 flex flex-wrap justify-center gap-2\">\r\n              <Link\r\n                to={createPageUrl('MortgageLoanRepayment')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                Mortgage Loan Repayment\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('HomeLoanMortgageCalculator')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                Home Loan Mortgage\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('MortgageComparison')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                Mortgage Comparison\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('PersonalLoanCalculator')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                Personal Loan Calculator\r\n              </Link>\r\n            </div>\r\n\r\n            {/* Affiliate CTA placeholder */}\r\n            <div className=\"mt-6\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"inline-block px-5 py-3 rounded-md bg-blue-600 text-white hover:bg-blue-700\"\r\n              >\r\n                Check partner mortgage rates (coming soon)\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-10 grid md:grid-cols-2 gap-6\">\r\n          {[\r\n            {\r\n              name: 'Mortgage Loan Repayment',\r\n              url: createPageUrl('MortgageLoanRepayment'),\r\n              desc: 'Estimate monthly repayments across a range of interest rates.',\r\n            },\r\n            {\r\n              name: 'Home Loan Mortgage Calculator',\r\n              url: createPageUrl('HomeLoanMortgageCalculator'),\r\n              desc: 'Quick home loan estimates with deposit and term options.',\r\n            },\r\n            {\r\n              name: 'Mortgage Comparison',\r\n              url: createPageUrl('MortgageComparison'),\r\n              desc: 'Compare two mortgage offers side-by-side.',\r\n            },\r\n            {\r\n              name: 'Personal Loan Calculator',\r\n              url: createPageUrl('PersonalLoanCalculator'),\r\n              desc: 'Estimate payments for unsecured personal loans.',\r\n            },\r\n          ].map((c, i) => (\r\n            <Link key={i} to={c.url}>\r\n              <Card className=\"hover:shadow-md transition\">\r\n                <CardContent className=\"p-6\">\r\n                  <h3 className=\"font-semibold text-lg text-gray-900\">{c.name}</h3>\r\n                  <p className=\"text-gray-600 mt-2\">{c.desc}</p>\r\n                </CardContent>\r\n              </Card>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\MortgageComparison.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 44,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\n\r\nexport default function MortgageComparison() {\r\n  const origin = typeof window !== 'undefined' ? window.location.origin : '';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Mortgage Calculators Hub',\r\n        item: `${origin}/MortgageCalculatorUK`,\r\n      },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 3,\r\n        name: 'Mortgage Comparison',\r\n        item: `${origin}/MortgageComparison`,\r\n      },\r\n    ],\r\n  };\r\n  const faqs = [\r\n    {\r\n      question: 'What can I compare?',\r\n      answer: 'Compare rate, term, fees and total repayable between two mortgage offers.',\r\n    },\r\n  ];\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: faqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <script type=\"application/ld+json\">{JSON.stringify(faqJson)}</script>\r\n\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200 text-center py-10\">\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\r\n            Mortgage Comparison Calculator\r\n          </h1>\r\n          <p className=\"text-gray-600 mt-2\">Compare two mortgage deals and see the total cost.</p>\r\n          <div className=\"mt-4 flex flex-wrap justify-center gap-2\">\r\n            <Link\r\n              to={createPageUrl('MortgageCalculatorUK')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Mortgage Hub\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('MortgageLoanRepayment')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Mortgage Repayment\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('HomeLoanMortgageCalculator')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Home Loan Calculator\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10\">\r\n          <div className=\"p-6 bg-gray-50 border rounded\">\r\n            <p className=\"text-gray-700\">\r\n              Calculator coming soon. Use our main Mortgage Calculator for immediate repayment\r\n              estimates.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"mt-12\">\r\n            <RelatedCalculators\r\n              calculators={[\r\n                {\r\n                  name: 'Back to Mortgage Hub',\r\n                  url: createPageUrl('MortgageCalculatorUK'),\r\n                  description: 'Explore all mortgage tools.',\r\n                },\r\n                {\r\n                  name: 'Mortgage Loan Repayment',\r\n                  url: createPageUrl('MortgageLoanRepayment'),\r\n                  description: 'Monthly payments.',\r\n                },\r\n                {\r\n                  name: 'Home Loan Mortgage Calculator',\r\n                  url: createPageUrl('HomeLoanMortgageCalculator'),\r\n                  description: 'Quick estimates.',\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\MortgageLoanRepayment.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 44,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\n\r\nexport default function MortgageLoanRepayment() {\r\n  const origin = typeof window !== 'undefined' ? window.location.origin : '';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Mortgage Calculators Hub',\r\n        item: `${origin}/MortgageCalculatorUK`,\r\n      },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 3,\r\n        name: 'Mortgage Loan Repayment',\r\n        item: `${origin}/MortgageLoanRepayment`,\r\n      },\r\n    ],\r\n  };\r\n  const faqs = [\r\n    {\r\n      question: 'What inputs are needed?',\r\n      answer: 'Loan amount, rate and term. You can extend to include fees and overpayments later.',\r\n    },\r\n  ];\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: faqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <script type=\"application/ld+json\">{JSON.stringify(faqJson)}</script>\r\n\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200 text-center py-10\">\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\r\n            Mortgage Loan Repayment Calculator\r\n          </h1>\r\n          <p className=\"text-gray-600 mt-2\">Estimate your monthly repayments and total interest.</p>\r\n          <div className=\"mt-4 flex flex-wrap justify-center gap-2\">\r\n            <Link\r\n              to={createPageUrl('MortgageCalculatorUK')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Mortgage Hub\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('MortgageComparison')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Mortgage Comparison\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('HomeLoanMortgageCalculator')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Home Loan Calculator\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10\">\r\n          <div className=\"p-6 bg-gray-50 border rounded\">\r\n            <p className=\"text-gray-700\">\r\n              Calculator coming soon. Try our main Mortgage Calculator for full results and exports.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"mt-12\">\r\n            <RelatedCalculators\r\n              calculators={[\r\n                {\r\n                  name: 'Back to Mortgage Hub',\r\n                  url: createPageUrl('MortgageCalculatorUK'),\r\n                  description: 'Explore all mortgage tools.',\r\n                },\r\n                {\r\n                  name: 'Compare two mortgage offers',\r\n                  url: createPageUrl('MortgageComparison'),\r\n                  description: 'See which deal costs less.',\r\n                },\r\n                {\r\n                  name: 'Home Loan Mortgage Calculator',\r\n                  url: createPageUrl('HomeLoanMortgageCalculator'),\r\n                  description: 'Quick calculations.',\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\MortgageRepaymentCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 95,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { PoundSterling, Calculator, Home } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\nexport default function MortgageRepaymentCalculator() {\r\n  const [loanAmount, setLoanAmount] = useState('250000');\r\n  const [interestRate, setInterestRate] = useState('5');\r\n  const [loanTerm, setLoanTerm] = useState('30');\r\n  const [results, setResults] = useState(null);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  // Updated to accept monthlyPayment as an argument and handle final payment precision\r\n  const generateAmortizationSchedule = (loanAmount, monthlyRate, term, monthlyPayment) => {\r\n    const schedule = [];\r\n    let balance = loanAmount;\r\n\r\n    for (let month = 1; month <= term; month++) {\r\n      const interestPayment = balance * monthlyRate;\r\n      let principalPayment = monthlyPayment - interestPayment;\r\n\r\n      // Adjust for floating point inaccuracies and ensure last payment zeroes out balance\r\n      if (month === term) {\r\n        principalPayment = balance; // On the last month, principal should be exactly the remaining balance\r\n      } else if (principalPayment > balance) {\r\n        // In case of slight floating point error making principal payment larger than remaining balance\r\n        principalPayment = balance;\r\n      }\r\n\r\n      balance -= principalPayment;\r\n\r\n      // Ensure remaining balance doesn't show tiny negative numbers due to floating point\r\n      const remainingBalance = balance < 0.01 && balance > -0.01 ? 0 : balance;\r\n\r\n      schedule.push({\r\n        month,\r\n        'Remaining Balance': remainingBalance,\r\n        'Principal Payment': principalPayment,\r\n        'Interest Payment': interestPayment,\r\n      });\r\n    }\r\n    return schedule;\r\n  };\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const amount = Number(loanAmount) || 0;\r\n    const rate = Number(interestRate) / 100;\r\n    const termYears = Number(loanTerm) || 0;\r\n    const termMonths = termYears * 12;\r\n\r\n    if (amount <= 0 || rate <= 0 || termMonths <= 0) {\r\n      setResults(null); // Clear results if inputs are invalid\r\n      return;\r\n    }\r\n\r\n    const monthlyRate = rate / 12;\r\n    const monthlyPayment = (amount * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -termMonths));\r\n\r\n    // Pass monthlyPayment to generateAmortizationSchedule to avoid recalculation and ensure consistency\r\n    const schedule = generateAmortizationSchedule(amount, monthlyRate, termMonths, monthlyPayment);\r\n\r\n    // Calculate total interest from the generated schedule\r\n    const totalInterest = schedule.reduce((acc, row) => acc + row['Interest Payment'], 0);\r\n\r\n    setResults({ monthlyPayment, schedule, totalInterest });\r\n    setCsvData([\r\n      ['Month', 'Principal', 'Interest', 'Balance'],\r\n      ...schedule.map((r) => [\r\n        r.month,\r\n        r['Principal Payment'].toFixed(2),\r\n        r['Interest Payment'].toFixed(2),\r\n        r['Remaining Balance'].toFixed(2),\r\n      ]),\r\n    ]);\r\n  }, [loanAmount, interestRate, loanTerm]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\r\n          <h1 className=\"text-3xl font-bold text-center\">Mortgage Repayment Schedule Calculator</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-7xl mx-auto p-4 py-8\">\r\n        <div className=\"grid lg:grid-cols-5 gap-8\">\r\n          <div className=\"lg:col-span-2\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Mortgage Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label>Mortgage Amount (┬ú{Number(loanAmount).toLocaleString()})</Label>\r\n                  <Slider\r\n                    value={[Number(loanAmount)]}\r\n                    onValueChange={(v) => setLoanAmount(String(v[0]))}\r\n                    max={1000000}\r\n                    step={10000}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label>Interest Rate ({Number(interestRate).toFixed(2)}%)</Label>\r\n                  <Slider\r\n                    value={[Number(interestRate)]}\r\n                    onValueChange={(v) => setInterestRate(String(v[0]))}\r\n                    max={20}\r\n                    step={0.1}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label>Term ({loanTerm} years)</Label>\r\n                  <Slider\r\n                    value={[Number(loanTerm)]}\r\n                    onValueChange={(v) => setLoanTerm(String(v[0]))}\r\n                    max={40}\r\n                    step={1}\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          <div className=\"lg:col-span-3\">\r\n            {results ? (\r\n              <div className=\"space-y-6 printable-area\">\r\n                <div className=\"non-printable\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <h2 className=\"text-2xl font-bold text-gray-800\">Repayment Schedule</h2>\r\n                  </div>\r\n                </div>\r\n                <Card>\r\n                  <CardContent className=\"p-4 grid md:grid-cols-2 gap-4 text-center\">\r\n                    <div>\r\n                      <p className=\"text-sm\">Monthly Payment</p>\r\n                      <p className=\"text-2xl font-bold\">┬ú{results.monthlyPayment.toFixed(2)}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-sm\">Total Interest</p>\r\n                      <p className=\"text-2xl font-bold text-red-600\">\r\n                        ┬ú\r\n                        {results.totalInterest.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 0,\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Loan Balance Over Time</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                      <AreaChart data={results.schedule}>\r\n                        <CartesianGrid />\r\n                        <XAxis dataKey=\"month\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Area\r\n                          type=\"monotone\"\r\n                          dataKey=\"Remaining Balance\"\r\n                          stroke=\"#3b82f6\"\r\n                          fill=\"#3b82f6\"\r\n                        />\r\n                      </AreaChart>\r\n                    </ResponsiveContainer>\r\n                  </CardContent>\r\n                </Card>\r\n                <div className=\"non-printable pt-6\">\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"mortgage-amortization-schedule\"\r\n                    title=\"Mortgage Amortization Schedule\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                <CardContent className=\"text-center p-4\">\r\n                  <p className=\"text-gray-500\">\r\n                    Enter your mortgage details to see the repayment schedule.\r\n                  </p>\r\n                  <Calculator className=\"w-12 h-12 text-gray-400 mx-auto mt-4\" />\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\NationalInsuranceCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 125,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport CalculatorWrapper from '../components/calculators/CalculatorWrapper';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\nimport AnimatedNumber from '../components/general/AnimatedNumber';\r\nimport Breadcrumbs from '../components/general/Breadcrumbs';\r\nimport { createPageUrl } from '@/utils';\r\n\r\nconst niThresholds = {\r\n  '2025-26': {\r\n    primaryThreshold: 12570,\r\n    upperEarningsLimit: 50270,\r\n    mainRate: 0.08,\r\n    upperRate: 0.02,\r\n  },\r\n};\r\n\r\nconst nationalInsuranceFAQs = [\r\n  {\r\n    question: 'What are the different classes of National Insurance?',\r\n    answer:\r\n      'There are several classes of National Insurance. Class 1 is paid by employees. Class 2 (a flat weekly rate) and Class 4 (a percentage of profits) are paid by self-employed people. Our calculator focuses on Class 1 contributions for employees.',\r\n  },\r\n  {\r\n    question: 'Do I pay National Insurance on my entire salary?',\r\n    answer:\r\n      \"No. You only start paying National Insurance once your earnings go above the 'Primary Threshold'. You then pay a main rate on earnings between this threshold and the 'Upper Earnings Limit', and a lower rate on any earnings above that.\",\r\n  },\r\n  {\r\n    question: 'How does my age affect National Insurance contributions?',\r\n    answer:\r\n      'You stop paying Class 1 National Insurance once you reach the State Pension age, even if you continue working. You will need to show your employer proof of your age to ensure they stop deducting it.',\r\n  },\r\n  {\r\n    question: 'Is National Insurance the same as Income Tax?',\r\n    answer:\r\n      'No, they are two separate taxes. Income Tax is paid on most types of income, while National Insurance contributions build your entitlement to certain state benefits, such as the State Pension and Employment and Support Allowance.',\r\n  },\r\n];\r\n\r\nexport default function NationalInsuranceCalculator() {\r\n  const [salary, setSalary] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const breadcrumbPath = [\r\n    { name: 'Home', url: createPageUrl('Home') },\r\n    { name: 'Tax Calculators', url: `${createPageUrl('Home')}#tax-calculators` },\r\n    { name: 'National Insurance Calculator' },\r\n  ];\r\n\r\n  const handleCalculate = () => {\r\n    const grossSalary = Number(salary) || 0;\r\n    const year = '2025-26';\r\n    const thresholds = niThresholds[year];\r\n\r\n    let niContribution = 0;\r\n    let niBreakdown = [];\r\n\r\n    if (grossSalary > thresholds.primaryThreshold) {\r\n      const earningsInMainBand =\r\n        Math.min(grossSalary, thresholds.upperEarningsLimit) - thresholds.primaryThreshold;\r\n      if (earningsInMainBand > 0) {\r\n        const mainBandNI = earningsInMainBand * thresholds.mainRate;\r\n        niContribution += mainBandNI;\r\n        niBreakdown.push({ band: `Main Rate (${thresholds.mainRate * 100}%)`, amount: mainBandNI });\r\n      }\r\n    }\r\n\r\n    if (grossSalary > thresholds.upperEarningsLimit) {\r\n      const earningsInUpperBand = grossSalary - thresholds.upperEarningsLimit;\r\n      const upperBandNI = earningsInUpperBand * thresholds.upperRate;\r\n      niContribution += upperBandNI;\r\n      niBreakdown.push({\r\n        band: `Upper Rate (${thresholds.upperRate * 100}%)`,\r\n        amount: upperBandNI,\r\n      });\r\n    }\r\n\r\n    const newResults = {\r\n      totalNI: niContribution,\r\n      breakdown: niBreakdown,\r\n      salary: grossSalary,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Description', 'Annual', 'Monthly', 'Weekly'],\r\n      [\r\n        'Gross Salary',\r\n        `┬ú${grossSalary.toFixed(2)}`,\r\n        `┬ú${(grossSalary / 12).toFixed(2)}`,\r\n        `┬ú${(grossSalary / 52).toFixed(2)}`,\r\n      ],\r\n      ...niBreakdown.map((item) => [\r\n        item.band,\r\n        `┬ú${item.amount.toFixed(2)}`,\r\n        `┬ú${(item.amount / 12).toFixed(2)}`,\r\n        `┬ú${(item.amount / 52).toFixed(2)}`,\r\n      ]),\r\n      [\r\n        'Total National Insurance',\r\n        `┬ú${niContribution.toFixed(2)}`,\r\n        `┬ú${(niContribution / 12).toFixed(2)}`,\r\n        `┬ú${(niContribution / 52).toFixed(2)}`,\r\n      ],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n  }, [salary]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <Breadcrumbs path={breadcrumbPath} />\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK National Insurance Calculator 2025/26\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Estimate your employee National Insurance contributions for the 2025/26 tax year. See\r\n              exactly how much you'll pay based on your gross salary.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card className=\"bg-white dark:bg-gray-800\">\r\n              <CardHeader>\r\n                <CardTitle>Enter Your Salary</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"salary\">Gross Annual Salary</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"salary\"\r\n                      type=\"number\"\r\n                      value={salary}\r\n                      onChange={(e) => setSalary(e.target.value)}\r\n                      className=\"pl-10 dark:bg-gray-700\"\r\n                      placeholder=\"e.g. 35000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate NI\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"space-y-6\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200\">\r\n                    Your NI Breakdown\r\n                  </h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"national-insurance-calculation\"\r\n                    title=\"National Insurance Calculation\"\r\n                  />\r\n                </div>\r\n                <Card className=\"bg-gradient-to-br from-indigo-50 to-indigo-100 dark:from-indigo-900/50 dark:to-indigo-800/50 border-indigo-200 dark:border-indigo-700\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-indigo-900 dark:text-indigo-200\">\r\n                      Total Annual NI Contribution\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center\">\r\n                    <p className=\"text-4xl font-bold text-indigo-800 dark:text-indigo-100\">\r\n                      ┬ú<AnimatedNumber value={results.totalNI} />\r\n                    </p>\r\n                    <p className=\"text-indigo-700 dark:text-indigo-300 mt-2\">\r\n                      ┬ú{(results.totalNI / 12).toFixed(2)} per month\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card className=\"bg-white dark:bg-gray-800\">\r\n                  <CardHeader>\r\n                    <CardTitle>How it's calculated</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    {results.breakdown.map((item, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className=\"flex justify-between items-center p-3 bg-gray-50 dark:bg-gray-700/50 rounded-lg\"\r\n                      >\r\n                        <span className=\"font-medium text-gray-800 dark:text-gray-200\">\r\n                          {item.band}\r\n                        </span>\r\n                        <span className=\"font-semibold text-gray-900 dark:text-gray-100\">\r\n                          ┬ú\r\n                          {item.amount.toLocaleString(undefined, {\r\n                            minimumFractionDigits: 2,\r\n                            maximumFractionDigits: 2,\r\n                          })}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                    <div className=\"flex justify-between items-center p-3 bg-gray-100 dark:bg-gray-700 rounded-lg font-bold text-gray-900 dark:text-gray-100\">\r\n                      <span>Total</span>\r\n                      <span>\r\n                        ┬ú\r\n                        {results.totalNI.toLocaleString(undefined, {\r\n                          minimumFractionDigits: 2,\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px] bg-white dark:bg-gray-800\">\r\n                <div className=\"text-center text-gray-500 dark:text-gray-400\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to calculate?</h3>\r\n                  <p>Enter your salary to see your NI contributions.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <CalculatorWrapper>\r\n        <div className=\"space-y-6\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n            What is National Insurance?\r\n          </h2>\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            National Insurance (NI) is a fundamental tax in the United Kingdom paid by employees,\r\n            employers, and the self-employed. It plays a crucial role in funding key public services\r\n            and state benefits. Your NI contributions help to build your entitlement to benefits\r\n            such as the State Pension, Jobseeker's Allowance, Employment and Support Allowance, and\r\n            Maternity Allowance. It is a separate deduction from Income Tax, and both are typically\r\n            taken from your payslip before you receive your net pay.\r\n          </p>\r\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n            When to Use This Calculator\r\n          </h3>\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            Our National Insurance calculator is a vital tool for understanding your personal\r\n            finances. You should use it when:\r\n          </p>\r\n          <ul className=\"list-disc list-inside space-y-2 text-gray-700 dark:text-gray-300\">\r\n            <li>\r\n              <b>Starting a new job:</b> To understand how much NI will be deducted from your new\r\n              salary.\r\n            </li>\r\n            <li>\r\n              <b>Considering a pay rise:</b> See how an increase in your gross pay affects your NI\r\n              contributions, especially if it pushes you into a different NI band.\r\n            </li>\r\n            <li>\r\n              <b>Budgeting:</b> To get an accurate picture of your monthly deductions for better\r\n              financial planning.\r\n            </li>\r\n            <li>\r\n              <b>Reviewing your payslip:</b> To check that the NI deductions on your payslip are\r\n              accurate.\r\n            </li>\r\n          </ul>\r\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n            Example Use Case\r\n          </h3>\r\n          <p className=\"text-gray-700 dark:text-gray-300\">\r\n            Let's say you earn a gross annual salary of ┬ú40,000. Using the 2025/26 tax year rates,\r\n            you don't pay NI on the first ┬ú12,570 of your earnings. On the portion of your salary\r\n            between ┬ú12,570 and ┬ú40,000 (which is ┬ú27,430), you pay the main rate of 8%. This\r\n            results in an annual NI contribution of ┬ú2,194.40. Our calculator breaks this down for\r\n            you instantly, showing you the exact amounts and how they correspond to the official\r\n            thresholds.\r\n          </p>\r\n        </div>\r\n      </CalculatorWrapper>\r\n\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 py-12 non-printable\">\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <FAQSection faqs={nationalInsuranceFAQs} />\r\n        </div>\r\n      </div>\r\n\r\n      <RelatedCalculators\r\n        calculators={[\r\n          {\r\n            name: 'Salary Calculator',\r\n            url: '/SalaryCalculator',\r\n            description: 'See your full take-home pay after all deductions.',\r\n          },\r\n          {\r\n            name: 'Income Tax Calculator',\r\n            url: '/IncomeTaxCalculator',\r\n            description: 'Calculate your income tax liability separately.',\r\n          },\r\n          {\r\n            name: 'PAYE Calculator',\r\n            url: '/paye-calculator',\r\n            description: 'A comprehensive tool for PAYE employees.',\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\NetIncomeUKCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 44,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\n\r\nexport default function NetIncomeUKCalculator() {\r\n  const origin = typeof window !== 'undefined' ? window.location.origin : '';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Tax Calculators Hub',\r\n        item: `${origin}/TaxCalculatorsUK`,\r\n      },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 3,\r\n        name: 'Net Income Calculator',\r\n        item: `${origin}/NetIncomeUKCalculator`,\r\n      },\r\n    ],\r\n  };\r\n  const faqs = [\r\n    {\r\n      question: 'Does this show net pay after tax & NI?',\r\n      answer: 'Yes. It estimates take-home pay for 2025/26.',\r\n    },\r\n  ];\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: faqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <script type=\"application/ld+json\">{JSON.stringify(faqJson)}</script>\r\n\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200 text-center py-10\">\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">Net Income Calculator UK</h1>\r\n          <p className=\"text-gray-600 mt-2\">Estimate your take-home pay after tax & NI.</p>\r\n          <div className=\"mt-4 flex flex-wrap justify-center gap-2\">\r\n            <Link\r\n              to={createPageUrl('TaxCalculatorsUK')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Tax Hub\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('TaxAfterTaxCalculator')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Tax After Tax\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('TaxAndNICalculator')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Tax + NI\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10\">\r\n          <div className=\"p-6 bg-gray-50 border rounded\">\r\n            <p className=\"text-gray-700\">\r\n              Calculator coming soon. For detailed tax-only estimates, see the Income Tax\r\n              Calculator.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"mt-12\">\r\n            <RelatedCalculators\r\n              calculators={[\r\n                {\r\n                  name: 'Back to Tax Calculators Hub',\r\n                  url: createPageUrl('TaxCalculatorsUK'),\r\n                  description: 'Explore all UK tax tools.',\r\n                },\r\n                {\r\n                  name: 'Tax After Tax Calculator',\r\n                  url: createPageUrl('TaxAfterTaxCalculator'),\r\n                  description: 'Band-by-band tax.',\r\n                },\r\n                {\r\n                  name: 'Tax + NI Calculator',\r\n                  url: createPageUrl('TaxAndNICalculator'),\r\n                  description: 'Combined deductions.',\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\NetWorthCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 134,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  PoundSterling,\r\n  Plus,\r\n  Trash2,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Calculator,\r\n  Home,\r\n  Car,\r\n  Banknote,\r\n} from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\n\r\nconst defaultAssets = [\r\n  { name: 'Primary Property', amount: '', category: 'property' },\r\n  { name: 'Savings Account', amount: '', category: 'cash' },\r\n  { name: 'Investment Portfolio', amount: '', category: 'investments' },\r\n  { name: 'Pension Fund', amount: '', category: 'pension' },\r\n];\r\n\r\nconst defaultLiabilities = [\r\n  { name: 'Mortgage', amount: '', category: 'property' },\r\n  { name: 'Credit Cards', amount: '', category: 'debt' },\r\n  { name: 'Personal Loan', amount: '', category: 'debt' },\r\n];\r\n\r\nexport default function NetWorthCalculator() {\r\n  const [assets, setAssets] = useState(defaultAssets);\r\n  const [liabilities, setLiabilities] = useState(defaultLiabilities);\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const updateAsset = (index, field, value) => {\r\n    const newAssets = [...assets];\r\n    newAssets[index] = { ...newAssets[index], [field]: value };\r\n    setAssets(newAssets);\r\n  };\r\n\r\n  const updateLiability = (index, field, value) => {\r\n    const newLiabilities = [...liabilities];\r\n    newLiabilities[index] = { ...newLiabilities[index], [field]: value };\r\n    setLiabilities(newLiabilities);\r\n  };\r\n\r\n  const addAsset = () => {\r\n    setAssets([...assets, { name: '', amount: '', category: 'other' }]);\r\n  };\r\n\r\n  const addLiability = () => {\r\n    setLiabilities([...liabilities, { name: '', amount: '', category: 'debt' }]);\r\n  };\r\n\r\n  const removeAsset = (index) => {\r\n    setAssets(assets.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const removeLiability = (index) => {\r\n    setLiabilities(liabilities.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    const totalAssets = assets.reduce((sum, item) => sum + (Number(item.amount) || 0), 0);\r\n    const totalLiabilities = liabilities.reduce((sum, item) => sum + (Number(item.amount) || 0), 0);\r\n    const netWorth = totalAssets - totalLiabilities;\r\n\r\n    // Categorize assets\r\n    const assetCategories = {\r\n      property: assets\r\n        .filter((a) => a.category === 'property')\r\n        .reduce((sum, a) => sum + (Number(a.amount) || 0), 0),\r\n      cash: assets\r\n        .filter((a) => a.category === 'cash')\r\n        .reduce((sum, a) => sum + (Number(a.amount) || 0), 0),\r\n      investments: assets\r\n        .filter((a) => a.category === 'investments')\r\n        .reduce((sum, a) => sum + (Number(a.amount) || 0), 0),\r\n      pension: assets\r\n        .filter((a) => a.category === 'pension')\r\n        .reduce((sum, a) => sum + (Number(a.amount) || 0), 0),\r\n      other: assets\r\n        .filter((a) => a.category === 'other')\r\n        .reduce((sum, a) => sum + (Number(a.amount) || 0), 0),\r\n    };\r\n\r\n    const newResults = {\r\n      totalAssets,\r\n      totalLiabilities,\r\n      netWorth,\r\n      assetCategories,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Type', 'Item', 'Amount'],\r\n      ['', 'ASSETS', ''],\r\n      ...assets\r\n        .filter((asset) => Number(asset.amount) > 0)\r\n        .map((asset) => [\r\n          'Asset',\r\n          asset.name || 'Unnamed Asset',\r\n          `┬ú${(Number(asset.amount) || 0).toFixed(2)}`,\r\n        ]),\r\n      ['', '', ''],\r\n      ['', 'LIABILITIES', ''],\r\n      ...liabilities\r\n        .filter((liability) => Number(liability.amount) > 0)\r\n        .map((liability) => [\r\n          'Liability',\r\n          liability.name || 'Unnamed Liability',\r\n          `┬ú${(Number(liability.amount) || 0).toFixed(2)}`,\r\n        ]),\r\n      ['', '', ''],\r\n      ['Summary', 'Total Assets', `┬ú${totalAssets.toFixed(2)}`],\r\n      ['Summary', 'Total Liabilities', `┬ú${totalLiabilities.toFixed(2)}`],\r\n      ['Summary', 'Net Worth', `┬ú${netWorth.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [assets, liabilities]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      {/* Page Header */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Net Worth Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Your net worth is your financial scorecard. Calculate the difference between what you\r\n              own and what you owe.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Calculator Content */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Net Worth Calculation Results</div>\r\n\r\n        <div className=\"grid lg:grid-cols-3 gap-8 printable-grid-cols-1\">\r\n          {/* Input Sections */}\r\n          <div className=\"lg:col-span-2 grid md:grid-cols-2 gap-8 non-printable\">\r\n            {/* Assets Section */}\r\n            <div className=\"space-y-6\">\r\n              <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2 text-green-700\">\r\n                    <TrendingUp className=\"w-5 h-5\" />\r\n                    Assets (What You Own)\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  {assets.map((item, index) => (\r\n                    <div key={index} className=\"space-y-2\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Input\r\n                          value={item.name}\r\n                          onChange={(e) => updateAsset(index, 'name', e.target.value)}\r\n                          className=\"flex-1\"\r\n                          placeholder=\"e.g. Primary Property\"\r\n                        />\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"icon\"\r\n                          onClick={() => removeAsset(index)}\r\n                          className=\"text-red-500 hover:text-red-700\"\r\n                        >\r\n                          <Trash2 className=\"w-4 h-4\" />\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          type=\"number\"\r\n                          value={item.amount}\r\n                          onChange={(e) => updateAsset(index, 'amount', e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"e.g. 250000\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    onClick={addAsset}\r\n                    className=\"w-full flex items-center gap-2\"\r\n                  >\r\n                    <Plus className=\"w-4 h-4\" />\r\n                    Add Asset\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            {/* Liabilities Section */}\r\n            <div className=\"space-y-6\">\r\n              <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2 text-red-700\">\r\n                    <TrendingDown className=\"w-5 h-5\" />\r\n                    Liabilities (What You Owe)\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  {liabilities.map((item, index) => (\r\n                    <div key={index} className=\"space-y-2\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Input\r\n                          value={item.name}\r\n                          onChange={(e) => updateLiability(index, 'name', e.target.value)}\r\n                          className=\"flex-1\"\r\n                          placeholder=\"e.g. Mortgage\"\r\n                        />\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"icon\"\r\n                          onClick={() => removeLiability(index)}\r\n                          className=\"text-red-500 hover:text-red-700\"\r\n                        >\r\n                          <Trash2 className=\"w-4 h-4\" />\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          type=\"number\"\r\n                          value={item.amount}\r\n                          onChange={(e) => updateLiability(index, 'amount', e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"e.g. 180000\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    onClick={addLiability}\r\n                    className=\"w-full flex items-center gap-2\"\r\n                  >\r\n                    <Plus className=\"w-4 h-4\" />\r\n                    Add Liability\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <div>\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardContent className=\"p-6\">\r\n                    <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                      <Calculator className=\"w-5 h-5 mr-2\" />\r\n                      Calculate Net Worth\r\n                    </Button>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Results Panel */}\r\n          <div className=\"space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200\">\r\n                    Your Net Worth\r\n                  </h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"net-worth-calculation\"\r\n                    title=\"Net Worth Calculation\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Net Worth Summary */}\r\n                <Card\r\n                  className={`${results.netWorth >= 0 ? 'bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700' : 'bg-red-50 dark:bg-red-900/30 border-red-200 dark:border-red-700'}`}\r\n                >\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-center\">Your Net Worth</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-center p-6\">\r\n                      <p\r\n                        className={`text-5xl font-bold ${results.netWorth >= 0 ? 'text-green-700' : 'text-red-700'}`}\r\n                      >\r\n                        {results.netWorth >= 0 ? '┬ú' : '-┬ú'}\r\n                        {Math.abs(results.netWorth).toLocaleString()}\r\n                      </p>\r\n                      {results.netWorth < 0 && (\r\n                        <p className=\"text-sm text-red-600 mt-2\">\r\n                          Negative net worth means you owe more than you own\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Assets vs Liabilities Comparison */}\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardHeader>\r\n                    <CardTitle>Assets vs Liabilities</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"flex justify-between items-center p-4 bg-green-50 dark:bg-green-900/30 rounded-lg\">\r\n                      <span className=\"font-semibold text-green-800 dark:text-green-200\">\r\n                        Total Assets:\r\n                      </span>\r\n                      <span className=\"font-bold text-green-900 dark:text-green-100 text-xl\">\r\n                        ┬ú{results.totalAssets.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center p-4 bg-red-50 dark:bg-red-900/30 rounded-lg\">\r\n                      <span className=\"font-semibold text-red-800 dark:text-red-200\">\r\n                        Total Liabilities:\r\n                      </span>\r\n                      <span className=\"font-bold text-red-900 dark:text-red-100 text-xl\">\r\n                        -┬ú{results.totalLiabilities.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Detailed Assets Breakdown */}\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-green-700\">\r\n                      <TrendingUp className=\"w-5 h-5\" />\r\n                      Assets Breakdown\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    {assets\r\n                      .filter((asset) => Number(asset.amount) > 0)\r\n                      .map((asset, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className=\"flex justify-between items-center p-3 bg-green-50 dark:bg-green-900/20 rounded-lg\"\r\n                        >\r\n                          <div className=\"flex items-center gap-2\">\r\n                            {asset.category === 'property' && (\r\n                              <Home className=\"w-4 h-4 text-green-600\" />\r\n                            )}\r\n                            {asset.category === 'cash' && (\r\n                              <Banknote className=\"w-4 h-4 text-green-600\" />\r\n                            )}\r\n                            {asset.category === 'investments' && (\r\n                              <TrendingUp className=\"w-4 h-4 text-green-600\" />\r\n                            )}\r\n                            {asset.category === 'pension' && (\r\n                              <Calculator className=\"w-4 h-4 text-green-600\" />\r\n                            )}\r\n                            <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                              {asset.name}\r\n                            </span>\r\n                          </div>\r\n                          <span className=\"font-semibold text-green-700 dark:text-green-300\">\r\n                            ┬ú{(Number(asset.amount) || 0).toLocaleString()}\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Detailed Liabilities Breakdown */}\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-red-700\">\r\n                      <TrendingDown className=\"w-5 h-5\" />\r\n                      Liabilities Breakdown\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    {liabilities\r\n                      .filter((liability) => Number(liability.amount) > 0)\r\n                      .map((liability, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className=\"flex justify-between items-center p-3 bg-red-50 dark:bg-red-900/20 rounded-lg\"\r\n                        >\r\n                          <div className=\"flex items-center gap-2\">\r\n                            {liability.category === 'property' && (\r\n                              <Home className=\"w-4 h-4 text-red-600\" />\r\n                            )}\r\n                            {liability.category === 'debt' && (\r\n                              <TrendingDown className=\"w-4 h-4 text-red-600\" />\r\n                            )}\r\n                            <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                              {liability.name}\r\n                            </span>\r\n                          </div>\r\n                          <span className=\"font-semibold text-red-700 dark:text-red-300\">\r\n                            -┬ú{(Number(liability.amount) || 0).toLocaleString()}\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Net Worth Insights */}\r\n                <Card className=\"bg-blue-50 dark:bg-blue-900/30 border-blue-200 dark:border-blue-700\">\r\n                  <CardHeader>\r\n                    <CardTitle>Net Worth Insights</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3 text-sm\">\r\n                    {results.netWorth > 0 ? (\r\n                      <div className=\"p-3 bg-green-100 dark:bg-green-900/40 rounded-lg\">\r\n                        <p className=\"text-green-800 dark:text-green-200\">\r\n                          <strong>Positive Net Worth:</strong> You own more than you owe. Great\r\n                          foundation for building wealth!\r\n                        </p>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"p-3 bg-orange-100 dark:bg-orange-900/40 rounded-lg\">\r\n                        <p className=\"text-orange-800 dark:text-orange-200\">\r\n                          <strong>Negative Net Worth:</strong> Focus on paying down debt and\r\n                          building assets to improve your financial position.\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"p-3 bg-blue-100 dark:bg-blue-900/40 rounded-lg\">\r\n                      <p className=\"text-blue-800 dark:text-blue-200\">\r\n                        <strong>Tip:</strong> Track your net worth quarterly to monitor your\r\n                        financial progress over time.\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px] bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <div className=\"text-center text-gray-500 dark:text-gray-400\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to calculate your net worth?</h3>\r\n                  <p>Add your assets and liabilities, then click \"Calculate Net Worth\".</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\OvertimeBonusCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 66,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, TrendingUp, Wallet, ArrowRight } from 'lucide-react';\r\n\r\n// Simplified tax/NI calculation, should be replaced with a robust shared function in a real app\r\nconst calculateTakeHome = (salary) => {\r\n  const personalAllowance = 12570;\r\n  let tax = 0;\r\n  let ni = 0;\r\n  const taxableIncome = Math.max(0, salary - personalAllowance);\r\n  if (taxableIncome > 0) {\r\n    if (taxableIncome <= 37700) tax += taxableIncome * 0.2;\r\n    else if (taxableIncome <= 125140) tax += 37700 * 0.2 + (taxableIncome - 37700) * 0.4;\r\n    else tax += 37700 * 0.2 + (125140 - 37700) * 0.4 + (taxableIncome - 125140) * 0.45;\r\n  }\r\n  const niableIncome = Math.max(0, salary - 12570);\r\n  if (niableIncome > 0) {\r\n    if (niableIncome <= 37700) ni += niableIncome * 0.08;\r\n    else ni += 37700 * 0.08 + (niableIncome - 37700) * 0.02;\r\n  }\r\n  return salary - tax - ni;\r\n};\r\n\r\nexport default function OvertimeBonusCalculator() {\r\n  const [baseSalary, setBaseSalary] = useState('');\r\n  const [extraPay, setExtraPay] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = () => {\r\n    const salary = Number(baseSalary) || 0;\r\n    const bonus = Number(extraPay) || 0;\r\n\r\n    if (salary <= 0 || bonus <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const originalTakeHome = calculateTakeHome(salary);\r\n    const newGrossSalary = salary + bonus;\r\n    const newTakeHome = calculateTakeHome(newGrossSalary);\r\n\r\n    const actualBonusReceived = newTakeHome - originalTakeHome;\r\n    const deductionsOnBonus = bonus - actualBonusReceived;\r\n    const effectiveTaxRateOnBonus = (deductionsOnBonus / bonus) * 100;\r\n\r\n    setResults({\r\n      actualBonusReceived,\r\n      deductionsOnBonus,\r\n      effectiveTaxRateOnBonus,\r\n      bonus,\r\n    });\r\n    setHasCalculated(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [baseSalary, extraPay]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Overtime & Bonus Tax Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Worked extra hours or got a bonus? Find out how much you'll actually take home after\r\n              tax and NI.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Pay</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"baseSalary\">Your Normal Annual Salary</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"baseSalary\"\r\n                      type=\"number\"\r\n                      value={baseSalary}\r\n                      onChange={(e) => setBaseSalary(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 50000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"extraPay\">Overtime/Bonus Amount (Gross)</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"extraPay\"\r\n                      type=\"number\"\r\n                      value={extraPay}\r\n                      onChange={(e) => setExtraPay(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 5000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Net Gain\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <Card className=\"bg-green-50 border-green-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-green-800\">\r\n                      <Wallet className=\"w-6 h-6\" />\r\n                      Your Net Gain\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center\">\r\n                    <p className=\"text-sm text-green-700\">\r\n                      From a ┬ú{results.bonus.toLocaleString()} bonus, you take home:\r\n                    </p>\r\n                    <p className=\"text-4xl font-bold text-green-900 mt-2\">\r\n                      ┬ú\r\n                      {results.actualBonusReceived.toLocaleString('en-GB', {\r\n                        minimumFractionDigits: 2,\r\n                      })}\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Breakdown of Your Extra Pay</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span>Gross Bonus/Overtime:</span>\r\n                      <span className=\"font-semibold text-lg\">\r\n                        ┬ú{results.bonus.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span>Estimated Tax & NI on this amount:</span>\r\n                      <span className=\"font-semibold text-lg text-red-600\">\r\n                        -┬ú\r\n                        {results.deductionsOnBonus.toLocaleString('en-GB', {\r\n                          minimumFractionDigits: 2,\r\n                        })}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center border-t pt-3 mt-3\">\r\n                      <span className=\"font-bold\">Net Amount in Your Pocket:</span>\r\n                      <span className=\"font-bold text-lg text-green-700\">\r\n                        ┬ú\r\n                        {results.actualBonusReceived.toLocaleString('en-GB', {\r\n                          minimumFractionDigits: 2,\r\n                        })}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                      <p className=\"text-sm text-blue-800\">\r\n                        This represents an effective tax rate of\r\n                        <span className=\"font-bold\">\r\n                          {' '}\r\n                          {results.effectiveTaxRateOnBonus.toFixed(1)}%{' '}\r\n                        </span>\r\n                        on your extra pay.\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <TrendingUp className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">How much do you keep?</h3>\r\n                  <p>Enter your salary and extra pay to find out.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\OvertimePayCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 57,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { PoundSterling, Clock, TrendingUp } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst overtimeFAQs = [\r\n  {\r\n    question: 'Is my employer required to pay me for overtime?',\r\n    answer:\r\n      'In the UK, there is no automatic legal right to be paid for working extra hours. Your contract of employment should state whether you will be paid for overtime and at what rate. However, your average pay for the total hours you work must not fall below the National Minimum Wage.',\r\n  },\r\n  {\r\n    question: 'What are typical overtime rates?',\r\n    answer:\r\n      \"Common overtime rates are 'time-and-a-half' (1.5x your normal rate) and 'double time' (2x your normal rate). The specific rate depends on your employment contract and when the overtime is worked (e.g., weekends or bank holidays often have higher rates).\",\r\n  },\r\n  {\r\n    question: 'Does this calculator include tax?',\r\n    answer:\r\n      'No, this calculator shows your gross pay (before tax and other deductions). Overtime pay is taxed in the same way as your regular wages. You can use our main Salary Calculator to see the impact on your take-home pay.',\r\n  },\r\n];\r\n\r\nexport default function OvertimePayCalculator() {\r\n  const [hourlyRate, setHourlyRate] = useState('15');\r\n  const [standardHours, setStandardHours] = useState('40');\r\n  const [overtimeHours, setOvertimeHours] = useState('10');\r\n  const [overtimeMultiplier, setOvertimeMultiplier] = useState('1.5');\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const rate = Number(hourlyRate) || 0;\r\n    const stdHours = Number(standardHours) || 0;\r\n    const otHours = Number(overtimeHours) || 0;\r\n    const otMulti = Number(overtimeMultiplier) || 1;\r\n\r\n    if (rate <= 0 || stdHours < 0 || otHours < 0) {\r\n      setResults(null);\r\n      return;\r\n    }\r\n\r\n    const standardPay = rate * stdHours;\r\n    const overtimeRate = rate * otMulti;\r\n    const overtimePay = overtimeRate * otHours;\r\n    const totalPay = standardPay + overtimePay;\r\n\r\n    setResults({ standardPay, overtimePay, totalPay, overtimeRate });\r\n  }, [hourlyRate, standardHours, overtimeHours, overtimeMultiplier]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Overtime Pay Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Calculate your total gross pay including standard hours and overtime earnings.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Work Week</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label htmlFor=\"hourlyRate\">Standard Hourly Rate (┬ú)</Label>\r\n                  <Input\r\n                    id=\"hourlyRate\"\r\n                    type=\"number\"\r\n                    value={hourlyRate}\r\n                    onChange={(e) => setHourlyRate(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"standardHours\">Standard Hours per Week</Label>\r\n                  <Input\r\n                    id=\"standardHours\"\r\n                    type=\"number\"\r\n                    value={standardHours}\r\n                    onChange={(e) => setStandardHours(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"overtimeHours\">Overtime Hours per Week</Label>\r\n                  <Input\r\n                    id=\"overtimeHours\"\r\n                    type=\"number\"\r\n                    value={overtimeHours}\r\n                    onChange={(e) => setOvertimeHours(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"overtimeMultiplier\">\r\n                    Overtime Rate Multiplier (e.g., 1.5 for time-and-a-half)\r\n                  </Label>\r\n                  <Input\r\n                    id=\"overtimeMultiplier\"\r\n                    type=\"number\"\r\n                    value={overtimeMultiplier}\r\n                    onChange={(e) => setOvertimeMultiplier(e.target.value)}\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div>\r\n            {results ? (\r\n              <div className=\"space-y-6\">\r\n                <Card className=\"bg-green-50 border-green-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-green-900\">Total Gross Pay</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center\">\r\n                    <p className=\"text-5xl font-bold text-green-900\">\r\n                      ┬ú{results.totalPay.toLocaleString('en-GB', { maximumFractionDigits: 2 })}\r\n                    </p>\r\n                    <p className=\"text-sm text-green-700 mt-1\">for the week</p>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Pay Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex justify-between items-center text-sm\">\r\n                      <span>Standard Pay ({standardHours} hrs):</span>\r\n                      <span className=\"font-semibold\">\r\n                        ┬ú{results.standardPay.toLocaleString('en-GB', { maximumFractionDigits: 2 })}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center text-sm\">\r\n                      <span>\r\n                        Overtime Pay ({overtimeHours} hrs at ┬ú{results.overtimeRate}/hr):\r\n                      </span>\r\n                      <span className=\"font-semibold text-blue-700\">\r\n                        ┬ú{results.overtimePay.toLocaleString('en-GB', { maximumFractionDigits: 2 })}\r\n                      </span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full\">\r\n                <p className=\"text-gray-500\">Enter details to calculate your pay.</p>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={overtimeFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\OvertimeRateCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 49,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Percent, PoundSterling, Calculator } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst overtimeRateFAQs = [\r\n  {\r\n    question: 'What are common overtime multipliers?',\r\n    answer:\r\n      \"The most common multipliers are 1.5 ('time-and-a-half') for standard overtime and 2.0 ('double time') for work on weekends or bank holidays. The exact rate is determined by your employment contract.\",\r\n  },\r\n  {\r\n    question: 'Is this my total overtime pay?',\r\n    answer:\r\n      \"No, this calculator determines your hourly RATE for overtime work. To calculate your total pay for a period including overtime hours, please use our 'Overtime Pay Calculator'.\",\r\n  },\r\n  {\r\n    question: 'Is my employer required to offer a higher rate for overtime?',\r\n    answer:\r\n      \"Not necessarily. In the UK, there's no legal obligation to pay workers for overtime. However, your average pay for the total hours you work must not fall below the National Minimum Wage. Your contract will specify your overtime pay details.\",\r\n  },\r\n];\r\n\r\nexport default function OvertimeRateCalculator() {\r\n  const [hourlyRate, setHourlyRate] = useState('');\r\n  const [multiplier, setMultiplier] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const rate = Number(hourlyRate) || 0;\r\n    const multi = Number(multiplier) || 0;\r\n\r\n    if (rate <= 0 || multi <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const overtimeRate = rate * multi;\r\n    setResults({ overtimeRate });\r\n    setHasCalculated(true);\r\n  }, [hourlyRate, multiplier]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Overtime Rate Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Determine your specific hourly pay rate for working overtime hours.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Your Pay Details</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              <div>\r\n                <Label htmlFor=\"hourlyRate\">Standard Hourly Rate (┬ú)</Label>\r\n                <Input\r\n                  id=\"hourlyRate\"\r\n                  type=\"number\"\r\n                  value={hourlyRate}\r\n                  onChange={(e) => setHourlyRate(e.target.value)}\r\n                  placeholder=\"e.g. 15\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label htmlFor=\"multiplier\">Overtime Multiplier (e.g., 1.5)</Label>\r\n                <Input\r\n                  id=\"multiplier\"\r\n                  type=\"number\"\r\n                  value={multiplier}\r\n                  onChange={(e) => setMultiplier(e.target.value)}\r\n                  placeholder=\"e.g. 1.5\"\r\n                />\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                <Calculator className=\"w-5 h-5 mr-2\" />\r\n                Calculate Rate\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n          <div>\r\n            {hasCalculated && results ? (\r\n              <Card className=\"bg-blue-50 border-blue-200\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-blue-900\">Your Overtime Hourly Rate</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"text-center\">\r\n                  <p className=\"text-6xl font-bold text-blue-900\">\r\n                    ┬ú{results.overtimeRate.toLocaleString('en-GB', { minimumFractionDigits: 2 })}\r\n                  </p>\r\n                  <p className=\"text-sm text-blue-700 mt-1\">per hour</p>\r\n                </CardContent>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <PoundSterling className=\"w-10 h-10 mx-auto mb-2\" />\r\n                  <p>Enter details to see your overtime rate.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-12\">\r\n          <FAQSection faqs={overtimeRateFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\PAYECalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 202,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { PoundSterling, Calculator, HelpCircle } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators'; // New import\r\n\r\nconst taxBrackets2025 = {\r\n  england: [\r\n    { min: 0, max: 12570, rate: 0, name: 'Personal Allowance' },\r\n    { min: 12571, max: 50270, rate: 0.2, name: 'Basic Rate' },\r\n    { min: 50271, max: 125140, rate: 0.4, name: 'Higher Rate' },\r\n    { min: 125141, max: Infinity, rate: 0.45, name: 'Additional Rate' },\r\n  ],\r\n  scotland: [\r\n    { min: 0, max: 12570, rate: 0, name: 'Personal Allowance' },\r\n    { min: 12571, max: 14876, rate: 0.19, name: 'Starter Rate' },\r\n    { min: 14877, max: 26561, rate: 0.2, name: 'Basic Rate' },\r\n    { min: 26562, max: 43662, rate: 0.21, name: 'Intermediate Rate' },\r\n    { min: 43663, max: 75000, rate: 0.42, name: 'Higher Rate' },\r\n    { min: 75001, max: 125140, rate: 0.45, name: 'Advanced Rate' },\r\n    { min: 125141, max: Infinity, rate: 0.48, name: 'Top Rate' },\r\n  ],\r\n};\r\n\r\nconst niThresholds = [\r\n  { min: 0, max: 12570, rate: 0 },\r\n  { min: 12571, max: 50270, rate: 0.08 },\r\n  { min: 50271, max: Infinity, rate: 0.02 },\r\n];\r\n\r\nconst payeCalculatorFAQs = [\r\n  {\r\n    question: 'What is PAYE?',\r\n    answer:\r\n      \"PAYE (Pay As You Earn) is the UK's system for collecting income tax and National Insurance contributions directly from your salary before you receive it. Your employer calculates and deducts these amounts each pay period.\",\r\n  },\r\n  {\r\n    question: 'How is PAYE calculated?',\r\n    answer:\r\n      'PAYE calculations use your tax code, salary, and pay frequency. Tax is calculated cumulatively from April to March, meaning each pay period accounts for the full tax year to date.',\r\n  },\r\n  {\r\n    question: \"What's the difference between Scottish and English PAYE rates?\",\r\n    answer:\r\n      'Scotland has different income tax rates and bands from the rest of the UK, but National Insurance rates remain the same across all UK regions.',\r\n  },\r\n];\r\n\r\nexport default function PAYECalculator() {\r\n  const [grossSalary, setGrossSalary] = useState('');\r\n  const [payFrequency, setPayFrequency] = useState('monthly');\r\n  const [location, setLocation] = useState('england');\r\n  const [taxCode, setTaxCode] = useState('1257L');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  // Helper function to create page URLs. This would typically be part of a routing utility.\r\n  // For this example, we'll assume a simple transformation to a relative path.\r\n  const createPageUrl = (pageIdentifier) => {\r\n    // Example: \"SalaryCalculatorUK\" -> \"/calculators/salary-calculator-uk\"\r\n    // Adjust this logic based on your actual application's routing conventions.\r\n    return `/calculators/${pageIdentifier.replace(/([A-Z])/g, '-$1').toLowerCase()}`;\r\n  };\r\n\r\n  const calculatePAYE = () => {\r\n    const annualSalary = Number(grossSalary) || 0;\r\n    if (annualSalary <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    // Personal allowance from tax code\r\n    let personalAllowance = 12570;\r\n    if (taxCode.match(/^\\d+L$/)) {\r\n      personalAllowance = parseInt(taxCode.slice(0, -1)) * 10;\r\n    }\r\n\r\n    // Adjust for high earners\r\n    if (annualSalary > 100000) {\r\n      personalAllowance = Math.max(0, personalAllowance - (annualSalary - 100000) / 2);\r\n    }\r\n\r\n    // Calculate tax\r\n    const taxBrackets = taxBrackets2025[location];\r\n    let annualTax = 0;\r\n    let taxBreakdown = [];\r\n    const taxableIncome = Math.max(0, annualSalary - personalAllowance);\r\n\r\n    for (const bracket of taxBrackets) {\r\n      if (bracket.rate === 0) continue;\r\n\r\n      const bracketMinAdjusted = Math.max(0, bracket.min - personalAllowance); // Ensure min is not negative if personalAllowance is higher\r\n      const bracketMaxAdjusted = Math.max(0, bracket.max - personalAllowance); // Ensure max is not negative\r\n\r\n      if (taxableIncome > bracketMinAdjusted) {\r\n        const taxableInBracket = Math.min(taxableIncome, bracketMaxAdjusted) - bracketMinAdjusted;\r\n        if (taxableInBracket > 0) {\r\n          const taxInBracket = taxableInBracket * bracket.rate;\r\n          annualTax += taxInBracket;\r\n          taxBreakdown.push({\r\n            name: bracket.name,\r\n            rate: bracket.rate * 100,\r\n            taxableAmount: taxableInBracket,\r\n            amount: taxInBracket,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    // Calculate National Insurance\r\n    let annualNI = 0;\r\n    let niBreakdown = [];\r\n    for (const threshold of niThresholds) {\r\n      // NI is calculated on gross salary, not taxable income after PA\r\n      if (annualSalary > threshold.min) {\r\n        const niableAmount = Math.min(annualSalary, threshold.max) - threshold.min;\r\n        if (niableAmount > 0) {\r\n          const niAmount = niableAmount * threshold.rate;\r\n          annualNI += niAmount;\r\n          if (niAmount > 0) {\r\n            // Only add to breakdown if NI is actually charged in this band\r\n            niBreakdown.push({\r\n              rate: threshold.rate * 100,\r\n              niableAmount: niableAmount,\r\n              amount: niAmount,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const totalDeductions = annualTax + annualNI;\r\n    const netSalary = annualSalary - totalDeductions;\r\n\r\n    // Convert to pay frequency\r\n    let periods;\r\n    switch (payFrequency) {\r\n      case 'weekly':\r\n        periods = 52;\r\n        break;\r\n      case 'fortnightly':\r\n        periods = 26;\r\n        break;\r\n      case 'monthly':\r\n      default:\r\n        periods = 12;\r\n        break;\r\n    }\r\n\r\n    const grossPerPeriod = annualSalary / periods;\r\n    const taxPerPeriod = annualTax / periods;\r\n    const niPerPeriod = annualNI / periods;\r\n    const netPerPeriod = netSalary / periods;\r\n\r\n    const newResults = {\r\n      grossSalary: annualSalary,\r\n      taxAmount: annualTax,\r\n      niAmount: annualNI,\r\n      totalDeductions,\r\n      netSalary,\r\n      grossPerPeriod,\r\n      taxPerPeriod,\r\n      niPerPeriod,\r\n      netPerPeriod,\r\n      taxBreakdown,\r\n      niBreakdown,\r\n      personalAllowance,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Item', 'Annual', `Per ${payFrequency.charAt(0).toUpperCase() + payFrequency.slice(1)}`],\r\n      ['Gross Salary', `┬ú${annualSalary.toFixed(2)}`, `┬ú${grossPerPeriod.toFixed(2)}`],\r\n      ['Income Tax', `-┬ú${annualTax.toFixed(2)}`, `-┬ú${taxPerPeriod.toFixed(2)}`],\r\n      ['National Insurance', `-┬ú${annualNI.toFixed(2)}`, `-┬ú${niPerPeriod.toFixed(2)}`],\r\n      ['Net Take-Home', `┬ú${netSalary.toFixed(2)}`, `┬ú${netPerPeriod.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [grossSalary, payFrequency, location, taxCode]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK PAYE Calculator 2025/26\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Calculate your exact take-home pay after income tax and National Insurance deductions\r\n              using the latest UK rates.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">PAYE Calculation 2025/26</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Your Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"grossSalary\">Annual Gross Salary</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"grossSalary\"\r\n                      type=\"number\"\r\n                      value={grossSalary}\r\n                      onChange={(e) => setGrossSalary(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 45000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Location</Label>\r\n                  <Select value={location} onValueChange={setLocation}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"england\">England, Wales & NI</SelectItem>\r\n                      <SelectItem value=\"scotland\">Scotland</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"taxCode\">Tax Code</Label>\r\n                  <Input\r\n                    id=\"taxCode\"\r\n                    value={taxCode}\r\n                    onChange={(e) => setTaxCode(e.target.value)}\r\n                    placeholder=\"e.g. 1257L\"\r\n                  />\r\n                  <p className=\"text-xs text-gray-500\">Found on your payslip or P60</p>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Pay Frequency</Label>\r\n                  <Select value={payFrequency} onValueChange={setPayFrequency}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"weekly\">Weekly</SelectItem>\r\n                      <SelectItem value=\"monthly\">Monthly</SelectItem>\r\n                      <SelectItem value=\"fortnightly\">Fortnightly</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <Button onClick={calculatePAYE} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate PAYE\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your PAYE Breakdown</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"paye-calculation\"\r\n                    title=\"PAYE Calculation\"\r\n                  />\r\n                </div>\r\n                <Card className=\"bg-green-50 border-green-200\">\r\n                  <CardContent className=\"p-6\">\r\n                    <h3 className=\"font-semibold text-green-800 mb-2\">\r\n                      Take-Home Pay ({payFrequency})\r\n                    </h3>\r\n                    <div className=\"text-4xl font-bold text-green-900\">\r\n                      ┬ú\r\n                      {results.netPerPeriod.toLocaleString('en-GB', {\r\n                        minimumFractionDigits: 2,\r\n                        maximumFractionDigits: 2,\r\n                      })}\r\n                    </div>\r\n                    <p className=\"text-sm text-green-700\">\r\n                      Annual: ┬ú\r\n                      {results.netSalary.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Income Tax</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-2\">\r\n                      <div className=\"text-center p-4 bg-red-50 rounded-lg\">\r\n                        <p className=\"text-sm text-red-600\">Annual Tax</p>\r\n                        <p className=\"text-xl font-bold text-red-800\">\r\n                          ┬ú{results.taxAmount.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                        </p>\r\n                        <p className=\"text-xs text-red-500\">\r\n                          {payFrequency}: ┬ú{results.taxPerPeriod.toFixed(2)}\r\n                        </p>\r\n                      </div>\r\n                      {results.taxBreakdown.map((bracket, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className=\"flex justify-between text-sm p-2 border-l-2 border-red-300\"\r\n                        >\r\n                          <span>\r\n                            {bracket.name} ({bracket.rate}%)\r\n                          </span>\r\n                          <span>┬ú{bracket.amount.toFixed(0)}</span>\r\n                        </div>\r\n                      ))}\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>National Insurance</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-2\">\r\n                      <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n                        <p className=\"text-sm text-blue-600\">Annual NI</p>\r\n                        <p className=\"text-xl font-bold text-blue-800\">\r\n                          ┬ú{results.niAmount.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                        </p>\r\n                        <p className=\"text-xs text-blue-500\">\r\n                          {payFrequency}: ┬ú{results.niPerPeriod.toFixed(2)}\r\n                        </p>\r\n                      </div>\r\n                      {results.niBreakdown.map((ni, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className=\"flex justify-between text-sm p-2 border-l-2 border-blue-300\"\r\n                        >\r\n                          <span>Class 1 NI ({ni.rate}%)</span>\r\n                          <span>┬ú{ni.amount.toFixed(0)}</span>\r\n                        </div>\r\n                      ))}\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready for your PAYE calculation?</h3>\r\n                  <p>Enter your salary details to see your exact take-home pay.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={payeCalculatorFAQs} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* NEW: Related calculators to strengthen contextual internal links */}\r\n        <RelatedCalculators\r\n          calculators={[\r\n            {\r\n              name: 'Salary Calculator',\r\n              url: createPageUrl('SalaryCalculatorUK'),\r\n              description: 'See full take-home pay including NI, pension and student loan.',\r\n            },\r\n            {\r\n              name: 'Income Tax Calculator',\r\n              url: createPageUrl('IncomeTaxCalculator'),\r\n              description: 'Understand your tax by band for 2025/26.',\r\n            },\r\n            {\r\n              name: 'National Insurance Calculator',\r\n              url: createPageUrl('NationalInsuranceCalculator'),\r\n              description: 'Calculate Class 1 NI contributions.',\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\PayrollCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 189,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { PoundSterling, Calculator, Building2, User, Percent, Shield } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst payrollFAQs = [\r\n  {\r\n    question: \"What are an employer's main payroll costs?\",\r\n    answer:\r\n      \"Besides the employee's gross salary, the main costs for an employer are Employer's National Insurance contributions and mandatory employer pension contributions.\",\r\n  },\r\n  {\r\n    question: \"How much is Employer's National Insurance?\",\r\n    answer:\r\n      \"For the 2025/26 tax year, Employer's NI is 13.8% on all earnings above the Secondary Threshold, which is ┬ú9,100 per year (┬ú175 per week).\",\r\n  },\r\n  {\r\n    question: 'What are the minimum employer pension contributions?',\r\n    answer:\r\n      \"Under auto-enrolment rules, the minimum employer contribution is 3% of the employee's 'qualifying earnings' (between ┬ú6,240 and ┬ú50,270 per year).\",\r\n  },\r\n];\r\n\r\n// 2025/26 Tax Year Data\r\nconst employeeNIThresholds = [\r\n  { min: 0, max: 12570, rate: 0 },\r\n  { min: 12571, max: 50270, rate: 0.08 },\r\n  { min: 50271, max: Infinity, rate: 0.02 },\r\n];\r\n\r\nconst employerNIThreshold = 9100; // Secondary Threshold\r\nconst employerNIRate = 0.138;\r\n\r\nconst pensionQualifyingMin = 6240;\r\nconst pensionQualifyingMax = 50270;\r\nconst employerPensionMinRate = 0.03;\r\nconst employeePensionMinRate = 0.05;\r\n\r\nexport default function PayrollCalculator() {\r\n  const [grossSalary, setGrossSalary] = useState('35000');\r\n  const [employerPension, setEmployerPension] = useState('3');\r\n  const [employeePension, setEmployeePension] = useState('5');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const salary = Number(grossSalary) || 0;\r\n    const employerPensionRate = (Number(employerPension) || 0) / 100;\r\n    const employeePensionRate = (Number(employeePension) || 0) / 100;\r\n\r\n    if (salary <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    // Employer Costs\r\n    const employerNI =\r\n      salary > employerNIThreshold ? (salary - employerNIThreshold) * employerNIRate : 0;\r\n    const qualifyingEarnings = Math.max(\r\n      0,\r\n      Math.min(salary, pensionQualifyingMax) - pensionQualifyingMin\r\n    );\r\n    const employerPensionContribution = qualifyingEarnings * employerPensionRate;\r\n    const totalCostToEmployer = salary + employerNI + employerPensionContribution;\r\n\r\n    // Employee Deductions & Take-home\r\n    const employeePensionContribution = qualifyingEarnings * employeePensionRate;\r\n    const salaryAfterPension = salary - employeePensionContribution;\r\n\r\n    // Employee tax calculation\r\n    let personalAllowance = 12570;\r\n    if (salaryAfterPension > 100000) {\r\n      personalAllowance = Math.max(0, 12570 - (salaryAfterPension - 100000) / 2);\r\n    }\r\n    const taxableIncome = Math.max(0, salaryAfterPension - personalAllowance);\r\n\r\n    let tax = 0;\r\n    if (taxableIncome > 0) {\r\n      // Only calculate if there's taxable income\r\n      const basicRateBand = 50270 - personalAllowance; // 20% rate up to 50270\r\n      const higherRateBand = 125140 - 50270; // 40% rate between 50270 and 125140\r\n\r\n      if (taxableIncome <= basicRateBand) {\r\n        tax = taxableIncome * 0.2;\r\n      } else {\r\n        tax = basicRateBand * 0.2;\r\n        const remainingTaxable = taxableIncome - basicRateBand;\r\n\r\n        if (remainingTaxable <= higherRateBand) {\r\n          tax += remainingTaxable * 0.4;\r\n        } else {\r\n          tax += higherRateBand * 0.4;\r\n          const additionalRateTaxable = remainingTaxable - higherRateBand;\r\n          tax += additionalRateTaxable * 0.45;\r\n        }\r\n      }\r\n    }\r\n\r\n    let employeeNI = 0;\r\n    for (const threshold of employeeNIThresholds) {\r\n      if (salary > threshold.min) {\r\n        const niableAmount = Math.min(salary, threshold.max) - threshold.min;\r\n        if (niableAmount > 0) {\r\n          employeeNI += niableAmount * threshold.rate;\r\n        }\r\n      }\r\n    }\r\n\r\n    const totalDeductions = tax + employeeNI + employeePensionContribution;\r\n    const netPay = salary - totalDeductions;\r\n\r\n    const newResults = {\r\n      grossSalary: salary,\r\n      employerNI,\r\n      employerPensionContribution,\r\n      totalCostToEmployer,\r\n      employeePensionContribution,\r\n      tax,\r\n      employeeNI,\r\n      netPay,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Category', 'Description', 'Annual', 'Monthly'],\r\n      ['Employer Costs', 'Gross Salary', `┬ú${salary.toFixed(2)}`, `┬ú${(salary / 12).toFixed(2)}`],\r\n      [\r\n        'Employer Costs',\r\n        \"Employer's NI\",\r\n        `┬ú${employerNI.toFixed(2)}`,\r\n        `┬ú${(employerNI / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Employer Costs',\r\n        'Employer Pension',\r\n        `┬ú${employerPensionContribution.toFixed(2)}`,\r\n        `┬ú${(employerPensionContribution / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Employer Costs',\r\n        'Total Cost to Employ',\r\n        `┬ú${totalCostToEmployer.toFixed(2)}`,\r\n        `┬ú${(totalCostToEmployer / 12).toFixed(2)}`,\r\n      ],\r\n      ['---'],\r\n      [\r\n        \"Employee's Payslip\",\r\n        'Gross Salary',\r\n        `┬ú${salary.toFixed(2)}`,\r\n        `┬ú${(salary / 12).toFixed(2)}`,\r\n      ],\r\n      [\"Employee's Payslip\", 'Income Tax', `-┬ú${tax.toFixed(2)}`, `-┬ú${(tax / 12).toFixed(2)}`],\r\n      [\r\n        \"Employee's Payslip\",\r\n        \"Employee's NI\",\r\n        `-┬ú${employeeNI.toFixed(2)}`,\r\n        `-┬ú${(employeeNI / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        \"Employee's Payslip\",\r\n        'Employee Pension',\r\n        `-┬ú${employeePensionContribution.toFixed(2)}`,\r\n        `-┬ú${(employeePensionContribution / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        \"Employee's Payslip\",\r\n        'Net Take-Home Pay',\r\n        `┬ú${netPay.toFixed(2)}`,\r\n        `┬ú${(netPay / 12).toFixed(2)}`,\r\n      ],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  }, [grossSalary, employerPension, employeePension]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK Payroll Calculator for Employers\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Estimate the total cost of hiring an employee and see a breakdown of their take-home\r\n              pay. Updated for 2025/26 tax year.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Payroll Calculation</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Employee Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label htmlFor=\"grossSalary\">Employee Gross Annual Salary</Label>\r\n                  <div className=\"relative mt-2\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"grossSalary\"\r\n                      type=\"number\"\r\n                      value={grossSalary}\r\n                      onChange={(e) => setGrossSalary(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"employerPension\" className=\"flex justify-between\">\r\n                    <span>Employer Pension Contribution</span>\r\n                    <span className=\"font-semibold\">{employerPension}%</span>\r\n                  </Label>\r\n                  <Slider\r\n                    value={[Number(employerPension)]}\r\n                    onValueChange={(value) => setEmployerPension(String(value[0]))}\r\n                    max={15}\r\n                    step={0.5}\r\n                    className=\"mt-2\"\r\n                  />\r\n                  <p className=\"text-xs text-gray-500 mt-1\">\r\n                    Minimum is 3% of qualifying earnings.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"employeePension\" className=\"flex justify-between\">\r\n                    <span>Employee Pension Contribution</span>\r\n                    <span className=\"font-semibold\">{employeePension}%</span>\r\n                  </Label>\r\n                  <Slider\r\n                    value={[Number(employeePension)]}\r\n                    onValueChange={(value) => setEmployeePension(String(value[0]))}\r\n                    max={15}\r\n                    step={0.5}\r\n                    className=\"mt-2\"\r\n                  />\r\n                  <p className=\"text-xs text-gray-500 mt-1\">\r\n                    Minimum is 5% of qualifying earnings.\r\n                  </p>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Payroll Summary</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"payroll-summary\"\r\n                    title=\"Payroll Summary\"\r\n                  />\r\n                </div>\r\n\r\n                <Card className=\"bg-blue-50\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-blue-800\">\r\n                      <Building2 className=\"w-5 h-5\" />\r\n                      Employer's Costs\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-2\">\r\n                    <div className=\"flex justify-between text-lg\">\r\n                      <p>Gross Salary</p>{' '}\r\n                      <p>\r\n                        ┬ú{results.grossSalary.toLocaleString('en-GB', { maximumFractionDigits: 2 })}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-lg\">\r\n                      <p>Employer's NI</p>{' '}\r\n                      <p>\r\n                        ┬ú{results.employerNI.toLocaleString('en-GB', { maximumFractionDigits: 2 })}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-lg\">\r\n                      <p>Employer Pension</p>{' '}\r\n                      <p>\r\n                        ┬ú\r\n                        {results.employerPensionContribution.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-xl font-bold pt-2 border-t mt-2\">\r\n                      <p>Total Cost to Employ</p>{' '}\r\n                      <p>\r\n                        ┬ú\r\n                        {results.totalCostToEmployer.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <User className=\"w-5 h-5\" />\r\n                      Employee's Take-Home Pay\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-2\">\r\n                    <div className=\"flex justify-between\">\r\n                      <p>Gross Salary</p>{' '}\r\n                      <p>\r\n                        ┬ú{results.grossSalary.toLocaleString('en-GB', { maximumFractionDigits: 2 })}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-red-600\">\r\n                      <p>Income Tax</p>{' '}\r\n                      <p>- ┬ú{results.tax.toLocaleString('en-GB', { maximumFractionDigits: 2 })}</p>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-red-600\">\r\n                      <p>Employee's NI</p>{' '}\r\n                      <p>\r\n                        - ┬ú\r\n                        {results.employeeNI.toLocaleString('en-GB', { maximumFractionDigits: 2 })}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-red-600\">\r\n                      <p>Employee Pension</p>{' '}\r\n                      <p>\r\n                        - ┬ú\r\n                        {results.employeePensionContribution.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-lg font-bold pt-2 border-t mt-2\">\r\n                      <p>Net Take-Home Pay</p>{' '}\r\n                      <p>┬ú{results.netPay.toLocaleString('en-GB', { maximumFractionDigits: 2 })}</p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Calculate payroll costs</h3>\r\n                  <p>Enter an employee's salary to see the full breakdown.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={payrollFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\PensionCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 96,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Shield, TrendingUp } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\n\r\nexport default function PensionCalculator() {\r\n  const [currentAge, setCurrentAge] = useState('');\r\n  const [retirementAge, setRetirementAge] = useState('');\r\n  const [currentPension, setCurrentPension] = useState('');\r\n  const [monthlyContribution, setMonthlyContribution] = useState('');\r\n  const [employerContribution, setEmployerContribution] = useState('');\r\n  const [annualGrowth, setAnnualGrowth] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const age = Number(currentAge) || 0;\r\n    const retAge = Number(retirementAge) || 0;\r\n    const current = Number(currentPension) || 0;\r\n    const monthly = Number(monthlyContribution) || 0;\r\n    const employer = Number(employerContribution) || 0;\r\n    const growth = Number(annualGrowth) || 0;\r\n\r\n    if (retAge <= age) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const yearsToRetirement = retAge - age;\r\n    const monthsToRetirement = yearsToRetirement * 12;\r\n    const monthlyGrowthRate = growth / 100 / 12;\r\n    const totalMonthlyContribution = monthly + employer;\r\n\r\n    // Future value of current pension\r\n    const futureValueCurrent = current * Math.pow(1 + growth / 100, yearsToRetirement);\r\n\r\n    // Future value of monthly contributions\r\n    let futureValueContributions = 0;\r\n    if (monthlyGrowthRate > 0) {\r\n      futureValueContributions =\r\n        totalMonthlyContribution *\r\n        ((Math.pow(1 + monthlyGrowthRate, monthsToRetirement) - 1) / monthlyGrowthRate);\r\n    } else {\r\n      futureValueContributions = totalMonthlyContribution * monthsToRetirement;\r\n    }\r\n\r\n    const totalPensionPot = futureValueCurrent + futureValueContributions;\r\n    const totalContributions = current + totalMonthlyContribution * monthsToRetirement;\r\n    const totalGrowth = totalPensionPot - totalContributions;\r\n\r\n    // Rough annual income estimate (4% rule)\r\n    const estimatedAnnualIncome = totalPensionPot * 0.04;\r\n\r\n    const newResults = {\r\n      yearsToRetirement,\r\n      totalPensionPot,\r\n      totalContributions,\r\n      totalGrowth,\r\n      estimatedAnnualIncome,\r\n      monthlyIncome: estimatedAnnualIncome / 12,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Years to Retirement', yearsToRetirement.toString()],\r\n      ['Total Pension Pot', `┬ú${totalPensionPot.toFixed(2)}`],\r\n      ['Total Contributions', `┬ú${totalContributions.toFixed(2)}`],\r\n      ['Investment Growth', `┬ú${totalGrowth.toFixed(2)}`],\r\n      ['Estimated Annual Income', `┬ú${estimatedAnnualIncome.toFixed(2)}`],\r\n      ['Estimated Monthly Income', `┬ú${(estimatedAnnualIncome / 12).toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [\r\n    currentAge,\r\n    retirementAge,\r\n    currentPension,\r\n    monthlyContribution,\r\n    employerContribution,\r\n    annualGrowth,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              UK Pension Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              The best time to plant a tree was 20 years ago. The second best time is now. Start\r\n              planning your retirement today.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Pension Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"currentAge\">Current Age</Label>\r\n                    <Input\r\n                      id=\"currentAge\"\r\n                      type=\"number\"\r\n                      value={currentAge}\r\n                      onChange={(e) => setCurrentAge(e.target.value)}\r\n                      placeholder=\"e.g. 35\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"retirementAge\">Retirement Age</Label>\r\n                    <Input\r\n                      id=\"retirementAge\"\r\n                      type=\"number\"\r\n                      value={retirementAge}\r\n                      onChange={(e) => setRetirementAge(e.target.value)}\r\n                      placeholder=\"e.g. 65\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"currentPension\">Current Pension Pot</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"currentPension\"\r\n                      type=\"number\"\r\n                      value={currentPension}\r\n                      onChange={(e) => setCurrentPension(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 25000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"monthlyContribution\">Your Monthly Contribution</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"monthlyContribution\"\r\n                      type=\"number\"\r\n                      value={monthlyContribution}\r\n                      onChange={(e) => setMonthlyContribution(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 300\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"employerContribution\">Employer Contribution (Monthly)</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"employerContribution\"\r\n                      type=\"number\"\r\n                      value={employerContribution}\r\n                      onChange={(e) => setEmployerContribution(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 200\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"annualGrowth\">Expected Annual Growth (%)</Label>\r\n                  <Input\r\n                    id=\"annualGrowth\"\r\n                    type=\"number\"\r\n                    value={annualGrowth}\r\n                    onChange={(e) => setAnnualGrowth(e.target.value)}\r\n                    step=\"0.1\"\r\n                    placeholder=\"e.g. 5\"\r\n                  />\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Pension\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"space-y-6\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your Retirement Forecast</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"pension-forecast\"\r\n                    title=\"Pension Forecast\"\r\n                  />\r\n                </div>\r\n                <Card className=\"bg-gradient-to-br from-blue-50 to-blue-100 border-blue-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-blue-900\">Projected Pension Pot</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-center p-4\">\r\n                      <Shield className=\"w-12 h-12 mx-auto text-blue-600 mb-4\" />\r\n                      <p className=\"text-4xl font-bold text-blue-800\">\r\n                        ┬ú{results.totalPensionPot.toLocaleString()}\r\n                      </p>\r\n                      <p className=\"text-blue-700 mt-2\">\r\n                        At retirement in {results.yearsToRetirement} years\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Estimated Retirement Income</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"p-4 bg-green-50 rounded-lg\">\r\n                      <p className=\"text-sm text-green-800\">Annual Income (4% rule)</p>\r\n                      <p className=\"text-3xl font-bold text-green-900\">\r\n                        ┬ú{results.estimatedAnnualIncome.toLocaleString()}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"p-4 bg-purple-50 rounded-lg\">\r\n                      <p className=\"text-sm text-purple-800\">Monthly Income</p>\r\n                      <p className=\"text-2xl font-bold text-purple-900\">\r\n                        ┬ú{results.monthlyIncome.toLocaleString()}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Contribution Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Total Contributions:</span>\r\n                      <span className=\"font-semibold\">\r\n                        ┬ú{results.totalContributions.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Investment Growth:</span>\r\n                      <span className=\"font-semibold text-green-600\">\r\n                        ┬ú{results.totalGrowth.toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Shield className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Plan your retirement</h3>\r\n                  <p>Enter your details to forecast your pension.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\PensionContributionCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 120,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { PoundSterling, Calculator, Shield, TrendingUp } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst pensionFAQs = [\r\n  {\r\n    question: 'What is the minimum pension contribution in the UK?',\r\n    answer:\r\n      'Under auto-enrolment, the minimum total contribution is 8% of qualifying earnings (between ┬ú6,240 and ┬ú50,270 for 2024/25). The employer must contribute at least 3%, with the employee contributing at least 5%.',\r\n  },\r\n  {\r\n    question: 'How much tax relief do I get on pension contributions?',\r\n    answer:\r\n      'You get tax relief at your marginal rate. Basic rate taxpayers get 20% relief, higher rate taxpayers get 40%, and additional rate taxpayers get 45%. This effectively reduces the cost of your pension contributions.',\r\n  },\r\n  {\r\n    question: 'What is the annual allowance for pension contributions?',\r\n    answer:\r\n      'For 2024/25, the annual allowance is ┬ú60,000. This is the maximum amount you can contribute to pensions in a tax year while still receiving tax relief. High earners may have a reduced allowance (tapered annual allowance).',\r\n  },\r\n];\r\n\r\nexport default function PensionContributionCalculator() {\r\n  const [salary, setSalary] = useState('');\r\n  const [employeeContribution, setEmployeeContribution] = useState('5');\r\n  const [employerContribution, setEmployerContribution] = useState('3');\r\n  const [taxBand, setTaxBand] = useState('basic');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const annualSalary = Number(salary) || 0;\r\n    const empContrib = Number(employeeContribution) || 0;\r\n    const emplerContrib = Number(employerContribution) || 0;\r\n\r\n    if (annualSalary <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    // Qualifying earnings band for auto-enrolment\r\n    const lowerThreshold = 6240;\r\n    const upperThreshold = 50270;\r\n    const qualifyingEarnings = Math.max(0, Math.min(annualSalary, upperThreshold) - lowerThreshold);\r\n\r\n    // Calculate contributions\r\n    const employeeContribAmount = (qualifyingEarnings * empContrib) / 100;\r\n    const employerContribAmount = (qualifyingEarnings * emplerContrib) / 100;\r\n    const totalContribution = employeeContribAmount + employerContribAmount;\r\n\r\n    // Tax relief calculation\r\n    const taxReliefRates = { basic: 0.2, higher: 0.4, additional: 0.45 };\r\n    const taxRelief = employeeContribAmount * taxReliefRates[taxBand];\r\n    const netCostToEmployee = employeeContribAmount - taxRelief;\r\n\r\n    // Monthly figures\r\n    const monthlyEmployeeContrib = employeeContribAmount / 12;\r\n    const monthlyEmployerContrib = employerContribAmount / 12;\r\n    const monthlyNetCost = netCostToEmployee / 12;\r\n\r\n    const newResults = {\r\n      qualifyingEarnings,\r\n      employeeContribAmount,\r\n      employerContribAmount,\r\n      totalContribution,\r\n      taxRelief,\r\n      netCostToEmployee,\r\n      monthlyEmployeeContrib,\r\n      monthlyEmployerContrib,\r\n      monthlyNetCost,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Annual', 'Monthly'],\r\n      ['Qualifying Earnings', `┬ú${newResults.qualifyingEarnings.toFixed(2)}`, ''],\r\n      [\r\n        'Employee Contribution',\r\n        `┬ú${newResults.employeeContribAmount.toFixed(2)}`,\r\n        `┬ú${newResults.monthlyEmployeeContrib.toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Employer Contribution',\r\n        `┬ú${newResults.employerContribAmount.toFixed(2)}`,\r\n        `┬ú${newResults.monthlyEmployerContrib.toFixed(2)}`,\r\n      ],\r\n      ['Total Contribution', `┬ú${newResults.totalContribution.toFixed(2)}`, ''],\r\n      ['Tax Relief', `┬ú${newResults.taxRelief.toFixed(2)}`, ''],\r\n      [\r\n        'Net Cost to You',\r\n        `┬ú${newResults.netCostToEmployee.toFixed(2)}`,\r\n        `┬ú${newResults.monthlyNetCost.toFixed(2)}`,\r\n      ],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [salary, employeeContribution, employerContribution, taxBand]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK Pension Contribution Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Calculate your pension contributions, tax relief, and the real cost of building your\r\n              retirement savings.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Pension Contribution Calculation</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Your Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"salary\">Annual Salary</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"salary\"\r\n                      type=\"number\"\r\n                      value={salary}\r\n                      onChange={(e) => setSalary(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 40000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"employeeContribution\">Your Contribution (%)</Label>\r\n                  <div className=\"relative\">\r\n                    <Shield className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"employeeContribution\"\r\n                      type=\"number\"\r\n                      value={employeeContribution}\r\n                      onChange={(e) => setEmployeeContribution(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 5\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">Minimum 5% under auto-enrolment</p>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"employerContribution\">Employer Contribution (%)</Label>\r\n                  <div className=\"relative\">\r\n                    <Shield className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"employerContribution\"\r\n                      type=\"number\"\r\n                      value={employerContribution}\r\n                      onChange={(e) => setEmployerContribution(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 3\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">Minimum 3% under auto-enrolment</p>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Your Tax Band</Label>\r\n                  <Select value={taxBand} onValueChange={setTaxBand}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"basic\">Basic Rate (20%)</SelectItem>\r\n                      <SelectItem value=\"higher\">Higher Rate (40%)</SelectItem>\r\n                      <SelectItem value=\"additional\">Additional Rate (45%)</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Contributions\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your Pension Contributions</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"pension-contributions\"\r\n                    title=\"Pension Contributions\"\r\n                  />\r\n                </div>\r\n                <Card className=\"bg-green-50 border-green-200\">\r\n                  <CardContent className=\"p-6\">\r\n                    <h3 className=\"font-semibold text-green-800 mb-2\">Net Monthly Cost to You</h3>\r\n                    <div className=\"text-4xl font-bold text-green-900\">\r\n                      ┬ú\r\n                      {results.monthlyNetCost.toLocaleString('en-GB', {\r\n                        minimumFractionDigits: 2,\r\n                        maximumFractionDigits: 2,\r\n                      })}\r\n                    </div>\r\n                    <p className=\"text-sm text-green-700\">\r\n                      After {taxBand === 'basic' ? '20%' : taxBand === 'higher' ? '40%' : '45%'} tax\r\n                      relief\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Your Contributions</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-3\">\r\n                      <div className=\"p-3 bg-blue-50 rounded\">\r\n                        <p className=\"text-sm text-blue-600\">Gross Monthly Contribution</p>\r\n                        <p className=\"text-lg font-semibold\">\r\n                          ┬ú\r\n                          {results.monthlyEmployeeContrib.toLocaleString('en-GB', {\r\n                            minimumFractionDigits: 2,\r\n                          })}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"p-3 bg-green-50 rounded\">\r\n                        <p className=\"text-sm text-green-600\">Annual Tax Relief</p>\r\n                        <p className=\"text-lg font-semibold\">\r\n                          ┬ú{results.taxRelief.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                        </p>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Employer Contributions</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-3\">\r\n                      <div className=\"p-3 bg-purple-50 rounded\">\r\n                        <p className=\"text-sm text-purple-600\">Monthly Employer Contribution</p>\r\n                        <p className=\"text-lg font-semibold\">\r\n                          ┬ú\r\n                          {results.monthlyEmployerContrib.toLocaleString('en-GB', {\r\n                            minimumFractionDigits: 2,\r\n                          })}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"p-3 bg-gray-50 rounded\">\r\n                        <p className=\"text-sm text-gray-600\">Total Annual Pension Growth</p>\r\n                        <p className=\"text-lg font-semibold\">\r\n                          ┬ú\r\n                          {results.totalContribution.toLocaleString('en-GB', {\r\n                            maximumFractionDigits: 0,\r\n                          })}\r\n                        </p>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Plan your pension future</h3>\r\n                  <p>Enter your details to see contribution costs and tax relief.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={pensionFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\PersonalLoanCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 119,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { PoundSterling, Calculator, Percent, Calendar } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\nconst personalLoanFAQs = [\r\n  {\r\n    question: 'What is an APR on a personal loan?',\r\n    answer:\r\n      'The Annual Percentage Rate (APR) represents the total cost of borrowing over a year, including the interest rate and any other fees. A lower APR means a cheaper loan.',\r\n  },\r\n  {\r\n    question: 'How can I get a better interest rate on a personal loan?',\r\n    answer:\r\n      'Improving your credit score is the most effective way. You can also get better rates by securing the loan against an asset (though this is riskier), choosing a shorter loan term, or shopping around and comparing offers from different lenders.',\r\n  },\r\n  {\r\n    question: \"What's the difference between a personal loan and a credit card?\",\r\n    answer:\r\n      'A personal loan gives you a fixed lump sum that you repay in fixed monthly instalments over a set term. A credit card offers a revolving line of credit that you can use, repay, and reuse. Loans typically have lower interest rates than credit cards, making them better for large, planned purchases.',\r\n  },\r\n];\r\n\r\nconst generateAmortizationSchedule = (loanAmount, monthlyRate, term) => {\r\n  const schedule = [];\r\n  let balance = loanAmount;\r\n  const monthlyPayment = (loanAmount * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -term));\r\n\r\n  for (let month = 1; month <= term; month++) {\r\n    const interestPayment = balance * monthlyRate;\r\n    const principalPayment = monthlyPayment - interestPayment;\r\n    balance -= principalPayment;\r\n    schedule.push({\r\n      month,\r\n      'Remaining Balance': balance > 0 ? balance : 0,\r\n      'Interest Paid': interestPayment,\r\n      'Principal Paid': principalPayment,\r\n    });\r\n  }\r\n  return schedule;\r\n};\r\n\r\nexport default function PersonalLoanCalculator() {\r\n  const [loanAmount, setLoanAmount] = useState('10000');\r\n  const [interestRate, setInterestRate] = useState('5.5');\r\n  const [loanTerm, setLoanTerm] = useState('60'); // in months\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const amount = Number(loanAmount) || 0;\r\n    const rate = Number(interestRate) / 100;\r\n    const term = Number(loanTerm) || 0;\r\n\r\n    if (amount <= 0 || rate <= 0 || term <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const monthlyRate = rate / 12;\r\n    const monthlyPayment = (amount * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -term));\r\n    const totalRepayment = monthlyPayment * term;\r\n    const totalInterest = totalRepayment - amount;\r\n    const amortizationData = generateAmortizationSchedule(amount, monthlyRate, term);\r\n\r\n    const newResults = {\r\n      monthlyPayment,\r\n      totalRepayment,\r\n      totalInterest,\r\n      loanAmount: amount,\r\n      amortizationData,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Loan Amount', `┬ú${amount.toFixed(2)}`],\r\n      ['Interest Rate (APR)', `${interestRate}%`],\r\n      ['Loan Term', `${term} months`],\r\n      ['Monthly Payment', `┬ú${monthlyPayment.toFixed(2)}`],\r\n      ['Total Interest Paid', `┬ú${totalInterest.toFixed(2)}`],\r\n      ['Total Amount Repaid', `┬ú${totalRepayment.toFixed(2)}`],\r\n      ['---'],\r\n      ['Month', 'Principal Paid', 'Interest Paid', 'Remaining Balance'],\r\n      ...amortizationData.map((row) => [\r\n        row.month,\r\n        `┬ú${row['Principal Paid'].toFixed(2)}`,\r\n        `┬ú${row['Interest Paid'].toFixed(2)}`,\r\n        `┬ú${row['Remaining Balance'].toFixed(2)}`,\r\n      ]),\r\n    ];\r\n    setCsvData(csvExportData);\r\n  }, [loanAmount, interestRate, loanTerm]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Personal Loan Calculator UK\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Calculate your monthly payments, total interest, and see a full repayment schedule for\r\n              any personal loan.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Personal Loan Calculation</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Loan Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label htmlFor=\"loanAmount\" className=\"flex justify-between\">\r\n                    <span>Loan Amount</span>\r\n                    <span className=\"font-semibold\">┬ú{Number(loanAmount).toLocaleString()}</span>\r\n                  </Label>\r\n                  <div className=\"relative mt-2\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"loanAmount\"\r\n                      type=\"number\"\r\n                      value={loanAmount}\r\n                      onChange={(e) => setLoanAmount(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                  <Slider\r\n                    value={[Number(loanAmount)]}\r\n                    onValueChange={(value) => setLoanAmount(String(value[0]))}\r\n                    max={50000}\r\n                    step={500}\r\n                    className=\"mt-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"interestRate\" className=\"flex justify-between\">\r\n                    <span>Interest Rate (APR)</span>\r\n                    <span className=\"font-semibold\">{Number(interestRate).toFixed(1)}%</span>\r\n                  </Label>\r\n                  <div className=\"relative mt-2\">\r\n                    <Percent className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"interestRate\"\r\n                      type=\"number\"\r\n                      value={interestRate}\r\n                      onChange={(e) => setInterestRate(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                  <Slider\r\n                    value={[Number(interestRate)]}\r\n                    onValueChange={(value) => setInterestRate(String(value[0]))}\r\n                    max={25}\r\n                    step={0.1}\r\n                    className=\"mt-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"loanTerm\" className=\"flex justify-between\">\r\n                    <span>Loan Term (Months)</span>\r\n                    <span className=\"font-semibold\">{loanTerm} months</span>\r\n                  </Label>\r\n                  <div className=\"relative mt-2\">\r\n                    <Calendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"loanTerm\"\r\n                      type=\"number\"\r\n                      value={loanTerm}\r\n                      onChange={(e) => setLoanTerm(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                  <Slider\r\n                    value={[Number(loanTerm)]}\r\n                    onValueChange={(value) => setLoanTerm(String(value[0]))}\r\n                    max={120}\r\n                    step={12}\r\n                    className=\"mt-2\"\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your Loan Repayment Summary</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"personal-loan-summary\"\r\n                    title=\"Personal Loan Summary\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid md:grid-cols-3 gap-4\">\r\n                  <Card className=\"bg-blue-50\">\r\n                    <CardHeader>\r\n                      <CardTitle>Monthly Payment</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-3xl font-bold text-blue-800\">\r\n                        ┬ú{results.monthlyPayment.toFixed(2)}\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card className=\"bg-red-50\">\r\n                    <CardHeader>\r\n                      <CardTitle>Total Interest</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-3xl font-bold text-red-800\">\r\n                        ┬ú\r\n                        {results.totalInterest.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card className=\"bg-gray-100\">\r\n                    <CardHeader>\r\n                      <CardTitle>Total Repayment</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-3xl font-bold text-gray-800\">\r\n                        ┬ú\r\n                        {results.totalRepayment.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Loan Balance Over Time</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                      <LineChart data={results.amortizationData}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis\r\n                          dataKey=\"month\"\r\n                          label={{ value: 'Month', position: 'insideBottom', offset: -5 }}\r\n                        />\r\n                        <YAxis tickFormatter={(value) => `┬ú${(value / 1000).toFixed(0)}k`} />\r\n                        <Tooltip\r\n                          formatter={(value) =>\r\n                            `┬ú${Number(value).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n                          }\r\n                        />\r\n                        <Legend />\r\n                        <Line\r\n                          type=\"monotone\"\r\n                          dataKey=\"Remaining Balance\"\r\n                          stroke=\"#3b82f6\"\r\n                          strokeWidth={2}\r\n                          dot={false}\r\n                        />\r\n                      </LineChart>\r\n                    </ResponsiveContainer>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Amortization Schedule</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"max-h-96 overflow-y-auto\">\r\n                    <table className=\"w-full text-sm text-left\">\r\n                      <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 sticky top-0\">\r\n                        <tr>\r\n                          <th className=\"px-4 py-2\">Month</th>\r\n                          <th className=\"px-4 py-2\">Principal Paid</th>\r\n                          <th className=\"px-4 py-2\">Interest Paid</th>\r\n                          <th className=\"px-4 py-2\">Remaining Balance</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {results.amortizationData.map((row) => (\r\n                          <tr key={row.month} className=\"bg-white border-b hover:bg-gray-50\">\r\n                            <td className=\"px-4 py-2\">{row.month}</td>\r\n                            <td className=\"px-4 py-2\">┬ú{row['Principal Paid'].toFixed(2)}</td>\r\n                            <td className=\"px-4 py-2 text-red-600\">\r\n                              ┬ú{row['Interest Paid'].toFixed(2)}\r\n                            </td>\r\n                            <td className=\"px-4 py-2 font-medium\">\r\n                              ┬ú{row['Remaining Balance'].toFixed(2)}\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Enter your loan details</h3>\r\n                  <p>Calculate your monthly payments and see your repayment schedule.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={personalLoanFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\PrivacyPolicy.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 7,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { ShieldCheck } from 'lucide-react';\r\n\r\nexport default function PrivacyPolicy() {\r\n  return (\r\n    <div className=\"bg-white py-12\">\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"text-center mb-12\">\r\n          <ShieldCheck className=\"w-12 h-12 mx-auto text-blue-600\" />\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mt-4\">Privacy Policy</h1>\r\n          <p className=\"text-lg text-gray-600 mt-2\">Last updated: 27/08/2025</p>\r\n        </div>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-8 space-y-6 text-gray-700 leading-relaxed\">\r\n            <p>\r\n              Welcome to CalcMyMoney.co.uk. We are committed to protecting and respecting your\r\n              privacy. This policy explains what personal data we collect from you, or that you\r\n              provide to us, and how it will be processed by us.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 pt-4\">1. Information We Collect</h2>\r\n            <p>We may collect and process the following data about you:</p>\r\n            <ul className=\"list-disc list-inside space-y-2\">\r\n              <li>\r\n                <strong>Data You Provide:</strong> Information that you provide by filling in forms\r\n                on our site. This includes data entered into our calculators and information\r\n                provided when you contact us.\r\n              </li>\r\n              <li>\r\n                <strong>Usage Data:</strong> We may collect anonymous information about your\r\n                computer, including your IP address, operating system, and browser type, for system\r\n                administration and to report aggregate information. This is statistical data about\r\n                our users' browsing actions and patterns, and does not identify any individual.\r\n              </li>\r\n            </ul>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 pt-4\">2. Use of Calculator Data</h2>\r\n            <p>\r\n              All data entered into our financial calculators is processed in your browser. We do\r\n              not store, save, or view any of the personal or financial data you enter into the\r\n              calculators on our servers. Your financial information is yours alone.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 pt-4\">3. Cookies</h2>\r\n            <p>\r\n              Our website uses cookies to distinguish you from other users of our website. This\r\n              helps us to provide you with a good experience when you browse our website and also\r\n              allows us to improve our site. For detailed information on the cookies we use and the\r\n              purposes for which we use them see our Cookie Policy.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 pt-4\">4. Your Rights</h2>\r\n            <p>\r\n              You have the right to ask us not to process your personal data for marketing purposes.\r\n              You can exercise your right to prevent such processing by checking certain boxes on\r\n              the forms we use to collect your data.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 pt-4\">\r\n              5. Changes to Our Privacy Policy\r\n            </h2>\r\n            <p>\r\n              Any changes we may make to our privacy policy in the future will be posted on this\r\n              page and, where appropriate, notified to you by e-mail.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 pt-4\">6. Contact</h2>\r\n            <p>\r\n              Questions, comments and requests regarding this privacy policy are welcomed and should\r\n              be addressed through our contact form.\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\ProRataSalaryCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 120,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Clock } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\n\r\nexport default function ProRataSalaryCalculator() {\r\n  const [fullTimeSalary, setFullTimeSalary] = useState('');\r\n  const [fullTimeHours, setFullTimeHours] = useState('37.5');\r\n  const [partTimeHours, setPartTimeHours] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  // Constants for last updated date\r\n  const LAST_UPDATED_ISO = '2025-04-06';\r\n  const LAST_UPDATED_DISPLAY = '6 April 2025';\r\n\r\n  const handleCalculate = () => {\r\n    const ftSalary = Number(fullTimeSalary) || 0;\r\n    const ftHours = Number(fullTimeHours) || 0;\r\n    const ptHours = Number(partTimeHours) || 0;\r\n\r\n    if (ftSalary <= 0 || ftHours <= 0 || ptHours <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const hourlyRate = ftSalary / (ftHours * 52);\r\n    const proRataAnnual = (ftSalary / ftHours) * ptHours;\r\n\r\n    const newResults = {\r\n      proRataAnnual,\r\n      proRataMonthly: proRataAnnual / 12,\r\n      proRataWeekly: proRataAnnual / 52,\r\n      // The original proRataDaily calculation was complex and potentially incorrect,\r\n      // and not directly displayed or required by the outline. Removing to simplify\r\n      // and avoid potential miscalculation if not used. If needed, a more robust\r\n      // calculation based on annual/working days per year should be implemented.\r\n      // proRataDaily: proRataAnnual / (ptHours * 52) * (ptHours / 5), // Assuming 5-day week\r\n      hourlyRate,\r\n      fullTimeSalary: ftSalary,\r\n      fullTimeHours: ftHours,\r\n      partTimeHours: ptHours,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Pro-Rata Annual Salary', `┬ú${newResults.proRataAnnual.toFixed(2)}`],\r\n      ['Pro-Rata Monthly Salary', `┬ú${newResults.proRataMonthly.toFixed(2)}`],\r\n      ['Pro-Rata Weekly Salary', `┬ú${newResults.proRataWeekly.toFixed(2)}`],\r\n      ['Equivalent Hourly Rate', `┬ú${newResults.hourlyRate.toFixed(2)}`],\r\n      ['Full-Time Equivalent Salary', `┬ú${ftSalary.toFixed(2)}`],\r\n      ['Full-Time Hours', `${ftHours} / week`],\r\n      ['Part-Time Hours', `${ptHours} / week`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [fullTimeSalary, fullTimeHours, partTimeHours]);\r\n\r\n  const origin =\r\n    typeof window !== 'undefined' ? window.location.origin : 'https://www.calcmymoney.co.uk';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Salary & Income',\r\n        item: `${origin}${createPageUrl('SalaryCalculatorUK')}`,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const faqs = [\r\n    {\r\n      question: 'How is pro-rata salary calculated?',\r\n      answer:\r\n        'We scale the full-time annual salary by your contracted days or hours to estimate the pro-rata amount for part-time or partial-year roles.',\r\n    },\r\n    {\r\n      question: 'Can I compare part-time vs full-time pay?',\r\n      answer:\r\n        'Yes. Adjust hours or days to compare pro-rata pay against the full-time salary equivalent.',\r\n    },\r\n    {\r\n      question: 'Does this show net (after tax) values too?',\r\n      answer:\r\n        'Use our Take-Home Pay or Gross-to-Net calculators to estimate the after-tax impact of your pro-rata salary.',\r\n    },\r\n  ];\r\n\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: faqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <script\r\n        type=\"application/ld+json\"\r\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(faqJson) }}\r\n      />\r\n      <div className=\"bg-white dark:bg-gray-900\">\r\n        <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n            <div className=\"text-center\">\r\n              <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-2\">\r\n                Pro-Rata Salary Calculator (UK)\r\n              </h1>\r\n              <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n                Calculate your part-time salary based on a full-time equivalent wage. Ensure you're\r\n                getting paid fairly for the hours you work.\r\n              </p>\r\n\r\n              {/* Quick links: Hub + sibling */}\r\n              <div className=\"mt-4 flex flex-wrap justify-center gap-2\">\r\n                <Link\r\n                  to={createPageUrl('SalaryCalculatorUK')}\r\n                  className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50 dark:bg-gray-800 dark:text-blue-300 dark:border-blue-700\"\r\n                >\r\n                  Salary Hub\r\n                </Link>\r\n                <Link\r\n                  to={createPageUrl('SalaryCalculatorTakeHomePay')}\r\n                  className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50 dark:bg-gray-800 dark:text-blue-300 dark:border-blue-700\"\r\n                >\r\n                  TakeÔÇæHome Pay\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"print-title hidden\">Pro-Rata Salary Calculation</div>\r\n          <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n            <div className=\"lg:col-span-2 non-printable\">\r\n              <Card className=\"sticky top-24\">\r\n                <CardHeader>\r\n                  <CardTitle>Enter Details</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-6\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"fullTimeSalary\">Full-Time Annual Salary</Label>\r\n                    <div className=\"relative\">\r\n                      <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                      <Input\r\n                        id=\"fullTimeSalary\"\r\n                        type=\"number\"\r\n                        value={fullTimeSalary}\r\n                        onChange={(e) => setFullTimeSalary(e.target.value)}\r\n                        className=\"pl-10\"\r\n                        placeholder=\"e.g. 35000\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"fullTimeHours\">Full-Time Weekly Hours</Label>\r\n                    <div className=\"relative\">\r\n                      <Clock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                      <Input\r\n                        id=\"fullTimeHours\"\r\n                        type=\"number\"\r\n                        value={fullTimeHours}\r\n                        onChange={(e) => setFullTimeHours(e.target.value)}\r\n                        className=\"pl-10\"\r\n                        placeholder=\"e.g. 37.5\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"partTimeHours\">Your Part-Time Weekly Hours</Label>\r\n                    <div className=\"relative\">\r\n                      <Clock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                      <Input\r\n                        id=\"partTimeHours\"\r\n                        type=\"number\"\r\n                        value={partTimeHours}\r\n                        onChange={(e) => setPartTimeHours(e.target.value)}\r\n                        className=\"pl-10\"\r\n                        placeholder=\"e.g. 20\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                    <Calculator className=\"w-5 h-5 mr-2\" />\r\n                    Calculate\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n              {hasCalculated && results ? (\r\n                <>\r\n                  <div className=\"flex justify-between items-center non-printable\">\r\n                    <h2 className=\"text-2xl font-bold text-gray-800\">Your Pro-Rata Salary</h2>\r\n                    <ExportActions\r\n                      csvData={csvData}\r\n                      fileName=\"pro-rata-salary\"\r\n                      title=\"Pro-Rata Salary\"\r\n                    />\r\n                  </div>\r\n                  <Card className=\"bg-green-50 border-green-200\">\r\n                    <CardContent className=\"p-6\">\r\n                      <h3 className=\"font-semibold text-green-800 mb-2\">Pro-Rata Annual Salary</h3>\r\n                      <div className=\"text-4xl font-bold text-green-900\">\r\n                        ┬ú\r\n                        {results.proRataAnnual.toLocaleString('en-GB', {\r\n                          minimumFractionDigits: 2,\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Salary Breakdown</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"grid grid-cols-2 gap-4\">\r\n                      <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n                        <p className=\"text-sm text-gray-600\">Monthly Pay</p>\r\n                        <p className=\"text-lg font-semibold\">\r\n                          ┬ú\r\n                          {results.proRataMonthly.toLocaleString('en-GB', {\r\n                            minimumFractionDigits: 2,\r\n                            maximumFractionDigits: 2,\r\n                          })}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n                        <p className=\"text-sm text-gray-600\">Weekly Pay</p>\r\n                        <p className=\"text-lg font-semibold\">\r\n                          ┬ú\r\n                          {results.proRataWeekly.toLocaleString('en-GB', {\r\n                            minimumFractionDigits: 2,\r\n                            maximumFractionDigits: 2,\r\n                          })}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"p-4 bg-gray-50 rounded-lg col-span-2\">\r\n                        <p className=\"text-sm text-gray-600\">Equivalent Hourly Rate</p>\r\n                        <p className=\"text-lg font-semibold\">\r\n                          ┬ú\r\n                          {results.hourlyRate.toLocaleString('en-GB', {\r\n                            minimumFractionDigits: 2,\r\n                            maximumFractionDigits: 2,\r\n                          })}\r\n                        </p>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </>\r\n              ) : (\r\n                <Card className=\"flex items-center justify-center h-[400px]\">\r\n                  <div className=\"text-center text-gray-500\">\r\n                    <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                    <h3 className=\"text-xl font-semibold\">Ready for your calculation?</h3>\r\n                    <p>Enter the details to see your pro-rata salary.</p>\r\n                  </div>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Back to hub link (show if not already present) */}\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 mt-6\">\r\n          <Link to={createPageUrl('SalaryCalculatorUK')} className=\"text-blue-600 hover:underline\">\r\n            ÔåÉ Back to Salary & Income Hub\r\n          </Link>\r\n        </div>\r\n\r\n        {/* Visible FAQ section aligned with JSON-LD */}\r\n        <div className=\"bg-gray-50 dark:bg-gray-800/50 py-10 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={faqs} title=\"ProÔÇæRata Salary FAQs\" />\r\n            <p className=\"text-xs text-gray-500 mt-6\">\r\n              Last updated: <time dateTime={LAST_UPDATED_ISO}>{LAST_UPDATED_DISPLAY}</time>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <RelatedCalculators\r\n        calculators={[\r\n          {\r\n            name: 'UK Salary Calculator (Take-Home Pay 2025/26)',\r\n            url: createPageUrl('SalaryCalculatorUK'),\r\n            description: 'Primary hub for takeÔÇæhome pay calculations.',\r\n          },\r\n          {\r\n            name: 'Take-Home Pay Calculator UK (2025/26)',\r\n            url: createPageUrl('SalaryCalculatorTakeHomePay'),\r\n            description: 'See net pay after tax and NI.',\r\n          },\r\n          {\r\n            name: 'Paycheck Calculator UK (After Tax & NI)',\r\n            url: createPageUrl('SalaryCalculatorPaycheck'),\r\n            description: 'Check your paycheck after deductions.',\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\RedundancyPayCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 60,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Briefcase, AlertTriangle } from 'lucide-react';\r\n\r\n// Statutory limits for 2024/2025 - check gov.uk for latest figures\r\nconst MAX_WEEKLY_PAY = 700;\r\nconst MAX_SERVICE_YEARS = 20;\r\n\r\nexport default function RedundancyPayCalculator() {\r\n  const [age, setAge] = useState('');\r\n  const [yearsOfService, setYearsOfService] = useState('');\r\n  const [weeklyPay, setWeeklyPay] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = () => {\r\n    const currentAge = Number(age) || 0;\r\n    const service = Math.min(Number(yearsOfService) || 0, MAX_SERVICE_YEARS);\r\n    const pay = Number(weeklyPay) || 0;\r\n    const cappedPay = Math.min(pay, MAX_WEEKLY_PAY);\r\n\r\n    if (currentAge < 18 || service < 2) {\r\n      setResults({\r\n        redundancyPay: 0,\r\n        message: 'You must have at least 2 years of continuous service.',\r\n      });\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    let totalWeeks = 0;\r\n    for (let i = 0; i < service; i++) {\r\n      const ageAtYearOfService = currentAge - i;\r\n      if (ageAtYearOfService >= 41) {\r\n        totalWeeks += 1.5;\r\n      } else if (ageAtYearOfService >= 22) {\r\n        totalWeeks += 1.0;\r\n      } else {\r\n        totalWeeks += 0.5;\r\n      }\r\n    }\r\n\r\n    // The number of weeks is capped at 20 years of service, but the calculation method above implicitly handles this by iterating up to `service` which is capped at 20. Total weeks can exceed 20 (e.g. 20 years at 1.5 weeks/year = 30 weeks).\r\n\r\n    const redundancyPay = totalWeeks * cappedPay;\r\n\r\n    setResults({ redundancyPay, cappedPay, totalWeeks, message: null });\r\n    setHasCalculated(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [age, yearsOfService, weeklyPay]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Statutory Redundancy Pay Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              If you're facing redundancy, know your rights. Calculate your estimated statutory\r\n              redundancy entitlement.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"age\">Age at Redundancy</Label>\r\n                  <Input\r\n                    id=\"age\"\r\n                    type=\"number\"\r\n                    value={age}\r\n                    onChange={(e) => setAge(e.target.value)}\r\n                    placeholder=\"e.g. 45\"\r\n                  />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"yearsOfService\">Full Years of Service</Label>\r\n                  <Input\r\n                    id=\"yearsOfService\"\r\n                    type=\"number\"\r\n                    value={yearsOfService}\r\n                    onChange={(e) => setYearsOfService(e.target.value)}\r\n                    placeholder=\"e.g. 10\"\r\n                  />\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"weeklyPay\">Average Weekly Pay (before tax)</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"weeklyPay\"\r\n                      type=\"number\"\r\n                      value={weeklyPay}\r\n                      onChange={(e) => setWeeklyPay(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 600\"\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-xs text-gray-500\">\r\n                    Weekly pay is capped at ┬ú{MAX_WEEKLY_PAY} for this calculation.\r\n                  </p>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Pay\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <Card className=\"bg-blue-50 border-blue-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-blue-800\">\r\n                      <Briefcase className=\"w-6 h-6\" />\r\n                      Estimated Statutory Pay\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center\">\r\n                    <p className=\"text-4xl font-bold text-blue-900\">\r\n                      ┬ú{results.redundancyPay.toLocaleString('en-GB', { minimumFractionDigits: 2 })}\r\n                    </p>\r\n                    {results.message && <p className=\"text-red-600 mt-2\">{results.message}</p>}\r\n                    {!results.message && (\r\n                      <p className=\"text-gray-600 mt-2\">\r\n                        Based on {results.totalWeeks.toFixed(1)} weeks at a capped weekly pay of ┬ú\r\n                        {results.cappedPay.toLocaleString()}.\r\n                      </p>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Important Information</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3 text-sm text-gray-700\">\r\n                    <div className=\"flex items-start gap-3 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                      <AlertTriangle className=\"w-5 h-5 text-yellow-600 mt-0.5\" />\r\n                      <div>\r\n                        This is an estimate of your <strong>statutory</strong> redundancy pay only.\r\n                        Your employer may offer a more generous contractual redundancy package.\r\n                      </div>\r\n                    </div>\r\n                    <ul className=\"list-disc list-inside space-y-2\">\r\n                      <li>\r\n                        You must have at least 2 years of continuous service to qualify for\r\n                        statutory redundancy pay.\r\n                      </li>\r\n                      <li>The first ┬ú30,000 of redundancy pay is usually tax-free.</li>\r\n                      <li>This calculator uses the rates for England, Scotland, and Wales.</li>\r\n                      <li>\r\n                        Always check your contract and consult with ACAS or a legal professional for\r\n                        advice.\r\n                      </li>\r\n                    </ul>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Calculate Your Entitlement</h3>\r\n                  <p>Fill in your details to get an estimate of your statutory redundancy pay.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\RemortgageCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 81,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Repeat, ArrowRight } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst remortgageFAQs = [\r\n  {\r\n    question: 'When should I consider remortgaging?',\r\n    answer:\r\n      \"You should typically start looking to remortgage 3-6 months before your current fixed, tracker, or discount deal ends to avoid moving onto your lender's expensive Standard Variable Rate (SVR). You might also remortgage to release equity or consolidate debt.\",\r\n  },\r\n  {\r\n    question: 'What is Loan to Value (LTV)?',\r\n    answer:\r\n      'LTV is the size of your mortgage in relation to the value of your property. For example, if you have a ┬ú150,000 mortgage on a ┬ú200,000 property, your LTV is 75%. A lower LTV generally gives you access to better mortgage rates.',\r\n  },\r\n  {\r\n    question: 'Are there fees involved in remortgaging?',\r\n    answer:\r\n      \"Yes, there can be. These might include arrangement fees for the new mortgage, legal fees, and valuation fees. Sometimes 'fee-free' deals are available, but the interest rate may be slightly higher.\",\r\n  },\r\n];\r\n\r\nexport default function RemortgageCalculator() {\r\n  const [currentPropertyValue, setCurrentPropertyValue] = useState('300000');\r\n  const [outstandingMortgage, setOutstandingMortgage] = useState('150000');\r\n  const [currentMonthlyPayment, setCurrentMonthlyPayment] = useState('800');\r\n\r\n  const [newInterestRate, setNewInterestRate] = useState('4.5');\r\n  const [newMortgageTerm, setNewMortgageTerm] = useState('25');\r\n  const [newMortgageFees, setNewMortgageFees] = useState('999');\r\n\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = () => {\r\n    const propVal = Number(currentPropertyValue) || 0;\r\n    const outstanding = Number(outstandingMortgage) || 0;\r\n    const currentPayment = Number(currentMonthlyPayment) || 0;\r\n    const newRate = Number(newInterestRate) / 100;\r\n    const newTermYears = Number(newMortgageTerm) || 0;\r\n    const fees = Number(newMortgageFees) || 0;\r\n\r\n    if (\r\n      propVal <= 0 ||\r\n      outstanding <= 0 ||\r\n      currentPayment <= 0 ||\r\n      newRate <= 0 ||\r\n      newTermYears <= 0\r\n    ) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const equity = propVal - outstanding;\r\n    const ltv = (outstanding / propVal) * 100;\r\n\r\n    const monthlyRate = newRate / 12;\r\n    const numberOfPayments = newTermYears * 12;\r\n    const newMonthlyPayment =\r\n      (outstanding * monthlyRate) / (1 - Math.pow(1 + monthlyRate, -numberOfPayments));\r\n\r\n    const monthlySaving = currentPayment - newMonthlyPayment;\r\n    const firstYearSaving = monthlySaving * 12 - fees;\r\n\r\n    setResults({\r\n      equity,\r\n      ltv,\r\n      newMonthlyPayment,\r\n      monthlySaving,\r\n      firstYearSaving,\r\n    });\r\n    setHasCalculated(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Remortgage &amp; Equity Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              See how much you could save by switching to a new deal, and calculate the equity in\r\n              your home.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid lg:grid-cols-2 gap-8\">\r\n          {/* Input Panel */}\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Enter Your Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-8\">\r\n                <div>\r\n                  <h3 className=\"font-semibold mb-4\">Current Situation</h3>\r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"space-y-1\">\r\n                      <Label>Estimated Property Value</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          value={currentPropertyValue}\r\n                          onChange={(e) => setCurrentPropertyValue(e.target.value)}\r\n                          className=\"pl-10\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"space-y-1\">\r\n                      <Label>Outstanding Mortgage</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          value={outstandingMortgage}\r\n                          onChange={(e) => setOutstandingMortgage(e.target.value)}\r\n                          className=\"pl-10\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"space-y-1\">\r\n                      <Label>Current Monthly Payment</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          value={currentMonthlyPayment}\r\n                          onChange={(e) => setCurrentMonthlyPayment(e.target.value)}\r\n                          className=\"pl-10\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <h3 className=\"font-semibold mb-4\">New Mortgage Deal</h3>\r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"space-y-1\">\r\n                      <Label>New Interest Rate (%)</Label>\r\n                      <Input\r\n                        value={newInterestRate}\r\n                        onChange={(e) => setNewInterestRate(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"space-y-1\">\r\n                      <Label>New Mortgage Term (Years)</Label>\r\n                      <Input\r\n                        value={newMortgageTerm}\r\n                        onChange={(e) => setNewMortgageTerm(e.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"space-y-1\">\r\n                      <Label>New Mortgage Fees</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          value={newMortgageFees}\r\n                          onChange={(e) => setNewMortgageFees(e.target.value)}\r\n                          className=\"pl-10\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Savings\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Results Panel */}\r\n          <div className=\"space-y-6\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <Card className=\"text-center bg-green-50 border-green-200\">\r\n                  <CardHeader>\r\n                    <CardTitle>Potential Monthly Saving</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <p\r\n                      className={`text-5xl font-bold ${results.monthlySaving > 0 ? 'text-green-800' : 'text-red-700'}`}\r\n                    >\r\n                      ┬ú{Math.abs(results.monthlySaving).toFixed(2)}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      {results.monthlySaving > 0 ? 'per month saving' : 'per month increase'}\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Remortgage Summary</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span>Current Payment</span>\r\n                      <span className=\"font-medium\">\r\n                        ┬ú{Number(currentMonthlyPayment).toFixed(2)}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between text-lg\">\r\n                      <span>New Payment</span>\r\n                      <ArrowRight className=\"w-5 h-5 text-gray-400\" />\r\n                      <span className=\"font-semibold text-green-700\">\r\n                        ┬ú{results.newMonthlyPayment.toFixed(2)}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between border-t pt-3\">\r\n                      <span>First Year Saving (after fees)</span>\r\n                      <span\r\n                        className={`font-bold ${results.firstYearSaving > 0 ? 'text-green-700' : 'text-red-700'}`}\r\n                      >\r\n                        ┬ú{results.firstYearSaving.toFixed(2)}\r\n                      </span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Your Equity Position</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Home Equity:</span>{' '}\r\n                      <span className=\"font-semibold\">┬ú{results.equity.toLocaleString()}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Loan to Value (LTV):</span>{' '}\r\n                      <span className=\"font-semibold\">{results.ltv.toFixed(2)}%</span>\r\n                    </div>\r\n                    <p className=\"text-xs text-gray-500 pt-2 border-t\">\r\n                      A lower LTV ratio often gives you access to better interest rates from\r\n                      lenders.\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[400px] bg-gray-50\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Repeat className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Could you save by switching?</h3>\r\n                  <p>Enter your details to find out.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={remortgageFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\RentVsBuyCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 41,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Home, Key, Calculator } from 'lucide-react';\r\n\r\nexport default function RentVsBuyCalculator() {\r\n  const [monthlyRent, setMonthlyRent] = useState('');\r\n  const [propertyPrice, setPropertyPrice] = useState('');\r\n  const [deposit, setDeposit] = useState('');\r\n  const [interestRate, setInterestRate] = useState('');\r\n  const [maintenance, setMaintenance] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const rent = Number(monthlyRent) || 0;\r\n    const price = Number(propertyPrice) || 0;\r\n    const dep = Number(deposit) || 0;\r\n    const rate = Number(interestRate) / 100;\r\n    const maint = Number(maintenance) / 100;\r\n\r\n    if (rent <= 0 || price <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const loan = price - dep;\r\n    const monthlyMortgage =\r\n      loan > 0 ? (loan * (rate / 12)) / (1 - Math.pow(1 + rate / 12, -30 * 12)) : 0;\r\n    const monthlyMaintenance = (price * maint) / 12;\r\n    const monthlyOwnershipCost = monthlyMortgage + monthlyMaintenance;\r\n\r\n    setResults({ rent, ownershipCost: monthlyOwnershipCost });\r\n    setHasCalculated(true);\r\n  }, [monthlyRent, propertyPrice, deposit, interestRate, maintenance]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\r\n          <h1 className=\"text-3xl font-bold text-center\">Rent vs. Buy Calculator</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-7xl mx-auto p-4 py-8\">\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Renting Costs</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Label>Monthly Rent (┬ú)</Label>\r\n              <Input\r\n                type=\"number\"\r\n                value={monthlyRent}\r\n                onChange={(e) => setMonthlyRent(e.target.value)}\r\n                placeholder=\"e.g. 1200\"\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Buying Costs</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-2\">\r\n              <Label>Property Price (┬ú)</Label>\r\n              <Input\r\n                type=\"number\"\r\n                value={propertyPrice}\r\n                onChange={(e) => setPropertyPrice(e.target.value)}\r\n                placeholder=\"e.g. 250000\"\r\n              />\r\n              <Label>Deposit (┬ú)</Label>\r\n              <Input\r\n                type=\"number\"\r\n                value={deposit}\r\n                onChange={(e) => setDeposit(e.target.value)}\r\n                placeholder=\"e.g. 25000\"\r\n              />\r\n              <Label>Mortgage Rate (%)</Label>\r\n              <Input\r\n                type=\"number\"\r\n                value={interestRate}\r\n                onChange={(e) => setInterestRate(e.target.value)}\r\n                placeholder=\"e.g. 5\"\r\n              />\r\n              <Label>Annual Maintenance (%)</Label>\r\n              <Input\r\n                type=\"number\"\r\n                value={maintenance}\r\n                onChange={(e) => setMaintenance(e.target.value)}\r\n                placeholder=\"e.g. 1\"\r\n              />\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                <Calculator className=\"w-5 h-5 mr-2\" />\r\n                Compare Costs\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n          <div>\r\n            {hasCalculated && results ? (\r\n              <Card className=\"bg-blue-50 border-blue-200 h-full\">\r\n                <CardHeader>\r\n                  <CardTitle>Monthly Cost Comparison</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"text-center\">\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <p className=\"text-lg\">Renting</p>\r\n                      <p className=\"text-3xl font-bold\">┬ú{results.rent.toLocaleString()}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-lg\">Owning</p>\r\n                      <p className=\"text-3xl font-bold\">\r\n                        ┬ú\r\n                        {results.ownershipCost.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 0,\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <p\r\n                    className={`mt-4 font-bold ${results.ownershipCost < results.rent ? 'text-green-600' : 'text-red-600'}`}\r\n                  >\r\n                    {results.ownershipCost < results.rent\r\n                      ? 'Buying appears cheaper monthly.'\r\n                      : 'Renting appears cheaper monthly.'}\r\n                  </p>\r\n                  <p className=\"text-xs mt-2 text-gray-500\">\r\n                    Note: This is a simplified comparison and does not include house price\r\n                    appreciation or other investment factors.\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[220px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Key className=\"w-10 h-10 mx-auto mb-2\" />\r\n                  <p>Which path is cheaper per month?</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\RentalIncomeCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 257,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  PoundSterling,\r\n  Home,\r\n  Calculator,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  AlertCircle,\r\n  Percent,\r\n} from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport { TooltipProvider } from '@/components/ui/tooltip'; // New import for TooltipProvider\r\nimport {\r\n  Accordion,\r\n  AccordionContent,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n} from '@/components/ui/accordion'; // New imports for Accordion\r\n\r\nconst rentalIncomeCalculatorJsonLd = {\r\n  '@context': 'https://schema.org',\r\n  '@type': 'WebApplication',\r\n  name: 'UK Rental Income Calculator 2025/26',\r\n  applicationCategory: 'FinanceApplication',\r\n  operatingSystem: 'Web Browser',\r\n  description:\r\n    'Free UK rental income calculator for landlords. Calculate rental yield, profit/loss, and tax on rental income with accurate UK rates for 2025/26.',\r\n  offers: {\r\n    '@type': 'Offer',\r\n    price: '0',\r\n    priceCurrency: 'GBP',\r\n  },\r\n  featureList: [\r\n    'Rental yield calculation',\r\n    'Income tax estimation',\r\n    'Cash flow analysis',\r\n    'Expense tracking',\r\n    'ROI calculation',\r\n    'Cash-on-cash return analysis',\r\n  ],\r\n};\r\n\r\nexport default function RentalIncomeCalculator() {\r\n  // Income inputs\r\n  const [monthlyRent, setMonthlyRent] = useState('');\r\n  const [propertyValue, setPropertyValue] = useState('');\r\n  const [capitalInvested, setCapitalInvested] = useState(''); // New state for Capital Invested\r\n\r\n  // Expense inputs\r\n  const [mortgagePayment, setMortgagePayment] = useState('');\r\n  const [insurance, setInsurance] = useState('');\r\n  const [maintenance, setMaintenance] = useState('');\r\n  const [managementFees, setManagementFees] = useState('');\r\n  const [groundRent, setGroundRent] = useState('');\r\n  const [serviceFees, setServiceFees] = useState('');\r\n  const [voidPeriods, setVoidPeriods] = useState('1'); // months per year\r\n\r\n  // Tax inputs\r\n  const [taxRate, setTaxRate] = useState('20'); // basic rate\r\n  const [otherAllowableExpenses, setOtherAllowableExpenses] = useState('');\r\n\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const currentMonthlyRent = Number(monthlyRent) || 0;\r\n    const currentPropertyValue = Number(propertyValue) || 0;\r\n    const currentCapitalInvested = Number(capitalInvested) || 0; // Get capital invested value\r\n\r\n    if (currentMonthlyRent <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    // Calculate annual figures\r\n    const annualRentBeforeVoids = currentMonthlyRent * 12;\r\n    const voidLoss = currentMonthlyRent * (Number(voidPeriods) || 0);\r\n    const annualRentAfterVoids = annualRentBeforeVoids - voidLoss;\r\n\r\n    // Calculate annual expenses\r\n    const annualMortgage = (Number(mortgagePayment) || 0) * 12;\r\n    const annualInsurance = Number(insurance) || 0;\r\n    const annualMaintenance = Number(maintenance) || 0;\r\n    const annualManagementFees = (Number(managementFees) || 0) * 12;\r\n    const annualGroundRent = Number(groundRent) || 0;\r\n    const annualServiceFees = Number(serviceFees) || 0;\r\n    const annualOtherExpenses = Number(otherAllowableExpenses) || 0;\r\n\r\n    const totalExpenses =\r\n      annualMortgage +\r\n      annualInsurance +\r\n      annualMaintenance +\r\n      annualManagementFees +\r\n      annualGroundRent +\r\n      annualServiceFees +\r\n      annualOtherExpenses;\r\n\r\n    // Calculate profit/loss before tax\r\n    const profitBeforeTax = annualRentAfterVoids - totalExpenses;\r\n\r\n    // Calculate tax (only on profit)\r\n    const taxOwed = profitBeforeTax > 0 ? profitBeforeTax * (Number(taxRate) / 100) : 0;\r\n\r\n    // Net profit after tax\r\n    const netProfit = profitBeforeTax - taxOwed;\r\n\r\n    // Calculate yields (if property value provided)\r\n    const grossYield =\r\n      currentPropertyValue > 0 ? (annualRentBeforeVoids / currentPropertyValue) * 100 : 0;\r\n    const netYield = currentPropertyValue > 0 ? (netProfit / currentPropertyValue) * 100 : 0;\r\n\r\n    // Calculate Cash-on-Cash Return (if capital invested provided)\r\n    const cashOnCashReturn =\r\n      currentCapitalInvested > 0 ? (netProfit / currentCapitalInvested) * 100 : 0;\r\n\r\n    const newResults = {\r\n      annualRentBeforeVoids,\r\n      voidLoss,\r\n      annualRentAfterVoids,\r\n      totalExpenses,\r\n      profitBeforeTax,\r\n      taxOwed,\r\n      netProfit,\r\n      grossYield,\r\n      netYield,\r\n      cashOnCashReturn, // Add to results\r\n      monthlyNetProfit: netProfit / 12,\r\n      expenses: {\r\n        mortgage: annualMortgage,\r\n        insurance: annualInsurance,\r\n        maintenance: annualMaintenance,\r\n        management: annualManagementFees,\r\n        groundRent: annualGroundRent,\r\n        serviceFees: annualServiceFees,\r\n        otherExpenses: annualOtherExpenses,\r\n      },\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    // Prepare CSV data\r\n    const csvExportData = [\r\n      ['Description', 'Annual', 'Monthly'],\r\n      [\r\n        'Rental Income (before voids)',\r\n        `┬ú${newResults.annualRentBeforeVoids.toFixed(2)}`,\r\n        `┬ú${currentMonthlyRent.toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Void Periods Loss',\r\n        `┬ú${(-newResults.voidLoss).toFixed(2)}`,\r\n        `┬ú${(-newResults.voidLoss / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Net Rental Income',\r\n        `┬ú${newResults.annualRentAfterVoids.toFixed(2)}`,\r\n        `┬ú${(newResults.annualRentAfterVoids / 12).toFixed(2)}`,\r\n      ],\r\n      ['', '', ''],\r\n      ['EXPENSES', '', ''],\r\n      [\r\n        'Mortgage Payments',\r\n        `┬ú${(-newResults.expenses.mortgage).toFixed(2)}`,\r\n        `┬ú${(-newResults.expenses.mortgage / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Insurance',\r\n        `┬ú${(-newResults.expenses.insurance).toFixed(2)}`,\r\n        `┬ú${(-newResults.expenses.insurance / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Maintenance',\r\n        `┬ú${(-newResults.expenses.maintenance).toFixed(2)}`,\r\n        `┬ú${(-newResults.expenses.maintenance / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Management Fees',\r\n        `┬ú${(-newResults.expenses.management).toFixed(2)}`,\r\n        `┬ú${(-newResults.expenses.management / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Ground Rent',\r\n        `┬ú${(-newResults.expenses.groundRent).toFixed(2)}`,\r\n        `┬ú${(-newResults.expenses.groundRent / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Service Fees',\r\n        `┬ú${(-newResults.expenses.serviceFees).toFixed(2)}`,\r\n        `┬ú${(-newResults.expenses.serviceFees / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Other Expenses',\r\n        `┬ú${(-newResults.expenses.otherExpenses).toFixed(2)}`,\r\n        `┬ú${(-newResults.expenses.otherExpenses / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Total Expenses',\r\n        `┬ú${(-newResults.totalExpenses).toFixed(2)}`,\r\n        `┬ú${(-newResults.totalExpenses / 12).toFixed(2)}`,\r\n      ],\r\n      ['', '', ''],\r\n      [\r\n        'Profit Before Tax',\r\n        `┬ú${newResults.profitBeforeTax.toFixed(2)}`,\r\n        `┬ú${(newResults.profitBeforeTax / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Tax Owed',\r\n        `┬ú${(-newResults.taxOwed).toFixed(2)}`,\r\n        `┬ú${(-newResults.taxOwed / 12).toFixed(2)}`,\r\n      ],\r\n      [\r\n        'Net Profit After Tax',\r\n        `┬ú${newResults.netProfit.toFixed(2)}`,\r\n        `┬ú${newResults.monthlyNetProfit.toFixed(2)}`,\r\n      ],\r\n      ['', '', ''],\r\n      currentPropertyValue > 0\r\n        ? ['Gross Rental Yield', `${newResults.grossYield.toFixed(2)}%`, '']\r\n        : null,\r\n      currentPropertyValue > 0\r\n        ? ['Net Rental Yield', `${newResults.netYield.toFixed(2)}%`, '']\r\n        : null,\r\n      currentCapitalInvested > 0\r\n        ? ['Cash-on-Cash Return', `${newResults.cashOnCashReturn.toFixed(2)}%`, '']\r\n        : null,\r\n    ].filter(Boolean); // Filter out null values from optional rows\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [\r\n    monthlyRent,\r\n    propertyValue,\r\n    capitalInvested,\r\n    mortgagePayment,\r\n    insurance,\r\n    maintenance,\r\n    managementFees,\r\n    groundRent,\r\n    serviceFees,\r\n    voidPeriods,\r\n    taxRate,\r\n    otherAllowableExpenses,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(rentalIncomeCalculatorJsonLd)}</script>\r\n\r\n      <TooltipProvider>\r\n        {' '}\r\n        {/* New wrapper */}\r\n        <div className=\"bg-white dark:bg-gray-900\">\r\n          {/* Page Header */}\r\n          <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n              <div className=\"text-center\">\r\n                <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n                  UK Rental Income Calculator 2025/26\r\n                </h1>\r\n                <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n                  Calculate your rental property profit, tax obligations, and rental yield. Free\r\n                  calculator for UK landlords and property investors.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Main Calculator Content */}\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n            <div className=\"print-title hidden\">Rental Income Calculation Results</div>\r\n\r\n            <div className=\"grid lg:grid-cols-3 gap-8 printable-grid-cols-1\">\r\n              {/* Input Panel */}\r\n              <div className=\"lg:col-span-1 space-y-6 non-printable\">\r\n                {/* Property & Rent Details */}\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <Home className=\"w-5 h-5\" />\r\n                      Property Details\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"monthlyRent\">Monthly Rental Income</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          id=\"monthlyRent\"\r\n                          type=\"number\"\r\n                          value={monthlyRent}\r\n                          onChange={(e) => setMonthlyRent(e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"e.g. 1500\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"propertyValue\">Property Value (Optional)</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          id=\"propertyValue\"\r\n                          type=\"number\"\r\n                          value={propertyValue}\r\n                          onChange={(e) => setPropertyValue(e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"e.g. 300000\"\r\n                        />\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">(for rental yield calculation)</p>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"capitalInvested\">Total Capital Invested (Optional)</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          id=\"capitalInvested\"\r\n                          type=\"number\"\r\n                          value={capitalInvested}\r\n                          onChange={(e) => setCapitalInvested(e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"e.g. 50000\"\r\n                        />\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">\r\n                        (for cash-on-cash return calculation - e.g., deposit, legal fees, stamp\r\n                        duty)\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"voidPeriods\">Void Periods (months per year)</Label>\r\n                      <Input\r\n                        id=\"voidPeriods\"\r\n                        type=\"number\"\r\n                        value={voidPeriods}\r\n                        onChange={(e) => setVoidPeriods(e.target.value)}\r\n                        placeholder=\"e.g. 1\"\r\n                        min=\"0\"\r\n                        max=\"12\"\r\n                      />\r\n                      <p className=\"text-xs text-gray-500\">Months property is empty annually</p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Monthly Expenses */}\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <TrendingDown className=\"w-5 h-5\" />\r\n                      Monthly Expenses\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"mortgagePayment\">Mortgage Payment</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          id=\"mortgagePayment\"\r\n                          type=\"number\"\r\n                          value={mortgagePayment}\r\n                          onChange={(e) => setMortgagePayment(e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"e.g. 800\"\r\n                        />\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">Monthly mortgage payment</p>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"managementFees\">Management Fees</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          id=\"managementFees\"\r\n                          type=\"number\"\r\n                          value={managementFees}\r\n                          onChange={(e) => setManagementFees(e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"e.g. 120\"\r\n                        />\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">\r\n                        Monthly agent fees (typically 8-12% of rent)\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Annual Expenses */}\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardHeader>\r\n                    <CardTitle>Annual Expenses</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"insurance\">Buildings/Contents Insurance</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          id=\"insurance\"\r\n                          type=\"number\"\r\n                          value={insurance}\r\n                          onChange={(e) => setInsurance(e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"e.g. 400\"\r\n                        />\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">Annual insurance premium</p>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"maintenance\">Maintenance & Repairs</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          id=\"maintenance\"\r\n                          type=\"number\"\r\n                          value={maintenance}\r\n                          onChange={(e) => setMaintenance(e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"e.g. 1000\"\r\n                        />\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">\r\n                        Annual budget for repairs and maintenance\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"groundRent\">Ground Rent</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          id=\"groundRent\"\r\n                          type=\"number\"\r\n                          value={groundRent}\r\n                          onChange={(e) => setGroundRent(e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"e.g. 300\"\r\n                        />\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">Annual ground rent charge</p>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"serviceFees\">Service Charges</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          id=\"serviceFees\"\r\n                          type=\"number\"\r\n                          value={serviceFees}\r\n                          onChange={(e) => setServiceFees(e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"e.g. 500\"\r\n                        />\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">\r\n                        Annual service charge (leasehold properties)\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"otherAllowableExpenses\">Other Allowable Expenses</Label>\r\n                      <div className=\"relative\">\r\n                        <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          id=\"otherAllowableExpenses\"\r\n                          type=\"number\"\r\n                          value={otherAllowableExpenses}\r\n                          onChange={(e) => setOtherAllowableExpenses(e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"e.g. 200\"\r\n                        />\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">Annual legal fees, accountancy, etc.</p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Tax Settings */}\r\n                <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <CardHeader>\r\n                    <CardTitle>Tax Settings</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"taxRate\">Your Income Tax Rate (%)</Label>\r\n                      <div className=\"relative\">\r\n                        <Percent className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                        <Input\r\n                          id=\"taxRate\"\r\n                          type=\"number\"\r\n                          value={taxRate}\r\n                          onChange={(e) => setTaxRate(e.target.value)}\r\n                          className=\"pl-10\"\r\n                          placeholder=\"20\"\r\n                        />\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">\r\n                        Basic: 20%, Higher: 40%, Additional: 45%\r\n                      </p>\r\n                    </div>\r\n\r\n                    <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                      <Calculator className=\"w-5 h-5 mr-2\" />\r\n                      Calculate Rental Income\r\n                    </Button>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n\r\n              {/* Results Panel */}\r\n              <div className=\"lg:col-span-2 space-y-6 printable-area\">\r\n                {hasCalculated && results ? (\r\n                  <>\r\n                    <div className=\"flex justify-between items-center non-printable\">\r\n                      <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200\">\r\n                        Rental Income Analysis\r\n                      </h2>\r\n                      <ExportActions\r\n                        csvData={csvData}\r\n                        fileName=\"rental-income-calculation\"\r\n                        title=\"Rental Income Calculation\"\r\n                      />\r\n                    </div>\r\n\r\n                    {/* Key Metrics */}\r\n                    <div className=\"grid md:grid-cols-3 gap-4\">\r\n                      <Card\r\n                        className={`${results.netProfit >= 0 ? 'bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700' : 'bg-red-50 dark:bg-red-900/30 border-red-200 dark:border-red-700'}`}\r\n                      >\r\n                        <CardContent className=\"p-6\">\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <div>\r\n                              <p className=\"text-sm font-medium\">Monthly Net Profit</p>\r\n                              <p\r\n                                className={`text-2xl font-bold ${results.netProfit >= 0 ? 'text-green-900' : 'text-red-900'}`}\r\n                              >\r\n                                {results.netProfit >= 0 ? '┬ú' : '-┬ú'}\r\n                                {Math.abs(results.monthlyNetProfit).toLocaleString('en-GB', {\r\n                                  maximumFractionDigits: 0,\r\n                                })}\r\n                              </p>\r\n                            </div>\r\n                            <TrendingUp\r\n                              className={`w-8 h-8 ${results.netProfit >= 0 ? 'text-green-600' : 'text-red-600'}`}\r\n                            />\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n\r\n                      {propertyValue && (\r\n                        <>\r\n                          <Card className=\"bg-blue-50 dark:bg-blue-900/30 border-blue-200 dark:border-blue-700\">\r\n                            <CardContent className=\"p-6\">\r\n                              <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                  <p className=\"text-sm font-medium text-blue-800\">Gross Yield</p>\r\n                                  <p className=\"text-2xl font-bold text-blue-900\">\r\n                                    {results.grossYield.toFixed(2)}%\r\n                                  </p>\r\n                                </div>\r\n                                <Percent className=\"w-8 h-8 text-blue-600\" />\r\n                              </div>\r\n                            </CardContent>\r\n                          </Card>\r\n\r\n                          <Card className=\"bg-purple-50 dark:bg-purple-900/30 border-purple-200 dark:border-purple-700\">\r\n                            <CardContent className=\"p-6\">\r\n                              <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                  <p className=\"text-sm font-medium text-purple-800\">Net Yield</p>\r\n                                  <p className=\"text-2xl font-bold text-purple-900\">\r\n                                    {results.netYield.toFixed(2)}%\r\n                                  </p>\r\n                                </div>\r\n                                <TrendingUp className=\"w-8 h-8 text-purple-600\" />\r\n                              </div>\r\n                            </CardContent>\r\n                          </Card>\r\n                        </>\r\n                      )}\r\n                      {capitalInvested && (\r\n                        <Card className=\"bg-orange-50 dark:bg-orange-900/30 border-orange-200 dark:border-orange-700\">\r\n                          <CardContent className=\"p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                              <div>\r\n                                <p className=\"text-sm font-medium text-orange-800\">\r\n                                  Cash-on-Cash Return\r\n                                </p>\r\n                                <p\r\n                                  className={`text-2xl font-bold ${results.cashOnCashReturn >= 0 ? 'text-green-900' : 'text-red-900'}`}\r\n                                >\r\n                                  {results.cashOnCashReturn.toFixed(2)}%\r\n                                </p>\r\n                              </div>\r\n                              <TrendingUp\r\n                                className={`w-8 h-8 ${results.cashOnCashReturn >= 0 ? 'text-green-600' : 'text-red-600'}`}\r\n                              />\r\n                            </div>\r\n                          </CardContent>\r\n                        </Card>\r\n                      )}\r\n                    </div>\r\n\r\n                    {/* Detailed Breakdown */}\r\n                    <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                      <CardHeader>\r\n                        <CardTitle>Income & Expense Breakdown</CardTitle>\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <div className=\"space-y-4\">\r\n                          {/* Income Section */}\r\n                          <div>\r\n                            <h4 className=\"font-semibold text-green-700 mb-3\">\r\n                              Annual Rental Income\r\n                            </h4>\r\n                            <div className=\"space-y-2\">\r\n                              <div className=\"flex justify-between\">\r\n                                <span>Gross Rental Income:</span>\r\n                                <span className=\"font-semibold text-green-600\">\r\n                                  ┬ú{results.annualRentBeforeVoids.toLocaleString()}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"flex justify-between\">\r\n                                <span>Less: Void Periods ({voidPeriods} months):</span>\r\n                                <span className=\"font-semibold text-red-600\">\r\n                                  -┬ú{results.voidLoss.toLocaleString()}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"flex justify-between border-t pt-2\">\r\n                                <span className=\"font-semibold\">Net Rental Income:</span>\r\n                                <span className=\"font-bold text-green-700\">\r\n                                  ┬ú{results.annualRentAfterVoids.toLocaleString()}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Expenses Section */}\r\n                          <div>\r\n                            <h4 className=\"font-semibold text-red-700 mb-3\">Annual Expenses</h4>\r\n                            <div className=\"space-y-2 text-sm\">\r\n                              {results.expenses.mortgage > 0 && (\r\n                                <div className=\"flex justify-between\">\r\n                                  <span>Mortgage Payments:</span>\r\n                                  <span>-┬ú{results.expenses.mortgage.toLocaleString()}</span>\r\n                                </div>\r\n                              )}\r\n                              {results.expenses.management > 0 && (\r\n                                <div className=\"flex justify-between\">\r\n                                  <span>Management Fees:</span>\r\n                                  <span>-┬ú{results.expenses.management.toLocaleString()}</span>\r\n                                </div>\r\n                              )}\r\n                              {results.expenses.insurance > 0 && (\r\n                                <div className=\"flex justify-between\">\r\n                                  <span>Insurance:</span>\r\n                                  <span>-┬ú{results.expenses.insurance.toLocaleString()}</span>\r\n                                </div>\r\n                              )}\r\n                              {results.expenses.maintenance > 0 && (\r\n                                <div className=\"flex justify-between\">\r\n                                  <span>Maintenance & Repairs:</span>\r\n                                  <span>-┬ú{results.expenses.maintenance.toLocaleString()}</span>\r\n                                </div>\r\n                              )}\r\n                              {results.expenses.groundRent > 0 && (\r\n                                <div className=\"flex justify-between\">\r\n                                  <span>Ground Rent:</span>\r\n                                  <span>-┬ú{results.expenses.groundRent.toLocaleString()}</span>\r\n                                </div>\r\n                              )}\r\n                              {results.expenses.serviceFees > 0 && (\r\n                                <div className=\"flex justify-between\">\r\n                                  <span>Service Charges:</span>\r\n                                  <span>-┬ú{results.expenses.serviceFees.toLocaleString()}</span>\r\n                                </div>\r\n                              )}\r\n                              {results.expenses.otherExpenses > 0 && (\r\n                                <div className=\"flex justify-between\">\r\n                                  <span>Other Expenses:</span>\r\n                                  <span>-┬ú{results.expenses.otherExpenses.toLocaleString()}</span>\r\n                                </div>\r\n                              )}\r\n                              <div className=\"flex justify-between border-t pt-2 font-semibold\">\r\n                                <span>Total Expenses:</span>\r\n                                <span className=\"text-red-700\">\r\n                                  -┬ú{results.totalExpenses.toLocaleString()}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Profit & Tax */}\r\n                          <div>\r\n                            <h4 className=\"font-semibold text-gray-700 mb-3\">Profit & Tax</h4>\r\n                            <div className=\"space-y-2\">\r\n                              <div className=\"flex justify-between\">\r\n                                <span>Profit Before Tax:</span>\r\n                                <span\r\n                                  className={`font-semibold ${results.profitBeforeTax >= 0 ? 'text-green-600' : 'text-red-600'}`}\r\n                                >\r\n                                  {results.profitBeforeTax >= 0 ? '┬ú' : '-┬ú'}\r\n                                  {Math.abs(results.profitBeforeTax).toLocaleString()}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"flex justify-between\">\r\n                                <span>Income Tax ({taxRate}%):</span>\r\n                                <span className=\"font-semibold text-red-600\">\r\n                                  -┬ú{results.taxOwed.toLocaleString()}\r\n                                </span>\r\n                              </div>\r\n                              <div\r\n                                className={`flex justify-between border-t pt-2 font-bold text-lg ${results.netProfit >= 0 ? 'text-green-700' : 'text-red-700'}`}\r\n                              >\r\n                                <span>Net Annual Profit:</span>\r\n                                <span>\r\n                                  {results.netProfit >= 0 ? '┬ú' : '-┬ú'}\r\n                                  {Math.abs(results.netProfit).toLocaleString()}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n\r\n                    {/* Yield Information (if property value provided) */}\r\n                    {propertyValue && (\r\n                      <Card className=\"bg-blue-50 dark:bg-blue-900/30 border-blue-200 dark:border-blue-700\">\r\n                        <CardHeader>\r\n                          <CardTitle>Rental Yield Analysis</CardTitle>\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                          <div className=\"grid md:grid-cols-2 gap-6\">\r\n                            <div>\r\n                              <h4 className=\"font-semibold mb-2\">Gross Rental Yield</h4>\r\n                              <p className=\"text-3xl font-bold text-blue-700\">\r\n                                {results.grossYield.toFixed(2)}%\r\n                              </p>\r\n                              <p className=\"text-sm text-gray-600 mt-2\">\r\n                                Based on gross annual rent of ┬ú\r\n                                {results.annualRentBeforeVoids.toLocaleString()} and property value\r\n                                of ┬ú{Number(propertyValue).toLocaleString()}\r\n                              </p>\r\n                            </div>\r\n                            <div>\r\n                              <h4 className=\"font-semibold mb-2\">Net Rental Yield</h4>\r\n                              <p\r\n                                className={`text-3xl font-bold ${results.netYield >= 0 ? 'text-green-700' : 'text-red-700'}`}\r\n                              >\r\n                                {results.netYield.toFixed(2)}%\r\n                              </p>\r\n                              <p className=\"text-sm text-gray-600 mt-2\">\r\n                                After all expenses and tax, based on net profit of ┬ú\r\n                                {Math.abs(results.netProfit).toLocaleString()}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    )}\r\n\r\n                    {/* Capital Invested Analysis (if capital invested provided) */}\r\n                    {capitalInvested && (\r\n                      <Card className=\"bg-orange-50 dark:bg-orange-900/30 border-orange-200 dark:border-orange-700\">\r\n                        <CardHeader>\r\n                          <CardTitle>Capital Invested Analysis</CardTitle>\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                          <div className=\"grid md:grid-cols-1 gap-6\">\r\n                            <div>\r\n                              <h4 className=\"font-semibold mb-2\">Cash-on-Cash Return</h4>\r\n                              <p\r\n                                className={`text-3xl font-bold ${results.cashOnCashReturn >= 0 ? 'text-green-700' : 'text-red-700'}`}\r\n                              >\r\n                                {results.cashOnCashReturn.toFixed(2)}%\r\n                              </p>\r\n                              <p className=\"text-sm text-gray-600 mt-2\">\r\n                                Annual net profit (┬ú{Math.abs(results.netProfit).toLocaleString()})\r\n                                as a percentage of your total cash invested (┬ú\r\n                                {Number(capitalInvested).toLocaleString()}).\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    )}\r\n\r\n                    {/* Important Notes */}\r\n                    <Card className=\"bg-amber-50 dark:bg-amber-900/30 border-amber-200 dark:border-amber-700\">\r\n                      <CardContent className=\"p-4 flex items-start gap-3\">\r\n                        <AlertCircle className=\"w-5 h-5 text-amber-700 mt-0.5\" />\r\n                        <div className=\"text-sm text-amber-800\">\r\n                          <p className=\"font-semibold mb-2\">Important Tax Information:</p>\r\n                          <ul className=\"space-y-1 text-xs\">\r\n                            <li>ÔÇó Rental income is added to your total income for tax purposes</li>\r\n                            <li>ÔÇó You can claim tax relief on allowable expenses</li>\r\n                            <li>\r\n                              ÔÇó Mortgage interest relief is restricted (gradually being phased out)\r\n                            </li>\r\n                            <li>ÔÇó Consider the impact on your overall tax position</li>\r\n                            <li>\r\n                              ÔÇó This calculator provides estimates only - consult a tax advisor for\r\n                              accurate advice\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </>\r\n                ) : (\r\n                  <Card className=\"lg:col-span-2 flex items-center justify-center h-[400px] bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                    <div className=\"text-center text-gray-500\">\r\n                      <Home className=\"w-12 h-12 mx-auto mb-4\" />\r\n                      <h3 className=\"text-xl font-semibold\">\r\n                        Ready to analyze your rental income?\r\n                      </h3>\r\n                      <p>\r\n                        Enter your rental income and expenses to see your profit and yield\r\n                        calculations.\r\n                      </p>\r\n                      {hasCalculated && !results && (\r\n                        <p className=\"text-red-500 mt-2\">\r\n                          Please enter a valid monthly rent amount.\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  </Card>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* FAQ Section */}\r\n          <div className=\"bg-gray-50 dark:bg-gray-800/50 py-12 non-printable\">\r\n            <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n              <FAQSection\r\n                faqs={rentalIncomeFAQs}\r\n                title=\"Rental Income - Frequently Asked Questions\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </TooltipProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nconst FAQSection = ({ faqs, title }) => (\r\n  <div className=\"py-8\">\r\n    <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 dark:text-gray-100 mb-6 text-center\">\r\n      {title}\r\n    </h2>\r\n    <Accordion type=\"single\" collapsible className=\"w-full\">\r\n      {faqs.map((faq, index) => (\r\n        <AccordionItem key={`faq-${index}`} value={`item-${index}`}>\r\n          <AccordionTrigger className=\"text-left\">{faq.question}</AccordionTrigger>\r\n          <AccordionContent>\r\n            <p className=\"text-gray-700 dark:text-gray-300\">{faq.answer}</p>\r\n          </AccordionContent>\r\n        </AccordionItem>\r\n      ))}\r\n    </Accordion>\r\n  </div>\r\n);\r\n\r\nconst rentalIncomeFAQs = [\r\n  {\r\n    question: 'What is rental yield and why is it important?',\r\n    answer:\r\n      'Rental yield shows the annual return on your property investment as a percentage. Gross yield is annual rent divided by property value. Net yield considers expenses. In the UK, gross yields typically range from 3-8% depending on location. Higher yields often indicate higher risk areas or properties requiring more management.',\r\n  },\r\n  {\r\n    question: 'What expenses can I claim against rental income?',\r\n    answer:\r\n      'You can claim legitimate business expenses including: mortgage interest (with restrictions for higher-rate taxpayers), insurance, maintenance and repairs, management fees, ground rent and service charges, accountancy fees, and advertising for tenants. You cannot claim capital improvements or your own time.',\r\n  },\r\n  {\r\n    question: 'How do I account for void periods?',\r\n    answer:\r\n      'Void periods (empty property between tenants) are inevitable. Budget 1-2 weeks per year minimum, more in areas with high tenant turnover. Our calculator lets you specify void periods in months per year. Factor this into your cash flow projections as it directly impacts your actual rental income.',\r\n  },\r\n  {\r\n    question: \"What's a good rental yield for UK property?\",\r\n    answer:\r\n      'This varies by location and property type. Generally: 4-6% gross yield in expensive areas like London, 6-8% in most UK cities, 8%+ in cheaper areas (but often with higher management needs). Consider net yield after expenses - typically 2-4% lower than gross yield.',\r\n  },\r\n  {\r\n    question: 'Should I use a letting agent or manage the property myself?',\r\n    answer:\r\n      'Letting agents typically charge 8-12% of rent plus setup fees, but provide tenant finding, rent collection, maintenance coordination, and legal compliance. Self-management saves money but requires time and knowledge of landlord obligations. Factor management costs into your calculations either way.',\r\n  },\r\n  {\r\n    question: 'How much should I budget for maintenance and repairs?',\r\n    answer:\r\n      'Budget 10-15% of annual rent for maintenance and repairs, more for older properties. This covers regular maintenance, emergency repairs, safety checks (gas/electrical), and periodic updates. New-build properties may need less initially but will require more as they age.',\r\n  },\r\n  {\r\n    question: 'What insurance do I need as a landlord?',\r\n    answer:\r\n      'You need buildings insurance (often required by mortgage lender) and should consider landlord insurance covering liability, loss of rent, and contents if furnished. Costs vary by property value, location, and coverage level - typically ┬ú200-┬ú600 annually for standard properties.',\r\n  },\r\n  {\r\n    question: 'How do taxes work on rental income?',\r\n    answer:\r\n      'Rental income is added to your other income and taxed at your marginal rate (20%, 40%, or 45%). You can deduct allowable expenses. Higher-rate taxpayers have restrictions on mortgage interest relief. Consider the ┬ú1,000 property allowance for small landlords. Seek professional advice for complex situations.',\r\n  },\r\n];\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\Resources.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 53,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Link2, Book, Landmark, Banknote } from 'lucide-react';\r\n\r\nconst governmentResources = [\r\n  {\r\n    title: 'HMRC',\r\n    description:\r\n      'The official source for all UK tax and National Insurance information, rates, and personal tax accounts.',\r\n    url: 'https://www.gov.uk/government/organisations/hm-revenue-customs',\r\n    icon: Landmark,\r\n  },\r\n  {\r\n    title: 'MoneyHelper',\r\n    description: 'Free, impartial help with money and pensions, backed by the UK government.',\r\n    url: 'https://www.moneyhelper.org.uk/en', // Fixed URL\r\n    icon: Banknote,\r\n  },\r\n  {\r\n    title: 'Citizens Advice',\r\n    description: 'Offers confidential advice online, over the phone, and in person, for free.',\r\n    url: 'https://www.citizensadvice.org.uk/',\r\n    icon: Landmark,\r\n  },\r\n];\r\n\r\nconst bookReviews = [\r\n  {\r\n    title: 'The Psychology of Money by Morgan Housel',\r\n    description:\r\n      \"A brilliant book that explores the strange ways people think about money and teaches you how to make better sense of one of life's most important topics. A must-read for understanding financial behaviour.\",\r\n    url: 'https://www.amazon.co.uk/Psychology-Money-Morgan-Housel/dp/0857197681',\r\n    icon: Book,\r\n  },\r\n  {\r\n    title: 'I Will Teach You To Be Rich by Ramit Sethi',\r\n    description:\r\n      'A practical, no-nonsense 6-week programme for mastering your money. Focuses on automation, conscious spending, and investing for the long term. Highly actionable advice.',\r\n    url: 'https://www.amazon.co.uk/Will-Teach-You-Be-Rich/dp/1523505745',\r\n    icon: Book,\r\n  },\r\n  {\r\n    title: 'Smarter Investing by Tim Hale',\r\n    description:\r\n      'Considered one of the best books on passive investing for a UK audience. Hale breaks down complex topics into simple, evidence-based principles for building a successful portfolio.',\r\n    url: 'https://www.amazon.co.uk/Smarter-Investing-Simpler-Decisions-Financial/dp/0273785370',\r\n    icon: Book,\r\n  },\r\n];\r\n\r\nexport default function Resources() {\r\n  return (\r\n    <div className=\"bg-white py-12\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"text-center mb-16\">\r\n          <Book className=\"w-12 h-12 mx-auto text-blue-600\" />\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mt-4\">Financial Resources</h1>\r\n          <p className=\"text-lg text-gray-600 mt-2 max-w-3xl mx-auto\">\r\n            Knowledge is power. Here are some trusted resources and recommended reading to help you\r\n            on your financial journey.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"space-y-12\">\r\n          {/* Government & Charity Resources */}\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Official Guidance & Charities</h2>\r\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {governmentResources.map((resource) => (\r\n                <a\r\n                  href={resource.url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  key={resource.title}\r\n                  className=\"block group\"\r\n                >\r\n                  <Card className=\"h-full transition-all duration-300 border-gray-200 hover:border-gray-300 hover:shadow-xl hover:-translate-y-1\">\r\n                    <CardHeader className=\"flex flex-row items-center gap-4\">\r\n                      <resource.icon className=\"w-8 h-8 text-gray-500\" />\r\n                      <CardTitle>{resource.title}</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-gray-600\">{resource.description}</p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </a>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Book Reviews */}\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Recommended Reading</h2>\r\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {bookReviews.map((book) => (\r\n                <a\r\n                  href={book.url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  key={book.title}\r\n                  className=\"block group\"\r\n                >\r\n                  <Card className=\"h-full transition-all duration-300 border-gray-200 hover:border-gray-300 hover:shadow-xl hover:-translate-y-1\">\r\n                    <CardHeader className=\"flex flex-row items-center gap-4\">\r\n                      <book.icon className=\"w-8 h-8 text-gray-500\" />\r\n                      <CardTitle>{book.title}</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-gray-600\">{book.description}</p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </a>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\RetirementSavingsCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 133,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { PoundSterling, Calculator, Percent, Shield, Target } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\nconst retirementFAQs = [\r\n  {\r\n    question: 'How much do I need to save for retirement?',\r\n    answer:\r\n      \"A common rule of thumb is to aim for a retirement pot of 25 times your desired annual income. For example, if you want ┬ú40,000 a year in retirement, you would aim for a ┬ú1 million pot. This calculator helps you see if you're on track.\",\r\n  },\r\n  {\r\n    question: 'What is a realistic annual return for investments?',\r\n    answer:\r\n      'Historically, the average stock market return has been around 7-10% per year. However, this is not guaranteed. A more conservative estimate of 5-7% is often used for long-term planning to account for inflation and fees.',\r\n  },\r\n  {\r\n    question: 'Should my pension contributions be included in this calculation?',\r\n    answer:\r\n      \"Yes, absolutely. Your current pension pot should be your 'Current Savings', and your monthly pension contributions (including your employer's contribution) should be your 'Monthly Contribution'. This gives you a complete picture of your retirement savings.\",\r\n  },\r\n];\r\n\r\nconst generateRetirementChartData = (\r\n  currentAge,\r\n  retirementAge,\r\n  currentSavings,\r\n  monthlyContribution,\r\n  annualReturn\r\n) => {\r\n  const data = [];\r\n  let savings = currentSavings;\r\n  const monthlyRate = annualReturn / 12;\r\n\r\n  for (let age = currentAge; age <= retirementAge; age++) {\r\n    if ((age - currentAge) % 5 === 0 || age === retirementAge) {\r\n      data.push({\r\n        age: age,\r\n        'Projected Savings': savings,\r\n        'Your Contributions': currentSavings + monthlyContribution * 12 * (age - currentAge),\r\n      });\r\n    }\r\n    for (let month = 0; month < 12; month++) {\r\n      savings = (savings + monthlyContribution) * (1 + monthlyRate);\r\n    }\r\n  }\r\n  return data;\r\n};\r\n\r\nexport default function RetirementSavingsCalculator() {\r\n  const [currentAge, setCurrentAge] = useState('30');\r\n  const [retirementAge, setRetirementAge] = useState('67');\r\n  const [currentSavings, setCurrentSavings] = useState('50000');\r\n  const [monthlyContribution, setMonthlyContribution] = useState('500');\r\n  const [annualReturn, setAnnualReturn] = useState('7');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const age = Number(currentAge) || 0;\r\n    const retireAge = Number(retirementAge) || 0;\r\n    const savings = Number(currentSavings) || 0;\r\n    const monthly = Number(monthlyContribution) || 0;\r\n    const rate = Number(annualReturn) / 100;\r\n\r\n    const yearsToGrow = retireAge - age;\r\n    if (yearsToGrow <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const totalMonths = yearsToGrow * 12;\r\n    const monthlyRate = rate / 12;\r\n\r\n    const futureValueOfSavings = savings * Math.pow(1 + monthlyRate, totalMonths);\r\n    const futureValueOfContributions =\r\n      monthly * ((Math.pow(1 + monthlyRate, totalMonths) - 1) / monthlyRate);\r\n    const totalPot = futureValueOfSavings + futureValueOfContributions;\r\n\r\n    const totalContributions = savings + monthly * totalMonths;\r\n    const totalGrowth = totalPot - totalContributions;\r\n\r\n    const chartData = generateRetirementChartData(age, retireAge, savings, monthly, rate);\r\n\r\n    const newResults = {\r\n      totalPot,\r\n      totalContributions,\r\n      totalGrowth,\r\n      chartData,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Retirement Pot', `┬ú${totalPot.toFixed(2)}`],\r\n      ['Total Contributions', `┬ú${totalContributions.toFixed(2)}`],\r\n      ['Total Investment Growth', `┬ú${totalGrowth.toFixed(2)}`],\r\n      ['---'],\r\n      ['Age', 'Projected Savings', 'Your Contributions'],\r\n      ...chartData.map((row) => [\r\n        row.age,\r\n        `┬ú${row['Projected Savings'].toFixed(2)}`,\r\n        `┬ú${row['Your Contributions'].toFixed(2)}`,\r\n      ]),\r\n    ];\r\n    setCsvData(csvExportData);\r\n  }, [currentAge, retirementAge, currentSavings, monthlyContribution, annualReturn]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Retirement Savings Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Are you saving enough for retirement? Project your pension pot growth and see how much\r\n              you could have when you retire.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Retirement Savings Projection</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Your Retirement Plan</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label htmlFor=\"currentAge\" className=\"flex justify-between\">\r\n                    <span>Current Age</span>\r\n                    <span className=\"font-semibold\">{currentAge}</span>\r\n                  </Label>\r\n                  <Slider\r\n                    value={[Number(currentAge)]}\r\n                    onValueChange={(value) => setCurrentAge(String(value[0]))}\r\n                    max={100}\r\n                    step={1}\r\n                    className=\"mt-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"retirementAge\" className=\"flex justify-between\">\r\n                    <span>Target Retirement Age</span>\r\n                    <span className=\"font-semibold\">{retirementAge}</span>\r\n                  </Label>\r\n                  <Slider\r\n                    value={[Number(retirementAge)]}\r\n                    onValueChange={(value) => setRetirementAge(String(value[0]))}\r\n                    max={100}\r\n                    step={1}\r\n                    className=\"mt-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"currentSavings\">Current Savings / Pension Pot</Label>\r\n                  <div className=\"relative mt-2\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"currentSavings\"\r\n                      type=\"number\"\r\n                      value={currentSavings}\r\n                      onChange={(e) => setCurrentSavings(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"monthlyContribution\">Monthly Contribution (incl. employer)</Label>\r\n                  <div className=\"relative mt-2\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"monthlyContribution\"\r\n                      type=\"number\"\r\n                      value={monthlyContribution}\r\n                      onChange={(e) => setMonthlyContribution(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"annualReturn\" className=\"flex justify-between\">\r\n                    <span>Estimated Annual Return</span>\r\n                    <span className=\"font-semibold\">{Number(annualReturn).toFixed(1)}%</span>\r\n                  </Label>\r\n                  <Slider\r\n                    value={[Number(annualReturn)]}\r\n                    onValueChange={(value) => setAnnualReturn(String(value[0]))}\r\n                    max={15}\r\n                    step={0.5}\r\n                    className=\"mt-2\"\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Your Retirement Projection</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"retirement-projection\"\r\n                    title=\"Retirement Projection\"\r\n                  />\r\n                </div>\r\n\r\n                <Card className=\"bg-green-50\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-green-800\">\r\n                      <Target className=\"w-5 h-5\" />\r\n                      Your Estimated Retirement Pot\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center\">\r\n                    <p className=\"text-5xl font-bold text-green-900\">\r\n                      ┬ú{results.totalPot.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                    </p>\r\n                    <p className=\"text-gray-600 mt-2\">at age {retirementAge}</p>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Total Contributions</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-2xl font-semibold\">\r\n                        ┬ú\r\n                        {results.totalContributions.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 0,\r\n                        })}\r\n                      </p>\r\n                      <p className=\"text-xs text-gray-500\">\r\n                        The total amount you (and your employer) put in.\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Total Investment Growth</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <p className=\"text-2xl font-semibold text-green-600\">\r\n                        ┬ú{results.totalGrowth.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                      </p>\r\n                      <p className=\"text-xs text-gray-500\">The money your money made for you.</p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Savings Growth Over Time</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                      <BarChart data={results.chartData}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis\r\n                          dataKey=\"age\"\r\n                          label={{ value: 'Age', position: 'insideBottom', offset: -5 }}\r\n                        />\r\n                        <YAxis tickFormatter={(value) => `┬ú${(value / 1000).toFixed(0)}k`} />\r\n                        <Tooltip formatter={(value) => `┬ú${Number(value).toLocaleString()}`} />\r\n                        <Legend />\r\n                        <Bar\r\n                          dataKey=\"Projected Savings\"\r\n                          stackId=\"a\"\r\n                          fill=\"#22c55e\"\r\n                          name=\"Projected Savings\"\r\n                        />\r\n                        <Bar\r\n                          dataKey=\"Your Contributions\"\r\n                          stackId=\"b\"\r\n                          fill=\"#8884d8\"\r\n                          name=\"Your Contributions\"\r\n                          className=\"opacity-0\"\r\n                        />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Plan your future</h3>\r\n                  <p>Enter your details to project your retirement savings.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={retirementFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\RuleOf72Calculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 43,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Percent, Activity, Calculator } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst ruleOf72FAQs = [\r\n  {\r\n    question: 'What is the Rule of 72?',\r\n    answer:\r\n      'The Rule of 72 is a simple mental shortcut to estimate the number of years required to double your money at a given annual rate of return. You just divide 72 by the interest rate.',\r\n  },\r\n  {\r\n    question: 'How accurate is it?',\r\n    answer:\r\n      \"It's an approximation, but it's remarkably accurate for interest rates typically found in investment scenarios (e.g., 5% to 12%). It's most accurate at around 8%.\",\r\n  },\r\n  {\r\n    question: 'Why is it useful?',\r\n    answer:\r\n      'It provides a quick way to understand the power of compound interest without needing a complex calculator. It helps you grasp how a small difference in your return rate can significantly change how quickly your money grows.',\r\n  },\r\n];\r\n\r\nexport default function RuleOf72Calculator() {\r\n  const [rate, setRate] = useState('');\r\n  const [years, setYears] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const r = Number(rate) || 0;\r\n    if (r > 0) {\r\n      setYears(72 / r);\r\n    } else {\r\n      setYears(0);\r\n    }\r\n    setHasCalculated(true);\r\n  }, [rate]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\r\n          <h1 className=\"text-3xl font-bold text-center\">Rule of 72 Calculator</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-4xl mx-auto p-4 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Enter Interest Rate</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Label>Annual Rate of Return (%)</Label>\r\n              <Input\r\n                type=\"number\"\r\n                value={rate}\r\n                onChange={(e) => setRate(e.target.value)}\r\n                placeholder=\"e.g. 7\"\r\n              />\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                <Calculator className=\"w-5 h-5 mr-2\" />\r\n                Calculate\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n          <div>\r\n            {hasCalculated && years !== null ? (\r\n              <Card className=\"bg-teal-50 border-teal-200\">\r\n                <CardHeader>\r\n                  <CardTitle>Years to Double Your Money</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"text-center\">\r\n                  <p className=\"text-6xl font-bold text-teal-700\">\r\n                    {years > 0 ? years.toFixed(1) : '...'}\r\n                  </p>\r\n                  <p className=\"text-sm mt-2\">years (approx.)</p>\r\n                </CardContent>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[220px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Activity className=\"w-10 h-10 mx-auto mb-2\" />\r\n                  <p>How long will it take to double?</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-12\">\r\n          <FAQSection faqs={ruleOf72FAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\SalaryCalculatorPaycheck.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 56,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\n\r\nexport default function SalaryCalculatorPaycheck() {\r\n  const origin =\r\n    typeof window !== 'undefined' ? window.location.origin : 'https://www.calcmymoney.co.uk';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Salary & Income',\r\n        item: `${origin}${createPageUrl('SalaryCalculatorUK')}`,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const faqs = [\r\n    {\r\n      question: 'Can I see weekly, fortnightly or monthly net pay?',\r\n      answer:\r\n        'Yes. Choose your pay frequency to calculate the paycheck amount after tax, NI, pension and student loans.',\r\n    },\r\n    {\r\n      question: 'Does this handle overtime or bonuses?',\r\n      answer:\r\n        'You can add extra gross pay (like overtime or a bonus) and the calculator will estimate the deductions for that period.',\r\n    },\r\n    {\r\n      question: 'How accurate are paycheck estimates?',\r\n      answer:\r\n        'Figures are estimates based on HMRC 2025/26 rules. Actual payroll can vary with tax codes, benefits, and employer-specific settings.',\r\n    },\r\n  ];\r\n\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: faqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  const LAST_UPDATED_ISO = '2025-04-06';\r\n  const LAST_UPDATED_DISPLAY = '6 April 2025';\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <script\r\n        type=\"application/ld+json\"\r\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(faqJson) }}\r\n      />\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">Paycheck Calculator UK</h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto mt-3\">\r\n              Work out your UK paycheck after tax and NI. Supports weekly, fortnightly and monthly\r\n              pay.\r\n            </p>\r\n\r\n            {/* Quick links: Hub + siblings */}\r\n            <div className=\"mt-4 flex flex-wrap justify-center gap-2\">\r\n              <Link\r\n                to={createPageUrl('SalaryCalculatorUK')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                Salary Hub\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('SalaryCalculatorTakeHomePay')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                TakeÔÇæHome Pay\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('GrossToNetCalculator')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                GrossÔÇætoÔÇæNet\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10\">\r\n          <div className=\"space-y-6\">\r\n            <h2 className=\"text-2xl font-semibold text-gray-900\">Check Your Net Paycheck</h2>\r\n            <p className=\"text-gray-700\">\r\n              Use the hub calculator for precise paycheck breakdowns per pay period, with pension\r\n              and student loan options.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"mt-12\">\r\n            <FAQSection faqs={faqs} title=\"Paycheck FAQs\" />\r\n            <p className=\"text-xs text-gray-500 mt-6\">\r\n              Last updated: <time dateTime={LAST_UPDATED_ISO}>{LAST_UPDATED_DISPLAY}</time>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <RelatedCalculators\r\n        calculators={[\r\n          {\r\n            name: 'UK Salary Calculator (Take-Home Pay 2025/26)',\r\n            url: createPageUrl('SalaryCalculatorUK'),\r\n            description: 'Comprehensive salary breakdown for 2025/26.',\r\n          },\r\n          {\r\n            name: 'Take-Home Pay Calculator UK (2025/26)',\r\n            url: createPageUrl('SalaryCalculatorTakeHomePay'),\r\n            description: 'Estimate your takeÔÇæhome pay using HMRC thresholds.',\r\n          },\r\n          {\r\n            name: 'Gross to Net Income Calculator (UK)',\r\n            url: createPageUrl('GrossToNetCalculator'),\r\n            description: 'Convert gross to net figures accurately.',\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\SalaryCalculatorTakeHomePay.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 56,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\n\r\nexport default function SalaryCalculatorTakeHomePay() {\r\n  const origin =\r\n    typeof window !== 'undefined' ? window.location.origin : 'https://www.calcmymoney.co.uk';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Salary & Income',\r\n        item: `${origin}${createPageUrl('SalaryCalculatorUK')}`,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const faqs = [\r\n    {\r\n      question: 'How do I calculate UK take-home pay for 2025/26?',\r\n      answer:\r\n        'Enter your gross salary, select pay frequency, and add pension and student loan options. The calculator applies 2025/26 HMRC thresholds to estimate tax, NI and your net pay.',\r\n    },\r\n    {\r\n      question: 'Does this include Scottish or rUK tax bands?',\r\n      answer:\r\n        'Yes. Where applicable, the tool uses the correct UK or Scottish income tax bands for the 2025/26 tax year.',\r\n    },\r\n    {\r\n      question: 'Can I export or print the results?',\r\n      answer:\r\n        'You can save or print your results for your records or to share with HR and recruiters.',\r\n    },\r\n  ];\r\n\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: faqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  const LAST_UPDATED_ISO = '2025-04-06';\r\n  const LAST_UPDATED_DISPLAY = '6 April 2025';\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <script\r\n        type=\"application/ld+json\"\r\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(faqJson) }}\r\n      />\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\r\n              UK Take-Home Pay Calculator (2025/26)\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto mt-3\">\r\n              Estimate UK take-home pay after tax, NI, pension and student loans for the 2025/26 tax\r\n              year.\r\n            </p>\r\n\r\n            {/* Quick links: Hub + siblings */}\r\n            <div className=\"mt-4 flex flex-wrap justify-center gap-2\">\r\n              <Link\r\n                to={createPageUrl('SalaryCalculatorUK')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                Salary Hub\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('SalaryCalculatorPaycheck')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                Paycheck\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('GrossToNetCalculator')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                GrossÔÇætoÔÇæNet\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10\">\r\n          <div className=\"space-y-6\">\r\n            <h2 className=\"text-2xl font-semibold text-gray-900\">Calculate Your Take-Home Pay</h2>\r\n            <p className=\"text-gray-700\">\r\n              For the most accurate take-home estimate (including tax, NI, pension, and student loan\r\n              options), use our main Salary Calculator hub below.\r\n            </p>\r\n            <div>\r\n              <Link\r\n                to={createPageUrl('SalaryCalculatorUK')}\r\n                className=\"inline-flex items-center px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700\"\r\n              >\r\n                Open Salary Calculator Hub\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-12\">\r\n            <FAQSection faqs={faqs} title=\"TakeÔÇæHome Pay FAQs\" />\r\n            <p className=\"text-xs text-gray-500 mt-6\">\r\n              Last updated: <time dateTime={LAST_UPDATED_ISO}>{LAST_UPDATED_DISPLAY}</time>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <RelatedCalculators\r\n        calculators={[\r\n          {\r\n            name: 'UK Salary Calculator (Take-Home Pay 2025/26)',\r\n            url: createPageUrl('SalaryCalculatorUK'),\r\n            description: 'Full takeÔÇæhome breakdown with tax, NI, pension and student loan options.',\r\n          },\r\n          {\r\n            name: 'Paycheck Calculator UK (After Tax & NI)',\r\n            url: createPageUrl('SalaryCalculatorPaycheck'),\r\n            description: 'See weekly, fortnightly or monthly net pay after deductions.',\r\n          },\r\n          {\r\n            name: 'Gross to Net Income Calculator (UK)',\r\n            url: createPageUrl('GrossToNetCalculator'),\r\n            description: 'Convert a gross annual figure to monthly net pay after deductions.',\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\SalaryCalculatorUK.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 382,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\nimport {\r\n  PoundSterling,\r\n  Calculator,\r\n  TrendingDown,\r\n  TrendingUp,\r\n  HelpCircle,\r\n  ChevronsUpDown,\r\n  Settings2,\r\n} from 'lucide-react';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip as RechartsTooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\nimport AnimatedNumber from '../components/general/AnimatedNumber';\r\nimport CalculatorWrapper from '../components/calculators/CalculatorWrapper'; // New component for content\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators'; // New component for internal linking\r\nimport Breadcrumbs from '../components/general/Breadcrumbs';\r\nimport { createPageUrl } from '@/utils';\r\nimport { Link } from 'react-router-dom'; // Added Link import\r\n\r\n// Adding structured data for better rich snippets\r\nconst salaryCalculatorJsonLd = {\r\n  '@context': 'https://schema.org',\r\n  '@type': 'WebApplication',\r\n  name: 'UK Salary Calculator 2025/26',\r\n  applicationCategory: 'FinanceApplication',\r\n  operatingSystem: 'Web Browser',\r\n  description:\r\n    'Free UK salary calculator for 2025/26 tax year. Calculate take-home pay from gross salary and vice versa with accurate tax and National Insurance calculations.',\r\n  offers: {\r\n    '@type': 'Offer',\r\n    price: '0',\r\n    priceCurrency: 'GBP',\r\n  },\r\n};\r\n\r\nconst breadcrumbJsonLd = {\r\n  '@context': 'https://schema.org',\r\n  '@type': 'BreadcrumbList',\r\n  itemListElement: [\r\n    { '@type': 'ListItem', position: 1, name: 'Home', item: 'https://www.calcmymoney.co.uk/' },\r\n    {\r\n      '@type': 'ListItem',\r\n      position: 2,\r\n      name: 'Salary & Income',\r\n      item: 'https://www.calcmymoney.co.uk/salary-calculator-uk/',\r\n    },\r\n  ],\r\n};\r\n\r\nconst taxData = {\r\n  '2025-26': {\r\n    // This is the new current year, based on the previous 2025-26 data\r\n    name: '2025/26',\r\n    taxBracketsEngland: [\r\n      { min: 0, max: 12570, rate: 0, name: 'Personal Allowance' },\r\n      { min: 12571, max: 50270, rate: 0.2, name: 'Basic Rate' },\r\n      { min: 50271, max: 125140, rate: 0.4, name: 'Higher Rate' },\r\n      { min: 125141, max: Infinity, rate: 0.45, name: 'Additional Rate' },\r\n    ],\r\n    taxBracketsScotland: [\r\n      { min: 0, max: 12570, rate: 0, name: 'Personal Allowance' },\r\n      { min: 12571, max: 14876, rate: 0.19, name: 'Starter Rate' },\r\n      { min: 14877, max: 26561, rate: 0.2, name: 'Basic Rate' },\r\n      { min: 26562, max: 43662, rate: 0.21, name: 'Intermediate Rate' },\r\n      { min: 43663, max: 75000, rate: 0.42, name: 'Higher Rate' },\r\n      { min: 75001, max: 125140, rate: 0.45, name: 'Advanced Rate' }, // Changed from \"Top Rate\" as per common data\r\n      { min: 125141, max: Infinity, rate: 0.48, name: 'Top Rate' },\r\n    ],\r\n    niThresholds: [\r\n      { min: 0, max: 12570, rate: 0 },\r\n      { min: 12571, max: 50270, rate: 0.08 },\r\n      { min: 50271, max: Infinity, rate: 0.02 },\r\n    ],\r\n    studentLoanRates: {\r\n      none: { threshold: 0, rate: 0 },\r\n      plan1: { threshold: 24990, rate: 0.09 },\r\n      plan2: { threshold: 27295, rate: 0.09 },\r\n      plan4: { threshold: 31395, rate: 0.09 },\r\n      plan5: { threshold: 25000, rate: 0.09 },\r\n      postgraduate: { threshold: 21000, rate: 0.06 },\r\n    },\r\n    defaultTaxCode: '1257L',\r\n    basePersonalAllowance: 12570,\r\n  },\r\n  '2024-25': {\r\n    name: '2024/25',\r\n    taxBracketsEngland: [\r\n      { min: 0, max: 12570, rate: 0, name: 'Personal Allowance' },\r\n      { min: 12571, max: 50270, rate: 0.2, name: 'Basic Rate' },\r\n      { min: 50271, max: 125140, rate: 0.4, name: 'Higher Rate' },\r\n      { min: 125141, max: Infinity, rate: 0.45, name: 'Additional Rate' },\r\n    ],\r\n    taxBracketsScotland: [\r\n      { min: 0, max: 12570, rate: 0, name: 'Personal Allowance' },\r\n      { min: 12571, max: 14732, rate: 0.19, name: 'Starter Rate' },\r\n      { min: 14733, max: 25688, rate: 0.2, name: 'Basic Rate' },\r\n      { min: 25689, max: 43662, rate: 0.21, name: 'Intermediate Rate' },\r\n      { min: 43663, max: 125140, rate: 0.42, name: 'Higher Rate' },\r\n      { min: 125141, max: Infinity, rate: 0.47, name: 'Top Rate' },\r\n    ],\r\n    niThresholds: [\r\n      { min: 0, max: 12570, rate: 0 },\r\n      { min: 12571, max: 50270, rate: 0.1 }, // Note: Rate was higher for part of the year, using an average representation\r\n      { min: 50271, max: Infinity, rate: 0.02 },\r\n    ],\r\n    studentLoanRates: {\r\n      none: { threshold: 0, rate: 0 },\r\n      plan1: { threshold: 22015, rate: 0.09 },\r\n      plan2: { threshold: 27295, rate: 0.09 },\r\n      plan4: { threshold: 27660, rate: 0.09 },\r\n      plan5: { threshold: 25000, rate: 0.09 },\r\n      postgraduate: { threshold: 21000, rate: 0.06 },\r\n    },\r\n    defaultTaxCode: '1257L',\r\n    basePersonalAllowance: 12570,\r\n  },\r\n};\r\n\r\nconst salaryCalculatorFAQs = [\r\n  {\r\n    question: 'What is the difference between gross and net salary?',\r\n    answer:\r\n      'Gross salary is your total earnings before any deductions. Net salary (take-home pay) is what you receive after tax, National Insurance, pension contributions, and other deductions are removed.',\r\n  },\r\n  {\r\n    question: 'How is UK income tax calculated?',\r\n    answer:\r\n      'UK income tax is calculated using a progressive system with different rates: 0% (Personal Allowance up to ┬ú12,570), 20% (Basic Rate ┬ú12,571-┬ú50,270), 40% (Higher Rate ┬ú50,271-┬ú125,140), and 45% (Additional Rate above ┬ú125,140). Scotland has different rates.',\r\n  },\r\n  {\r\n    question: 'What is National Insurance and how much do I pay?',\r\n    answer:\r\n      'National Insurance funds state benefits like the NHS and state pension. For 2025/26, you pay 8% on earnings between ┬ú12,570-┬ú50,270, then 2% on earnings above ┬ú50,270.',\r\n  },\r\n  {\r\n    question: \"What should I include in 'Other Tax-Free Allowances'?\",\r\n    answer:\r\n      \"This field is for additional tax-free allowances you're entitled to beyond the standard Personal Allowance. Common examples include: Marriage Allowance (┬ú1,260 if your spouse transfers their unused Personal Allowance), Blind Person's Allowance (┬ú3,070 for registered blind individuals), Property Allowance (up to ┬ú1,000 for rental income), and Trading Allowance (up to ┬ú1,000 for small business income). Only include amounts you're already aware you're entitled to. If unsure, consult HMRC guidance or a tax advisor.\",\r\n  },\r\n  {\r\n    question: 'Can I reduce my tax through pension contributions?',\r\n    answer:\r\n      \"Yes! Pension contributions are deducted from your gross salary before tax is calculated, reducing your taxable income. The annual allowance is typically ┬ú40,000 (or ┬ú10,000 if you're a high earner already drawing pension benefits).\",\r\n  },\r\n  {\r\n    question: 'What does my tax code mean?',\r\n    answer:\r\n      \"Your tax code tells your employer how much tax-free income you're entitled to. The standard code 1257L gives you the full ┬ú12,570 personal allowance. Different codes reflect your personal circumstances.\",\r\n  },\r\n  {\r\n    question: 'Are these calculations accurate for my payslip?',\r\n    answer:\r\n      'Our calculations use official HMRC rates and provide estimates. Your actual deductions may vary based on your specific tax code, benefits in kind, student loans, or other personal circumstances.',\r\n  },\r\n];\r\n\r\n// Add color constants for charts\r\nconst CHART_COLORS = {\r\n  takeHome: '#10b981', // green\r\n  tax: '#ef4444', // red\r\n  nationalInsurance: '#8b5cf6', // purple\r\n  pension: '#f59e0b', // amber\r\n  studentLoan: '#f97316', // orange\r\n};\r\n\r\nconst calculateDeductions = (grossSalary, options, taxYearData, useAdvancedOptions = false) => {\r\n  const {\r\n    location,\r\n    taxCode,\r\n    otherAllowances,\r\n    pensionType,\r\n    pensionValue,\r\n    studentLoanPlan,\r\n    seisInvestment,\r\n    eisInvestment,\r\n  } = options;\r\n\r\n  const {\r\n    basePersonalAllowance,\r\n    taxBracketsEngland,\r\n    taxBracketsScotland,\r\n    niThresholds,\r\n    studentLoanRates,\r\n  } = taxYearData;\r\n\r\n  // 1. Calculate Personal Allowance\r\n  let personalAllowance = basePersonalAllowance;\r\n\r\n  // Only apply tax code and other allowances if advanced options are used\r\n  if (useAdvancedOptions) {\r\n    if (taxCode && taxCode.match(/^\\d+L$/)) {\r\n      personalAllowance = parseInt(taxCode.slice(0, -1)) * 10;\r\n    }\r\n    personalAllowance += otherAllowances;\r\n  }\r\n\r\n  // Personal allowance reduction for high earners (always applies)\r\n  if (grossSalary > 100000) {\r\n    personalAllowance = Math.max(0, personalAllowance - (grossSalary - 100000) / 2);\r\n  }\r\n\r\n  // 2. Calculate Pension - ONLY if advanced options are used\r\n  let pensionAmount = 0;\r\n  if (useAdvancedOptions && pensionValue > 0) {\r\n    if (pensionType === 'percent') {\r\n      pensionAmount = (grossSalary * pensionValue) / 100;\r\n    } else {\r\n      pensionAmount = pensionValue * 12; // Assuming fixed is monthly\r\n    }\r\n  }\r\n\r\n  // 3. Calculate Income Tax\r\n  const taxBrackets =\r\n    useAdvancedOptions && location === 'scotland' ? taxBracketsScotland : taxBracketsEngland;\r\n\r\n  let calculatedTax = 0;\r\n  let newTaxBreakdown = [];\r\n  const incomeSubjectToTax = Math.max(0, grossSalary - personalAllowance - pensionAmount);\r\n\r\n  for (const bracket of taxBrackets) {\r\n    if (bracket.rate === 0) continue; // Skip personal allowance for breakdown\r\n\r\n    // Determine how much of the taxable income falls into this bracket\r\n    // We shift the bracket boundaries relative to the taxable income after PA\r\n    const lowerBound = Math.max(0, bracket.min - personalAllowance);\r\n    const upperBound = bracket.max === Infinity ? Infinity : bracket.max - personalAllowance;\r\n\r\n    const taxableInThisBand = Math.max(0, Math.min(incomeSubjectToTax, upperBound) - lowerBound);\r\n\r\n    if (taxableInThisBand > 0) {\r\n      const taxForBand = taxableInThisBand * bracket.rate;\r\n      calculatedTax += taxForBand;\r\n\r\n      newTaxBreakdown.push({\r\n        name: bracket.name,\r\n        amount: taxForBand,\r\n        rate: bracket.rate * 100,\r\n        taxableAmount: taxableInThisBand,\r\n        bracketMin: bracket.min,\r\n        bracketMax: bracket.max === Infinity ? 'No limit' : bracket.max,\r\n      });\r\n    }\r\n  }\r\n\r\n  let tax = calculatedTax;\r\n\r\n  // 4. SEIS/EIS Relief - ONLY if advanced options are used\r\n  let seisRelief = 0;\r\n  let eisRelief = 0;\r\n  if (useAdvancedOptions) {\r\n    seisRelief = (seisInvestment || 0) * 0.5;\r\n    eisRelief = (eisInvestment || 0) * 0.3;\r\n    const totalRelief = seisRelief + eisRelief;\r\n    tax = Math.max(0, tax - totalRelief);\r\n  }\r\n\r\n  // 5. Calculate National Insurance\r\n  let nationalInsuranceTotal = 0;\r\n  let niBreakdown = [];\r\n\r\n  for (const threshold of niThresholds) {\r\n    if (grossSalary > threshold.min) {\r\n      const niableInThreshold = Math.min(grossSalary, threshold.max) - threshold.min;\r\n      if (niableInThreshold > 0) {\r\n        const niForThreshold = niableInThreshold * threshold.rate;\r\n        nationalInsuranceTotal += niForThreshold;\r\n\r\n        if (niForThreshold > 0) {\r\n          niBreakdown.push({\r\n            rate: threshold.rate * 100,\r\n            amount: niForThreshold,\r\n            niableAmount: niableInThreshold,\r\n            min: threshold.min,\r\n            max: threshold.max === Infinity ? 'No limit' : threshold.max,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // 6. Calculate Student Loan - ONLY if advanced options are used\r\n  let studentLoan = 0;\r\n  if (useAdvancedOptions && studentLoanPlan !== 'none') {\r\n    const plan = studentLoanRates[studentLoanPlan];\r\n    if (grossSalary > plan.threshold) {\r\n      studentLoan = (grossSalary - plan.threshold) * plan.rate;\r\n    }\r\n  }\r\n\r\n  const totalDeductions = tax + nationalInsuranceTotal + studentLoan + pensionAmount;\r\n  const takeHome = grossSalary - totalDeductions;\r\n\r\n  return {\r\n    grossAnnual: grossSalary,\r\n    tax: { total: tax, breakdown: newTaxBreakdown },\r\n    nationalInsurance: { total: nationalInsuranceTotal, breakdown: niBreakdown },\r\n    studentLoan,\r\n    pension: pensionAmount,\r\n    totalDeductions,\r\n    takeHomeAnnual: takeHome,\r\n    personalAllowance: personalAllowance,\r\n    seisRelief,\r\n    eisRelief,\r\n  };\r\n};\r\n\r\n// --- Net to Gross Calculator ---\r\nconst calculateGrossFromNet = (netSalary, options, taxYearData, useAdvancedOptions) => {\r\n  let lowGuess = netSalary;\r\n  let highGuess = netSalary * 2.5;\r\n  let guess = netSalary * 1.5;\r\n  let iterations = 0;\r\n\r\n  while (iterations < 50) {\r\n    const calculatedNet = calculateDeductions(\r\n      guess,\r\n      options,\r\n      taxYearData,\r\n      useAdvancedOptions\r\n    ).takeHomeAnnual;\r\n    const difference = calculatedNet - netSalary;\r\n\r\n    if (Math.abs(difference) < 0.01) {\r\n      return guess; // Found a close enough match\r\n    }\r\n\r\n    if (difference < 0) {\r\n      // Our guess was too low\r\n      lowGuess = guess;\r\n    } else {\r\n      // Our guess was too high\r\n      highGuess = guess;\r\n    }\r\n\r\n    guess = (lowGuess + highGuess) / 2;\r\n    iterations++;\r\n  }\r\n  return guess; // Return best guess after iterations\r\n};\r\n\r\n// Move AdvancedOptions outside the main component to prevent re-creation\r\nconst AdvancedOptions = React.memo(\r\n  ({\r\n    taxYear,\r\n    onTaxYearChange,\r\n    location,\r\n    taxCode,\r\n    otherAllowances,\r\n    pensionValue,\r\n    pensionType,\r\n    studentLoanPlan,\r\n    seisInvestment,\r\n    eisInvestment,\r\n    onValueChange,\r\n  }) => (\r\n    <div className=\"space-y-6 mt-6 p-6 bg-gray-50 dark:bg-gray-800/50 rounded-lg border dark:border-gray-700\">\r\n      <div className=\"space-y-2\">\r\n        <Label className=\"text-gray-900 dark:text-gray-100\">Tax Year</Label>\r\n        <Select value={taxYear} onValueChange={onTaxYearChange}>\r\n          <SelectTrigger className=\"dark:text-gray-50\">\r\n            <SelectValue />\r\n          </SelectTrigger>\r\n          <SelectContent className=\"dark:bg-gray-800 dark:text-gray-50 dark:border-gray-700\">\r\n            <SelectItem value=\"2025-26\">2025/26</SelectItem>\r\n            <SelectItem value=\"2024-25\">2024/25</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n      <div className=\"space-y-2\">\r\n        <Label className=\"text-gray-900 dark:text-gray-100\">I live in</Label>\r\n        <Select value={location} onValueChange={(val) => onValueChange('location', val)}>\r\n          <SelectTrigger className=\"dark:text-gray-50\">\r\n            <SelectValue />\r\n          </SelectTrigger>\r\n          <SelectContent className=\"dark:bg-gray-800 dark:text-gray-50 dark:border-gray-700\">\r\n            <SelectItem value=\"england\">England, Wales or Northern Ireland</SelectItem>\r\n            <SelectItem value=\"scotland\">Scotland</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n      <div className=\"space-y-2\">\r\n        <Label className=\"text-gray-900 dark:text-gray-100\">My Tax Code</Label>\r\n        <Input\r\n          value={taxCode}\r\n          onChange={(e) => onValueChange('taxCode', e.target.value)}\r\n          className=\"dark:bg-gray-700 dark:text-gray-50 dark:border-gray-600\"\r\n        />\r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n          Default for {taxData[taxYear].name} is {taxData[taxYear].defaultTaxCode}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"space-y-2\">\r\n        <Label className=\"text-gray-900 dark:text-gray-100\">Pension Contribution</Label>\r\n        <div className=\"flex gap-2\">\r\n          <Input\r\n            type=\"number\"\r\n            value={pensionValue}\r\n            onChange={(e) => onValueChange('pensionValue', e.target.value)}\r\n            className=\"w-full dark:bg-gray-700 dark:text-gray-50 dark:border-gray-600\"\r\n          />\r\n          <Select value={pensionType} onValueChange={(val) => onValueChange('pensionType', val)}>\r\n            <SelectTrigger className=\"w-[180px] dark:text-gray-50\">\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent className=\"dark:bg-gray-800 dark:text-gray-50 dark:border-gray-700\">\r\n              <SelectItem value=\"percent\">%</SelectItem>\r\n              <SelectItem value=\"fixed\">Fixed PM</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <div className=\"space-y-2\">\r\n        <Label className=\"text-gray-900 dark:text-gray-100\">Student Loan Plan</Label>\r\n        <Select\r\n          value={studentLoanPlan}\r\n          onValueChange={(val) => onValueChange('studentLoanPlan', val)}\r\n        >\r\n          <SelectTrigger className=\"dark:text-gray-50\">\r\n            <SelectValue />\r\n          </SelectTrigger>\r\n          <SelectContent className=\"dark:bg-gray-800 dark:text-gray-50 dark:border-gray-700\">\r\n            <SelectItem value=\"none\">No Student Loan</SelectItem>\r\n            <SelectItem value=\"plan1\">Plan 1</SelectItem>\r\n            <SelectItem value=\"plan2\">Plan 2</SelectItem>\r\n            <SelectItem value=\"plan4\">Plan 4 (Scotland)</SelectItem>\r\n            <SelectItem value=\"plan5\">Plan 5</SelectItem>\r\n            <SelectItem value=\"postgraduate\">Postgraduate Loan</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n\r\n      <div className=\"space-y-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label className=\"text-gray-900 dark:text-gray-100\">\r\n            SEIS Investment (50% Tax Relief)\r\n          </Label>\r\n          <div className=\"relative\">\r\n            <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 dark:text-gray-500\" />\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"e.g. 1000\"\r\n              value={seisInvestment}\r\n              onChange={(e) => onValueChange('seisInvestment', e.target.value)}\r\n              className=\"pl-10 dark:bg-gray-700 dark:text-gray-50 dark:border-gray-600\"\r\n            />\r\n          </div>\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n            Annual investment limit: ┬ú200,000\r\n          </p>\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label className=\"text-gray-900 dark:text-gray-100\">\r\n            EIS Investment (30% Tax Relief)\r\n          </Label>\r\n          <div className=\"relative\">\r\n            <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 dark:text-gray-500\" />\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"e.g. 1000\"\r\n              value={eisInvestment}\r\n              onChange={(e) => onValueChange('eisInvestment', e.target.value)}\r\n              className=\"pl-10 dark:bg-gray-700 dark:text-gray-50 dark:border-gray-600\"\r\n            />\r\n          </div>\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n            Annual investment limit: ┬ú1,000,000\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"space-y-2\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <Label className=\"text-gray-900 dark:text-gray-100\">\r\n            Other Tax-Free Allowances (Annual)\r\n          </Label>\r\n          <TooltipProvider>\r\n            <Tooltip>\r\n              <TooltipTrigger asChild>\r\n                <HelpCircle className=\"w-4 h-4 text-gray-400 hover:text-gray-600 dark:text-gray-300 cursor-help\" />\r\n              </TooltipTrigger>\r\n              <TooltipContent className=\"max-w-xs bg-gray-800 text-white p-3 rounded-lg\">\r\n                <p className=\"text-sm\">\r\n                  <strong>Common allowances include:</strong>\r\n                </p>\r\n                <ul className=\"text-xs mt-1 space-y-1\">\r\n                  <li>ÔÇó Marriage Allowance: ┬ú1,260</li>\r\n                  <li>ÔÇó Blind Person's Allowance: ┬ú3,070</li>\r\n                  <li>ÔÇó Property Allowance: up to ┬ú1,000</li>\r\n                  <li>ÔÇó Trading Allowance: up to ┬ú1,000</li>\r\n                </ul>\r\n                <p className=\"text-xs mt-2 italic\">\r\n                  Only include if you're already entitled to these allowances.\r\n                </p>\r\n              </TooltipContent>\r\n            </Tooltip>\r\n          </TooltipProvider>\r\n        </div>\r\n        <div className=\"relative\">\r\n          <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 dark:text-gray-500\" />\r\n          <Input\r\n            type=\"number\"\r\n            value={otherAllowances}\r\n            onChange={(e) => onValueChange('otherAllowances', e.target.value)}\r\n            className=\"pl-10 dark:bg-gray-700 dark:text-gray-50 dark:border-gray-600\"\r\n            placeholder=\"e.g. 1260\"\r\n          />\r\n        </div>\r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n          e.g. Marriage Allowance, Blind Person's Allowance.\r\n          <a\r\n            href=\"#faq-section\"\r\n            className=\"text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 underline ml-1\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              document.getElementById('faq-section')?.scrollIntoView({ behavior: 'smooth' });\r\n            }}\r\n          >\r\n            See FAQ for details\r\n          </a>\r\n          .\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n);\r\n\r\nexport default function SalaryCalculatorUK() {\r\n  // Common state\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n  const [payPeriod, setPayPeriod] = useState('annually');\r\n  const [results, setResults] = useState(null); // Changed to null for initial no-calculation state\r\n  const [csvData, setCsvData] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('grossToNet');\r\n  const [taxYear, setTaxYear] = useState('2025-26'); // Updated to 2025-26\r\n  const [hasCalculated, setHasCalculated] = useState(false); // New state to control results display\r\n\r\n  // Gross-to-Net state\r\n  const [grossSalary, setGrossSalary] = useState(''); // Changed to empty string\r\n\r\n  // Net-to-Gross state\r\n  const [netSalary, setNetSalary] = useState(''); // Changed to empty string\r\n\r\n  // Advanced options state\r\n  const [location, setLocation] = useState('england');\r\n  const [taxCode, setTaxCode] = useState(taxData['2025-26'].defaultTaxCode); // Initialize with default for 2025-26\r\n  const [pensionType, setPensionType] = useState('percent');\r\n  const [pensionValue, setPensionValue] = useState(5);\r\n  const [studentLoanPlan, setStudentLoanPlan] = useState('none');\r\n  const [seisInvestment, setSeisInvestment] = useState(''); // Changed to empty string\r\n  const [eisInvestment, setEisInvestment] = useState(''); // Changed to empty string\r\n  const [otherAllowances, setOtherAllowances] = useState(''); // Changed to empty string\r\n\r\n  const breadcrumbPath = [\r\n    { name: 'Home', url: createPageUrl('Home') },\r\n    { name: 'Salary & Income' },\r\n  ];\r\n\r\n  const handleTaxYearChange = React.useCallback((year) => {\r\n    setTaxYear(year);\r\n    const currentTaxYearData = taxData[year];\r\n    setTaxCode(currentTaxYearData.defaultTaxCode);\r\n  }, []);\r\n\r\n  const handleAdvancedOptionChange = React.useCallback((field, value) => {\r\n    switch (field) {\r\n      case 'taxCode':\r\n        setTaxCode(value);\r\n        break;\r\n      case 'otherAllowances':\r\n        setOtherAllowances(value);\r\n        break;\r\n      case 'pensionValue':\r\n        setPensionValue(value); // Changed to keep as string, conversion handled at calculation\r\n        break;\r\n      case 'pensionType':\r\n        setPensionType(value);\r\n        break;\r\n      case 'studentLoanPlan':\r\n        setStudentLoanPlan(value);\r\n        break;\r\n      case 'seisInvestment':\r\n        setSeisInvestment(value);\r\n        break;\r\n      case 'eisInvestment':\r\n        setEisInvestment(value);\r\n        break;\r\n      case 'location':\r\n        setLocation(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Reset calculation when major options change\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n    // Removed taxYear from dependencies as its change is handled by handleTaxYearChange,\r\n    // which also updates the tax code. This prevents unnecessary re-renders of AdvancedOptions.\r\n  }, [activeTab]); // Dependencies simplified to trigger reset on major changes\r\n\r\n  const handleCalculate = () => {\r\n    const currentTaxYearData = taxData[taxYear];\r\n    const options = {\r\n      location,\r\n      taxCode,\r\n      otherAllowances: Number(otherAllowances) || 0,\r\n      pensionType,\r\n      pensionValue: Number(pensionValue) || 0, // Ensure pensionValue is a number here\r\n      studentLoanPlan,\r\n      seisInvestment: Number(seisInvestment) || 0,\r\n      eisInvestment: Number(eisInvestment) || 0,\r\n    };\r\n\r\n    let annualSalaryInput; // This will hold the user's input *before* annualization\r\n    let newResults = {};\r\n\r\n    if (activeTab === 'grossToNet') {\r\n      annualSalaryInput = Number(grossSalary) || 0;\r\n    } else {\r\n      // netToGross\r\n      annualSalaryInput = Number(netSalary) || 0;\r\n    }\r\n\r\n    let annualAmount; // This will be the annualized amount used in calculation\r\n    switch (payPeriod) {\r\n      case 'monthly':\r\n        annualAmount = annualSalaryInput * 12;\r\n        break;\r\n      case 'weekly':\r\n        annualAmount = annualSalaryInput * 52;\r\n        break;\r\n      case 'daily':\r\n        annualAmount = annualSalaryInput * 260; // 5 days * 52 weeks\r\n        break;\r\n      default: // annually\r\n        annualAmount = annualSalaryInput;\r\n    }\r\n\r\n    if (activeTab === 'grossToNet') {\r\n      newResults = calculateDeductions(annualAmount, options, currentTaxYearData, showAdvanced);\r\n    } else {\r\n      // netToGross\r\n      const calculatedGross = calculateGrossFromNet(\r\n        annualAmount,\r\n        options,\r\n        currentTaxYearData,\r\n        showAdvanced\r\n      );\r\n      newResults = calculateDeductions(calculatedGross, options, currentTaxYearData, showAdvanced);\r\n    }\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    // Prepare CSV Data\r\n    if (newResults.grossAnnual !== undefined) {\r\n      const csvExportData = [\r\n        ['Description', 'Annual', 'Monthly', 'Weekly', 'Daily'],\r\n        [\r\n          'Gross Salary',\r\n          `┬ú${newResults.grossAnnual.toFixed(2)}`,\r\n          `┬ú${(newResults.grossAnnual / 12).toFixed(2)}`,\r\n          `┬ú${(newResults.grossAnnual / 52).toFixed(2)}`,\r\n          `┬ú${(newResults.grossAnnual / 260).toFixed(2)}`,\r\n        ],\r\n        ['Personal Allowance', `┬ú${newResults.personalAllowance.toFixed(2)}`, '', '', ''],\r\n        [\r\n          'Income Tax',\r\n          `┬ú${(-newResults.tax.total).toFixed(2)}`,\r\n          `┬ú${(-newResults.tax.total / 12).toFixed(2)}`,\r\n          `┬ú${(-newResults.tax.total / 52).toFixed(2)}`,\r\n          `┬ú${(-newResults.tax.total / 260).toFixed(2)}`,\r\n        ],\r\n        [\r\n          'National Insurance',\r\n          `┬ú${(-newResults.nationalInsurance.total).toFixed(2)}`,\r\n          `┬ú${(-newResults.nationalInsurance.total / 12).toFixed(2)}`,\r\n          `┬ú${(-newResults.nationalInsurance.total / 52).toFixed(2)}`,\r\n          `┬ú${(-newResults.nationalInsurance.total / 260).toFixed(2)}`,\r\n        ],\r\n        [\r\n          'Pension Contribution',\r\n          `┬ú${(-newResults.pension).toFixed(2)}`,\r\n          `┬ú${(-newResults.pension / 12).toFixed(2)}`,\r\n          `┬ú${(-newResults.pension / 52).toFixed(2)}`,\r\n          `┬ú${(-newResults.pension / 260).toFixed(2)}`,\r\n        ],\r\n        [\r\n          'Student Loan',\r\n          `┬ú${(-newResults.studentLoan).toFixed(2)}`,\r\n          `┬ú${(-newResults.studentLoan / 12).toFixed(2)}`,\r\n          `┬ú${(-newResults.studentLoan / 52).toFixed(2)}`,\r\n          `┬ú${(-newResults.studentLoan / 260).toFixed(2)}`,\r\n        ],\r\n        [\r\n          'Total Deductions',\r\n          `┬ú${(-newResults.totalDeductions).toFixed(2)}`,\r\n          `┬ú${(-newResults.totalDeductions / 12).toFixed(2)}`,\r\n          `┬ú${(-newResults.totalDeductions / 52).toFixed(2)}`,\r\n          `┬ú${(-newResults.totalDeductions / 260).toFixed(2)}`,\r\n        ],\r\n        [\r\n          'Net Take-Home Pay',\r\n          `┬ú${newResults.takeHomeAnnual.toFixed(2)}`,\r\n          `┬ú${(newResults.takeHomeAnnual / 12).toFixed(2)}`,\r\n          `┬ú${(newResults.takeHomeAnnual / 52).toFixed(2)}`,\r\n          `┬ú${(newResults.takeHomeAnnual / 260).toFixed(2)}`,\r\n        ],\r\n      ];\r\n      setCsvData(csvExportData);\r\n    }\r\n  };\r\n\r\n  const prepareChartData = () => {\r\n    if (!results) return { pieData: [], barData: [] };\r\n\r\n    const pieData = [\r\n      { name: 'Take Home Pay', value: results.takeHomeAnnual, color: CHART_COLORS.takeHome },\r\n      { name: 'Income Tax', value: results.tax.total, color: CHART_COLORS.tax },\r\n      {\r\n        name: 'National Insurance',\r\n        value: results.nationalInsurance.total,\r\n        color: CHART_COLORS.nationalInsurance,\r\n      },\r\n    ];\r\n\r\n    if (results.pension > 0) {\r\n      pieData.push({ name: 'Pension', value: results.pension, color: CHART_COLORS.pension });\r\n    }\r\n    if (results.studentLoan > 0) {\r\n      pieData.push({\r\n        name: 'Student Loan',\r\n        value: results.studentLoan,\r\n        color: CHART_COLORS.studentLoan,\r\n      });\r\n    }\r\n\r\n    const pieDataFiltered = pieData.filter((item) => item.value > 0);\r\n\r\n    const barData = [\r\n      {\r\n        period: 'Annual',\r\n        'Take Home': results.takeHomeAnnual,\r\n        Tax: results.tax.total,\r\n        'National Insurance': results.nationalInsurance.total,\r\n        ...(results.pension > 0 && { Pension: results.pension }),\r\n        ...(results.studentLoan > 0 && { 'Student Loan': results.studentLoan }),\r\n      },\r\n      {\r\n        period: 'Monthly',\r\n        'Take Home': results.takeHomeAnnual / 12,\r\n        Tax: results.tax.total / 12,\r\n        'National Insurance': results.nationalInsurance.total / 12,\r\n        ...(results.pension > 0 && { Pension: results.pension / 12 }),\r\n        ...(results.studentLoan > 0 && { 'Student Loan': results.studentLoan / 12 }),\r\n      },\r\n      {\r\n        period: 'Weekly',\r\n        'Take Home': results.takeHomeAnnual / 52,\r\n        Tax: results.tax.total / 52,\r\n        'National Insurance': results.nationalInsurance.total / 52,\r\n        ...(results.pension > 0 && { Pension: results.pension / 52 }),\r\n        ...(results.studentLoan > 0 && { 'Student Loan': results.studentLoan / 52 }),\r\n      },\r\n      {\r\n        period: 'Daily',\r\n        'Take Home': results.takeHomeAnnual / 260,\r\n        Tax: results.tax.total / 260,\r\n        'National Insurance': results.nationalInsurance.total / 260,\r\n        ...(results.pension > 0 && { Pension: results.pension / 260 }),\r\n        ...(results.studentLoan > 0 && { 'Student Loan': results.studentLoan / 260 }),\r\n      },\r\n    ];\r\n\r\n    return { pieData: pieDataFiltered, barData };\r\n  };\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"bg-white dark:bg-gray-800 p-3 border border-gray-300 dark:border-gray-600 rounded-lg shadow-lg\">\r\n          <p className=\"font-medium text-gray-900 dark:text-gray-100\">{`${label}`}</p>\r\n          {payload.map((entry, index) => (\r\n            <p key={index} style={{ color: entry.color }}>\r\n              {`${entry.name}: ┬ú${entry.value.toLocaleString('en-GB', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const PieTooltip = ({ active, payload }) => {\r\n    if (active && payload && payload.length) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <div className=\"bg-white dark:bg-gray-800 p-3 border border-gray-300 dark:border-gray-600 rounded-lg shadow-lg\">\r\n          <p className=\"font-medium text-gray-900 dark:text-gray-100\">{data.name}</p>\r\n          <p style={{ color: data.color }}>\r\n            ┬ú\r\n            {data.value.toLocaleString('en-GB', {\r\n              minimumFractionDigits: 2,\r\n              maximumFractionDigits: 2,\r\n            })}\r\n          </p>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            {results.grossAnnual > 0 ? ((data.value / results.grossAnnual) * 100).toFixed(1) : 0}%\r\n            of gross salary\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Custom label component for Pie Chart to ensure visibility in both modes\r\n  const renderCustomizedLabel = ({ cx, cy, midAngle, outerRadius, percent, name }) => {\r\n    const RADIAN = Math.PI / 180;\r\n    const radius = outerRadius + 20; // Distance of the label from the center\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n      <text\r\n        x={x}\r\n        y={y}\r\n        fill=\"currentColor\" // Use currentColor to pick up CSS text color\r\n        textAnchor={x > cx ? 'start' : 'end'}\r\n        dominantBaseline=\"central\"\r\n        className=\"text-xs text-gray-800 dark:text-gray-200\" // Tailwind classes for text color and size\r\n      >\r\n        {`${name} ${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  // Salary Hub FAQs (visible and mirrored in JSON-LD)\r\n  const salaryHubFaqs = [\r\n    {\r\n      question: 'Which UK tax year do these salary tools use?',\r\n      answer:\r\n        'All salary and tax calculations default to the UK 2025/26 tax year and are updated when HMRC publishes new thresholds.',\r\n    },\r\n    {\r\n      question: 'Can I include pension and student loan deductions?',\r\n      answer:\r\n        'Yes. You can add workplace pension contributions and select Student Loan Plan 1, 2, 4 or Postgraduate Loan to see the impact on your take-home pay.',\r\n    },\r\n    {\r\n      question: 'WhatÔÇÖs the difference between take-home pay, paycheck, and gross-to-net?',\r\n      answer:\r\n        'Take-home pay shows net pay after tax and NI over your chosen period; paycheck focuses on weekly/fortnightly/monthly pay; gross-to-net converts an annual or gross figure into a net amount after deductions.',\r\n    },\r\n  ];\r\n\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: salaryHubFaqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  // Last updated meta\r\n  const LAST_UPDATED_ISO = '2025-04-06';\r\n  const LAST_UPDATED_DISPLAY = '6 April 2025';\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(salaryCalculatorJsonLd)}</script>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJsonLd)}</script>\r\n      <script\r\n        type=\"application/ld+json\"\r\n        dangerouslySetInnerHTML={{ __html: JSON.stringify(faqJson) }}\r\n      />\r\n\r\n      <div className=\"bg-white dark:bg-gray-900\">\r\n        {/* Page Header - Optimized for SEO */}\r\n        <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n            <Breadcrumbs path={breadcrumbPath} />\r\n            <div className=\"text-center\">\r\n              <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n                UK Salary Calculator ÔÇô Take-Home Pay 2025/26\r\n              </h1>\r\n              <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n                Calculate your UK take-home pay for the 2025/26 tax year. Free salary calculator\r\n                with accurate income tax, National Insurance, and pension contributions. Works for\r\n                England, Wales, Scotland & Northern Ireland.\r\n              </p>\r\n\r\n              {/* Quick links to child calculators (above the fold) */}\r\n              <div className=\"mt-6 flex flex-wrap justify-center gap-2\">\r\n                <Link\r\n                  to={createPageUrl('SalaryCalculatorTakeHomePay')}\r\n                  className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50 dark:bg-gray-800 dark:text-blue-300 dark:border-blue-700\"\r\n                >\r\n                  TakeÔÇæHome Pay\r\n                </Link>\r\n                <Link\r\n                  to={createPageUrl('SalaryCalculatorPaycheck')}\r\n                  className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50 dark:bg-gray-800 dark:text-blue-300 dark:border-blue-700\"\r\n                >\r\n                  Paycheck\r\n                </Link>\r\n                <Link\r\n                  to={createPageUrl('GrossToNetCalculator')}\r\n                  className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50 dark:bg-gray-800 dark:text-blue-300 dark:border-blue-700\"\r\n                >\r\n                  GrossÔÇætoÔÇæNet\r\n                </Link>\r\n                <Link\r\n                  to={createPageUrl('ProRataSalaryCalculator')}\r\n                  className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50 dark:bg-gray-800 dark:text-blue-300 dark:border-blue-700\"\r\n                >\r\n                  ProÔÇæRata\r\n                </Link>\r\n              </div>\r\n\r\n              {/* Additional keyword-rich content */}\r\n              <div className=\"mt-6 text-sm text-gray-500 dark:text-gray-400 max-w-4xl mx-auto\">\r\n                <p>\r\n                  Supports gross-to-net and net-to-gross calculations ÔÇó Updated for 2025/26 tax\r\n                  rates ÔÇó Includes student loan repayments ÔÇó Scottish income tax rates supported\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Calculator Content */}\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"print-title hidden\">UK Salary Calculator Results</div>\r\n\r\n          <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n            {/* Input Panel */}\r\n            <div className=\"lg:col-span-2 non-printable\">\r\n              <Card className=\"sticky top-24 bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n                  <CardHeader>\r\n                    <TabsList className=\"grid w-full grid-cols-2 bg-gray-100 dark:bg-gray-700\">\r\n                      <TabsTrigger\r\n                        value=\"grossToNet\"\r\n                        className=\"data-[state=active]:bg-white dark:data-[state=active]:bg-gray-600 dark:text-gray-50\"\r\n                      >\r\n                        Gross to Net\r\n                      </TabsTrigger>\r\n                      <TabsTrigger\r\n                        value=\"netToGross\"\r\n                        className=\"data-[state=active]:bg-white dark:data-[state=active]:bg-gray-600 dark:text-gray-50\"\r\n                      >\r\n                        Net to Gross\r\n                      </TabsTrigger>\r\n                    </TabsList>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-6\">\r\n                    <TabsContent value=\"grossToNet\" className=\"space-y-6 mt-0\">\r\n                      <div className=\"space-y-2\">\r\n                        <Label htmlFor=\"grossSalary\" className=\"text-gray-900 dark:text-gray-100\">\r\n                          Your Gross Salary\r\n                        </Label>\r\n                        <div className=\"relative\">\r\n                          <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 dark:text-gray-500\" />\r\n                          <Input\r\n                            id=\"grossSalary\"\r\n                            type=\"number\"\r\n                            value={grossSalary}\r\n                            onChange={(e) => setGrossSalary(e.target.value)}\r\n                            className=\"pl-10 dark:bg-gray-700 dark:text-gray-50 dark:border-gray-600\"\r\n                            placeholder=\"e.g. 50000\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </TabsContent>\r\n                    <TabsContent value=\"netToGross\" className=\"space-y-6 mt-0\">\r\n                      <div className=\"space-y-2\">\r\n                        <Label htmlFor=\"netSalary\" className=\"text-gray-900 dark:text-gray-100\">\r\n                          Your Desired Take-Home\r\n                        </Label>\r\n                        <div className=\"relative\">\r\n                          <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 dark:text-gray-500\" />\r\n                          <Input\r\n                            id=\"netSalary\"\r\n                            type=\"number\"\r\n                            value={netSalary}\r\n                            onChange={(e) => setNetSalary(e.target.value)}\r\n                            className=\"pl-10 dark:bg-gray-700 dark:text-gray-50 dark:border-gray-600\"\r\n                            placeholder=\"e.g. 35000\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </TabsContent>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <Label htmlFor=\"payPeriod\" className=\"text-gray-900 dark:text-gray-100\">\r\n                        Pay Period\r\n                      </Label>\r\n                      <Select value={payPeriod} onValueChange={setPayPeriod}>\r\n                        <SelectTrigger className=\"dark:text-gray-50\">\r\n                          <SelectValue />\r\n                        </SelectTrigger>\r\n                        <SelectContent className=\"dark:bg-gray-800 dark:text-gray-50 dark:border-gray-700\">\r\n                          <SelectItem value=\"annually\">Annually</SelectItem>\r\n                          <SelectItem value=\"monthly\">Monthly</SelectItem>\r\n                          <SelectItem value=\"weekly\">Weekly</SelectItem>\r\n                          <SelectItem value=\"daily\">Daily (5 days/week)</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n\r\n                    <Button\r\n                      variant=\"outline\"\r\n                      onClick={() => setShowAdvanced(!showAdvanced)}\r\n                      className=\"w-full\"\r\n                    >\r\n                      <Settings2\r\n                        className={`w-4 h-4 mr-2 transition-transform ${showAdvanced ? 'rotate-90' : ''}`}\r\n                      />\r\n                      {showAdvanced ? 'Hide' : 'Show'} Advanced Options\r\n                    </Button>\r\n\r\n                    {showAdvanced && (\r\n                      <AdvancedOptions\r\n                        taxYear={taxYear}\r\n                        onTaxYearChange={handleTaxYearChange}\r\n                        location={location}\r\n                        taxCode={taxCode}\r\n                        otherAllowances={otherAllowances}\r\n                        pensionValue={pensionValue}\r\n                        pensionType={pensionType}\r\n                        studentLoanPlan={studentLoanPlan}\r\n                        seisInvestment={seisInvestment}\r\n                        eisInvestment={eisInvestment}\r\n                        onValueChange={handleAdvancedOptionChange}\r\n                      />\r\n                    )}\r\n\r\n                    <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                      <Calculator className=\"w-5 h-5 mr-2\" />\r\n                      Calculate\r\n                    </Button>\r\n                  </CardContent>\r\n                </Tabs>\r\n              </Card>\r\n            </div>\r\n\r\n            {/* Results Panel */}\r\n            <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n              {hasCalculated && results ? ( // Conditional rendering for results\r\n                <>\r\n                  <div className=\"non-printable\">\r\n                    <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200\">\r\n                      Your Results for {taxData[taxYear].name}\r\n                    </h2>\r\n                  </div>\r\n                  {/* Summary Cards */}\r\n                  <div className=\"grid md:grid-cols-2 gap-6\">\r\n                    <Card className=\"bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/50 dark:to-green-800/50 border-green-200 dark:border-green-700\">\r\n                      <CardContent className=\"p-6\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div>\r\n                            <p className=\"text-sm font-medium text-green-800 dark:text-green-300\">\r\n                              Annual Take-Home\r\n                            </p>\r\n                            <div className=\"text-3xl font-bold text-green-900 dark:text-green-100\">\r\n                              ┬ú\r\n                              <AnimatedNumber\r\n                                value={results.takeHomeAnnual}\r\n                                options={{ minimumFractionDigits: 2, maximumFractionDigits: 2 }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"w-12 h-12 bg-green-500 rounded-full flex items-center justify-center\">\r\n                            <TrendingUp className=\"w-6 h-6 text-white\" />\r\n                          </div>\r\n                        </div>\r\n                        <p className=\"text-sm text-green-700 dark:text-green-300 mt-2\">\r\n                          ┬ú\r\n                          {(results.takeHomeAnnual / 12)?.toLocaleString('en-GB', {\r\n                            minimumFractionDigits: 2,\r\n                            maximumFractionDigits: 2,\r\n                          })}{' '}\r\n                          per month\r\n                        </p>\r\n                      </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"bg-gradient-to-br from-red-50 to-red-100 dark:from-red-900/50 dark:to-red-800/50 border-red-200 dark:border-red-700\">\r\n                      <CardContent className=\"p-6\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div>\r\n                            <p className=\"text-sm font-medium text-red-800 dark:text-red-300\">\r\n                              Total Deductions\r\n                            </p>\r\n                            <div className=\"text-3xl font-bold text-red-900 dark:text-red-100\">\r\n                              ┬ú\r\n                              <AnimatedNumber\r\n                                value={results.totalDeductions}\r\n                                options={{ minimumFractionDigits: 2, maximumFractionDigits: 2 }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"w-12 h-12 bg-red-500 rounded-full flex items-center justify-center\">\r\n                            <TrendingDown className=\"w-6 h-6 text-white\" />\r\n                          </div>\r\n                        </div>\r\n                        <p className=\"text-sm text-red-700 dark:text-red-300 mt-2\">\r\n                          {results.grossAnnual > 0\r\n                            ? ((results.totalDeductions / results.grossAnnual) * 100).toFixed(1)\r\n                            : 0}\r\n                          % effective rate\r\n                        </p>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </div>\r\n\r\n                  {/* NEW: Visual Charts Section */}\r\n                  <div className=\"grid md:grid-cols-2 gap-6 non-printable\">\r\n                    {/* Pie Chart - Salary Breakdown */}\r\n                    <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700 text-gray-900 dark:text-gray-100\">\r\n                      <CardHeader>\r\n                        <CardTitle>Salary Breakdown</CardTitle>\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <ResponsiveContainer width=\"100%\" height={300}>\r\n                          <PieChart>\r\n                            <Pie\r\n                              data={prepareChartData().pieData}\r\n                              cx=\"50%\"\r\n                              cy=\"50%\"\r\n                              labelLine={false}\r\n                              label={renderCustomizedLabel} // Use the custom label component\r\n                              outerRadius={80}\r\n                              dataKey=\"value\"\r\n                            >\r\n                              {prepareChartData().pieData.map((entry, index) => (\r\n                                <Cell key={`cell-${index}`} fill={entry.color} />\r\n                              ))}\r\n                            </Pie>\r\n                            <RechartsTooltip content={<PieTooltip />} />\r\n                          </PieChart>\r\n                        </ResponsiveContainer>\r\n                      </CardContent>\r\n                    </Card>\r\n\r\n                    {/* Bar Chart - Period Comparison */}\r\n                    <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700 text-gray-900 dark:text-gray-100\">\r\n                      <CardHeader>\r\n                        <CardTitle>Payment Periods</CardTitle>\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <ResponsiveContainer width=\"100%\" height={300}>\r\n                          <BarChart data={prepareChartData().barData}>\r\n                            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--border)\" />{' '}\r\n                            {/* Use CSS variable for border color */}\r\n                            <XAxis dataKey=\"period\" tick={{ fill: 'currentColor' }} />\r\n                            <YAxis\r\n                              tickFormatter={(value) => `┬ú${(value / 1000).toFixed(0)}k`}\r\n                              tick={{ fill: 'currentColor' }}\r\n                              width={40}\r\n                            />\r\n                            <RechartsTooltip content={<CustomTooltip />} />\r\n                            <Legend wrapperStyle={{ fontSize: '14px' }} />{' '}\r\n                            {/* Apply text color to legend */}\r\n                            <Bar dataKey=\"Take Home\" stackId=\"a\" fill={CHART_COLORS.takeHome} />\r\n                            <Bar dataKey=\"Tax\" stackId=\"a\" fill={CHART_COLORS.tax} />\r\n                            <Bar\r\n                              dataKey=\"National Insurance\"\r\n                              stackId=\"a\"\r\n                              fill={CHART_COLORS.nationalInsurance}\r\n                            />\r\n                            {results.pension > 0 && (\r\n                              <Bar dataKey=\"Pension\" stackId=\"a\" fill={CHART_COLORS.pension} />\r\n                            )}\r\n                            {results.studentLoan > 0 && (\r\n                              <Bar\r\n                                dataKey=\"Student Loan\"\r\n                                stackId=\"a\"\r\n                                fill={CHART_COLORS.studentLoan}\r\n                              />\r\n                            )}\r\n                          </BarChart>\r\n                        </ResponsiveContainer>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </div>\r\n\r\n                  {/* Detailed Breakdown */}\r\n                  <Card className=\"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                    <CardHeader>\r\n                      <CardTitle>\r\n                        {activeTab === 'netToGross'\r\n                          ? 'Reverse Calculation Breakdown'\r\n                          : 'Step-by-Step Calculation'}\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        {activeTab === 'netToGross' ? (\r\n                          <>\r\n                            {/* Net to Gross Flow */}\r\n                            {/* Step 1: Target Net Salary */}\r\n                            <div className=\"flex justify-between items-center p-4 bg-green-50 dark:bg-green-900/20 rounded-lg border-2 border-green-300 dark:border-green-700\">\r\n                              <span className=\"font-bold text-lg text-green-800 dark:text-green-200\">\r\n                                1. Your Target Net Take-Home\r\n                              </span>\r\n                              <span className=\"font-bold text-xl text-green-800 dark:text-green-200\">\r\n                                ┬ú\r\n                                {(\r\n                                  Number(netSalary) *\r\n                                  (payPeriod === 'monthly'\r\n                                    ? 12\r\n                                    : payPeriod === 'weekly'\r\n                                      ? 52\r\n                                      : payPeriod === 'daily'\r\n                                        ? 260\r\n                                        : 1)\r\n                                )?.toLocaleString('en-GB', {\r\n                                  minimumFractionDigits: 2,\r\n                                  maximumFractionDigits: 2,\r\n                                })}\r\n                              </span>\r\n                            </div>\r\n\r\n                            {/* Step 2: Required Gross Salary */}\r\n                            <div className=\"flex justify-between items-center p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg border-2 border-blue-300 dark:border-blue-700\">\r\n                              <span className=\"font-bold text-lg text-blue-800 dark:text-blue-200\">\r\n                                2. Required Gross Salary\r\n                              </span>\r\n                              <span className=\"font-bold text-xl text-blue-800 dark:text-blue-200\">\r\n                                ┬ú\r\n                                {results.grossAnnual?.toLocaleString('en-GB', {\r\n                                  minimumFractionDigits: 2,\r\n                                  maximumFractionDigits: 2,\r\n                                })}\r\n                              </span>\r\n                            </div>\r\n\r\n                            <div className=\"p-3 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg\">\r\n                              <p className=\"text-sm text-yellow-800 dark:text-yellow-300\">\r\n                                ­ƒÆí{' '}\r\n                                <strong>\r\n                                  To earn ┬ú\r\n                                  {(\r\n                                    Number(netSalary) *\r\n                                    (payPeriod === 'monthly'\r\n                                      ? 12\r\n                                      : payPeriod === 'weekly'\r\n                                        ? 52\r\n                                        : payPeriod === 'daily'\r\n                                          ? 260\r\n                                          : 1)\r\n                                  )?.toLocaleString('en-GB', { maximumFractionDigits: 0 })}{' '}\r\n                                  net annually, you need a gross salary of ┬ú\r\n                                  {results.grossAnnual?.toLocaleString('en-GB', {\r\n                                    maximumFractionDigits: 0,\r\n                                  })}\r\n                                  .\r\n                                </strong>\r\n                              </p>\r\n                              <p className=\"text-xs text-yellow-700 dark:text-yellow-400 mt-1\">\r\n                                Here's how that gross salary breaks down:\r\n                              </p>\r\n                            </div>\r\n\r\n                            {/* Step 3: Personal Allowance */}\r\n                            <div className=\"flex justify-between items-center p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n                              <div>\r\n                                <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                                  3. Personal Allowance (Tax-Free)\r\n                                </span>\r\n                                {showAdvanced && (\r\n                                  <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                                    Tax code: {taxCode}{' '}\r\n                                    {Number(otherAllowances) > 0\r\n                                      ? `+ ┬ú${Number(otherAllowances).toLocaleString()} other allowances`\r\n                                      : ''}\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                              <span className=\"font-semibold text-blue-700 dark:text-blue-300\">\r\n                                ┬ú\r\n                                {results.personalAllowance?.toLocaleString('en-GB', {\r\n                                  minimumFractionDigits: 2,\r\n                                  maximumFractionDigits: 2,\r\n                                })}\r\n                              </span>\r\n                            </div>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            {/* Gross to Net Flow (original) */}\r\n                            {/* Step 1: Gross Salary */}\r\n                            <div className=\"flex justify-between items-center p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\r\n                              <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                                1. Gross Annual Salary\r\n                              </span>\r\n                              <span className=\"font-bold text-lg text-gray-900 dark:text-gray-100\">\r\n                                ┬ú\r\n                                {results.grossAnnual?.toLocaleString('en-GB', {\r\n                                  minimumFractionDigits: 2,\r\n                                  maximumFractionDigits: 2,\r\n                                })}\r\n                              </span>\r\n                            </div>\r\n\r\n                            {/* Step 2: Personal Allowance */}\r\n                            <div className=\"flex justify-between items-center p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n                              <div>\r\n                                <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                                  2. Personal Allowance (Tax-Free)\r\n                                </span>\r\n                                {showAdvanced && (\r\n                                  <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                                    Tax code: {taxCode}{' '}\r\n                                    {Number(otherAllowances) > 0\r\n                                      ? `+ ┬ú${Number(otherAllowances).toLocaleString()} other allowances`\r\n                                      : ''}\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                              <span className=\"font-semibold text-blue-700 dark:text-blue-300\">\r\n                                ┬ú\r\n                                {results.personalAllowance?.toLocaleString('en-GB', {\r\n                                  minimumFractionDigits: 2,\r\n                                  maximumFractionDigits: 2,\r\n                                })}\r\n                              </span>\r\n                            </div>\r\n                          </>\r\n                        )}\r\n\r\n                        {/* Step 3/4: Pension (if applicable) - same for both flows */}\r\n                        {showAdvanced && results.pension > 0 && (\r\n                          <div className=\"flex justify-between items-center p-3 bg-green-50 dark:bg-green-900/20 rounded-lg\">\r\n                            <div>\r\n                              <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                                {activeTab === 'netToGross' ? '4' : '3'}. Pension Contribution\r\n                                (Pre-Tax)\r\n                              </span>\r\n                              <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                                {pensionValue}\r\n                                {pensionType === 'percent' ? '%' : ' Fixed PM'}\r\n                              </p>\r\n                            </div>\r\n                            <span className=\"font-semibold text-green-700 dark:text-green-300\">\r\n                              -┬ú\r\n                              {results.pension.toLocaleString('en-GB', {\r\n                                minimumFractionDigits: 2,\r\n                                maximumFractionDigits: 2,\r\n                              })}\r\n                            </span>\r\n                          </div>\r\n                        )}\r\n\r\n                        {/* Taxable Income */}\r\n                        <div className=\"flex justify-between items-center p-3 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg\">\r\n                          <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                            {activeTab === 'netToGross'\r\n                              ? showAdvanced && results.pension > 0\r\n                                ? '5'\r\n                                : '4'\r\n                              : showAdvanced && results.pension > 0\r\n                                ? '4'\r\n                                : '3'}\r\n                            . Taxable Income\r\n                          </span>\r\n                          <span className=\"font-semibold text-yellow-700 dark:text-yellow-300\">\r\n                            ┬ú\r\n                            {(\r\n                              results.grossAnnual -\r\n                              results.personalAllowance -\r\n                              results.pension\r\n                            ).toLocaleString('en-GB', {\r\n                              minimumFractionDigits: 2,\r\n                              maximumFractionDigits: 2,\r\n                            })}\r\n                          </span>\r\n                        </div>\r\n\r\n                        {/* Income Tax Breakdown */}\r\n                        <div className=\"space-y-2\">\r\n                          <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                            {activeTab === 'netToGross'\r\n                              ? showAdvanced && results.pension > 0\r\n                                ? '6'\r\n                                : '5'\r\n                              : showAdvanced && results.pension > 0\r\n                                ? '5'\r\n                                : '4'}\r\n                            . Income Tax Calculation:\r\n                          </h4>\r\n                          {results.tax?.breakdown?.map((bracket, index) => (\r\n                            <div\r\n                              key={index}\r\n                              className=\"flex justify-between items-center p-3 border-l-4 border-red-400 bg-red-50 dark:bg-red-900/20 rounded-r-lg\"\r\n                            >\r\n                              <div>\r\n                                <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                                  {bracket.name} ({bracket.rate}%)\r\n                                </span>\r\n                                <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                                  {bracket.bracketMin !== undefined\r\n                                    ? `┬ú${bracket.bracketMin.toLocaleString()} - `\r\n                                    : ''}\r\n                                  {bracket.bracketMax !== 'No limit'\r\n                                    ? `┬ú${bracket.bracketMax.toLocaleString()}`\r\n                                    : bracket.bracketMax}\r\n                                  {bracket.taxableAmount > 0\r\n                                    ? ` | Taxed: ┬ú${bracket.taxableAmount.toLocaleString('en-GB', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`\r\n                                    : ''}\r\n                                </p>\r\n                              </div>\r\n                              <span className=\"font-semibold text-red-700 dark:text-red-300\">\r\n                                -┬ú\r\n                                {bracket.amount.toLocaleString('en-GB', {\r\n                                  minimumFractionDigits: 2,\r\n                                  maximumFractionDigits: 2,\r\n                                })}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                          <div className=\"flex justify-between items-center p-2 bg-red-100 dark:bg-red-800/30 rounded\">\r\n                            <span className=\"font-medium\">Total Income Tax:</span>\r\n                            <span className=\"font-bold text-red-800 dark:text-red-200\">\r\n                              -┬ú\r\n                              {results.tax.total.toLocaleString('en-GB', {\r\n                                minimumFractionDigits: 2,\r\n                                maximumFractionDigits: 2,\r\n                              })}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* National Insurance Breakdown */}\r\n                        <div className=\"space-y-2\">\r\n                          <h4 className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                            {activeTab === 'netToGross'\r\n                              ? showAdvanced && results.pension > 0\r\n                                ? '7'\r\n                                : '6'\r\n                              : showAdvanced && results.pension > 0\r\n                                ? '6'\r\n                                : '5'}\r\n                            . National Insurance Calculation:\r\n                          </h4>\r\n                          {results.nationalInsurance?.breakdown?.map((bracket, index) => (\r\n                            <div\r\n                              key={index}\r\n                              className=\"flex justify-between items-center p-3 border-l-4 border-purple-400 bg-purple-50 dark:bg-purple-900/20 rounded-r-lg\"\r\n                            >\r\n                              <div>\r\n                                <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                                  {bracket.rate}% Rate\r\n                                </span>\r\n                                <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                                  {bracket.min !== undefined\r\n                                    ? `┬ú${bracket.min.toLocaleString()} - `\r\n                                    : ''}\r\n                                  {bracket.max !== 'No limit'\r\n                                    ? `┬ú${bracket.max.toLocaleString()}`\r\n                                    : bracket.max}\r\n                                  {bracket.niableAmount > 0\r\n                                    ? ` | NI'able: ┬ú${bracket.niableAmount.toLocaleString('en-GB', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`\r\n                                    : ''}\r\n                                </p>\r\n                              </div>\r\n                              <span className=\"font-semibold text-purple-700 dark:text-purple-300\">\r\n                                -┬ú\r\n                                {bracket.amount.toLocaleString('en-GB', {\r\n                                  minimumFractionDigits: 2,\r\n                                  maximumFractionDigits: 2,\r\n                                })}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                          <div className=\"flex justify-between items-center p-2 bg-purple-100 dark:bg-purple-800/30 rounded\">\r\n                            <span className=\"font-medium\">Total National Insurance:</span>\r\n                            <span className=\"font-bold text-purple-800 dark:text-purple-200\">\r\n                              -┬ú\r\n                              {results.nationalInsurance.total.toLocaleString('en-GB', {\r\n                                minimumFractionDigits: 2,\r\n                                maximumFractionDigits: 2,\r\n                              })}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Student Loan (if applicable) */}\r\n                        {showAdvanced && results.studentLoan > 0 && (\r\n                          <div className=\"flex justify-between items-center p-3 border-l-4 border-orange-400 bg-orange-50 dark:bg-orange-900/20 rounded-r-lg\">\r\n                            <div>\r\n                              <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                                {activeTab === 'netToGross'\r\n                                  ? showAdvanced && results.pension > 0\r\n                                    ? '8'\r\n                                    : '7'\r\n                                  : showAdvanced && results.pension > 0\r\n                                    ? '7'\r\n                                    : '6'}\r\n                                . Student Loan (\r\n                                {studentLoanPlan\r\n                                  .replace('plan', 'Plan ')\r\n                                  .replace('postgraduate', 'Postgraduate')}\r\n                                )\r\n                              </span>\r\n                              <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                                {taxData[taxYear].studentLoanRates[studentLoanPlan]?.rate * 100}% on\r\n                                income above ┬ú\r\n                                {taxData[taxYear].studentLoanRates[\r\n                                  studentLoanPlan\r\n                                ]?.threshold?.toLocaleString()}\r\n                              </p>\r\n                            </div>\r\n                            <span className=\"font-semibold text-orange-700 dark:text-orange-300\">\r\n                              -┬ú\r\n                              {results.studentLoan.toLocaleString('en-GB', {\r\n                                minimumFractionDigits: 2,\r\n                                maximumFractionDigits: 2,\r\n                              })}\r\n                            </span>\r\n                          </div>\r\n                        )}\r\n\r\n                        {/* SEIS Relief (if applicable) */}\r\n                        {showAdvanced && results.seisRelief > 0 && (\r\n                          <div className=\"flex justify-between items-center p-3 border-l-4 border-teal-400 bg-teal-50 dark:bg-teal-900/20 rounded-r-lg\">\r\n                            <div>\r\n                              <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                                SEIS Tax Relief (50%)\r\n                              </span>\r\n                              <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                                On ┬ú{(Number(seisInvestment) || 0).toLocaleString('en-GB')}{' '}\r\n                                investment\r\n                              </p>\r\n                            </div>\r\n                            <span className=\"font-semibold text-teal-700 dark:text-teal-300\">\r\n                              +┬ú\r\n                              {results.seisRelief.toLocaleString('en-GB', {\r\n                                minimumFractionDigits: 2,\r\n                                maximumFractionDigits: 2,\r\n                              })}\r\n                            </span>\r\n                          </div>\r\n                        )}\r\n\r\n                        {/* EIS Relief (if applicable) */}\r\n                        {showAdvanced && results.eisRelief > 0 && (\r\n                          <div className=\"flex justify-between items-center p-3 border-l-4 border-teal-400 bg-teal-50 dark:bg-teal-900/20 rounded-r-lg\">\r\n                            <div>\r\n                              <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                                EIS Tax Relief (30%)\r\n                              </span>\r\n                              <p className=\"text-sm text-gray-600 dark:text-gray-300\">\r\n                                On ┬ú{(Number(eisInvestment) || 0).toLocaleString('en-GB')}{' '}\r\n                                investment\r\n                              </p>\r\n                            </div>\r\n                            <span className=\"font-semibold text-teal-700 dark:text-teal-300\">\r\n                              +┬ú\r\n                              {results.eisRelief.toLocaleString('en-GB', {\r\n                                minimumFractionDigits: 2,\r\n                                maximumFractionDigits: 2,\r\n                              })}\r\n                            </span>\r\n                          </div>\r\n                        )}\r\n\r\n                        {/* Final Result - different messaging for each tab */}\r\n                        <div className=\"flex justify-between items-center p-4 bg-green-100 dark:bg-green-800/50 rounded-lg border-2 border-green-300 dark:border-green-700\">\r\n                          <span className=\"font-bold text-lg text-green-800 dark:text-green-200\">\r\n                            {activeTab === 'netToGross'\r\n                              ? 'Confirmed: Your Target Achieved'\r\n                              : 'Net Annual Take-Home'}\r\n                          </span>\r\n                          <span className=\"font-bold text-xl text-green-800 dark:text-green-200\">\r\n                            ┬ú\r\n                            {results.takeHomeAnnual?.toLocaleString('en-GB', {\r\n                              minimumFractionDigits: 2,\r\n                              maximumFractionDigits: 2,\r\n                            })}\r\n                          </span>\r\n                        </div>\r\n\r\n                        {activeTab === 'netToGross' && (\r\n                          <div className=\"p-3 bg-green-50 dark:bg-green-900/20 rounded-lg\">\r\n                            <p className=\"text-sm text-green-800 dark:text-green-300\">\r\n                              Ô£à <strong>Perfect match!</strong> A gross salary of ┬ú\r\n                              {results.grossAnnual?.toLocaleString('en-GB', {\r\n                                maximumFractionDigits: 0,\r\n                              })}{' '}\r\n                              will give you your target net pay of ┬ú\r\n                              {results.takeHomeAnnual?.toLocaleString('en-GB', {\r\n                                maximumFractionDigits: 0,\r\n                              })}\r\n                              .\r\n                            </p>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"grid md:grid-cols-4 gap-4 mt-6 pt-6 border-t dark:border-gray-700\">\r\n                          <div className=\"text-center p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg\">\r\n                            <p className=\"text-sm text-blue-800 dark:text-blue-300 font-medium\">\r\n                              Monthly Take-Home\r\n                            </p>\r\n                            <p className=\"text-xl font-bold text-blue-900 dark:text-blue-100\">\r\n                              ┬ú\r\n                              {(results.takeHomeAnnual / 12)?.toLocaleString('en-GB', {\r\n                                minimumFractionDigits: 2,\r\n                                maximumFractionDigits: 2,\r\n                              })}\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"text-center p-4 bg-purple-50 dark:bg-purple-900/30 rounded-lg\">\r\n                            <p className=\"text-sm text-purple-800 dark:text-purple-300 font-medium\">\r\n                              Weekly Take-Home\r\n                            </p>\r\n                            <p className=\"text-xl font-bold text-purple-900 dark:text-purple-100\">\r\n                              ┬ú\r\n                              {(results.takeHomeAnnual / 52)?.toLocaleString('en-GB', {\r\n                                minimumFractionDigits: 2,\r\n                                maximumFractionDigits: 2,\r\n                              })}\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"text-center p-4 bg-green-50 dark:bg-green-900/30 rounded-lg\">\r\n                            <p className=\"text-sm text-green-800 dark:text-green-300 font-medium\">\r\n                              Daily Take-Home\r\n                            </p>\r\n                            <p className=\"text-xl font-bold text-green-900 dark:text-green-100\">\r\n                              ┬ú\r\n                              {(results.takeHomeAnnual / 260)?.toLocaleString('en-GB', {\r\n                                minimumFractionDigits: 2,\r\n                                maximumFractionDigits: 2,\r\n                              })}\r\n                            </p>\r\n                            <p className=\"text-xs text-green-600 dark:text-green-400\">\r\n                              (5days/week)\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"text-center p-4 bg-indigo-50 dark:bg-indigo-900/30 rounded-lg\">\r\n                            <p className=\"text-sm text-indigo-800 dark:text-indigo-300 font-medium\">\r\n                              Hourly Take-Home\r\n                            </p>\r\n                            <p className=\"text-xl font-bold text-indigo-900 dark:text-indigo-100\">\r\n                              ┬ú\r\n                              {(results.takeHomeAnnual / 2080)?.toLocaleString('en-GB', {\r\n                                minimumFractionDigits: 2,\r\n                                maximumFractionDigits: 2,\r\n                              })}\r\n                            </p>\r\n                            <p className=\"text-xs text-indigo-600 dark:text-indigo-400\">\r\n                              (40hrs/week)\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  {/* Disclaimer */}\r\n                  <div className=\"non-printable pt-6\">\r\n                    <ExportActions\r\n                      csvData={csvData}\r\n                      fileName={`salary-calculation-${taxYear}`}\r\n                      title={`Salary Calculation ${taxData[taxYear].name}`}\r\n                    />\r\n                  </div>\r\n                  <Card className=\"bg-amber-50 dark:bg-yellow-900/30 border-amber-200 dark:border-yellow-700\">\r\n                    <CardContent className=\"p-4 flex items-start gap-3\">\r\n                      <HelpCircle className=\"w-5 h-5 text-amber-700 dark:text-yellow-400 mt-0.5\" />\r\n                      <p className=\"text-sm text-amber-800 dark:text-yellow-300\">\r\n                        <strong>Disclaimer:</strong> This calculator provides estimates based on UK\r\n                        tax rates for the selected tax year. Results are for guidance only and\r\n                        should not be considered as professional financial advice. Actual deductions\r\n                        may vary based on individual circumstances.\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </>\r\n              ) : (\r\n                // Placeholder when no calculation has been made\r\n                <Card className=\"lg:col-span-3 flex items-center justify-center h-[400px] bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\">\r\n                  <div className=\"text-center text-gray-500 dark:text-gray-400\">\r\n                    <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                    <h3 className=\"text-xl font-semibold\">Ready for your results?</h3>\r\n                    <p>Fill in your details and click \"Calculate\" to see your salary breakdown.</p>\r\n                  </div>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <CalculatorWrapper>\r\n          <div className=\"space-y-8\">\r\n            <section>\r\n              <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mb-3\">\r\n                Calculate Your Take-Home Pay\r\n              </h2>\r\n              <p className=\"text-gray-700 dark:text-gray-300\">\r\n                The UK Salary Calculator is an essential tool for anyone employed in the United\r\n                Kingdom. It demystifies your payslip by translating your gross annual salaryÔÇöthe\r\n                headline figure offered in a job contractÔÇöinto your net take-home pay, which is the\r\n                actual amount that arrives in your bank account. This calculation involves\r\n                subtracting all mandatory deductions, including Income Tax, National Insurance, and,\r\n                if applicable, pension contributions and student loan repayments. Our calculator is\r\n                kept up-to-date with the latest tax thresholds for England, Scotland, Wales, and\r\n                Northern Ireland, ensuring you receive an accurate and reliable estimate.\r\n              </p>\r\n            </section>\r\n            <section>\r\n              <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mb-3\">\r\n                Pro-Rata & Pay Frequency (weekly, monthly)\r\n              </h2>\r\n              <p className=\"text-gray-700 dark:text-gray-300\">\r\n                Our calculator seamlessly handles various pay frequencies. Whether you are paid\r\n                annually, monthly, weekly, or daily, you can input your gross pay for that period,\r\n                and the tool will annualize it to provide a complete tax breakdown. For part-time\r\n                workers, our dedicated{' '}\r\n                <a\r\n                  href={createPageUrl('ProRataSalaryCalculator')}\r\n                  className=\"text-blue-600 hover:underline\"\r\n                >\r\n                  Pro Rata Salary Calculator\r\n                </a>{' '}\r\n                can help you determine your equivalent earnings.\r\n              </p>\r\n            </section>\r\n            <section>\r\n              <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mb-3\">\r\n                Student Loan & Pension Options\r\n              </h2>\r\n              <p className=\"text-gray-700 dark:text-gray-300\">\r\n                Use the 'Advanced Options' to tailor the calculation to your specific circumstances.\r\n                You can select your student loan plan (including Plan 1, 2, 4, 5, and Postgraduate)\r\n                and specify your workplace pension contributions as either a percentage or a fixed\r\n                monthly amount. These are factored into your takeÔÇæhome pay.\r\n              </p>\r\n            </section>\r\n          </div>\r\n        </CalculatorWrapper>\r\n\r\n        <RelatedCalculators\r\n          calculators={[\r\n            {\r\n              name: 'Income Tax Calculator',\r\n              url: createPageUrl('IncomeTaxCalculator'),\r\n              description: 'Isolate and understand just your income tax liability.',\r\n            },\r\n            {\r\n              name: 'National Insurance Calculator',\r\n              url: createPageUrl('NationalInsuranceCalculator'),\r\n              description: 'See a detailed breakdown of your NI contributions.',\r\n            },\r\n            {\r\n              name: 'Pension Calculator',\r\n              url: createPageUrl('PensionCalculator'),\r\n              description: 'Project your retirement savings and contributions.',\r\n            },\r\n          ]}\r\n        />\r\n\r\n        {/* Added: Explore Salary Tools section */}\r\n        <div className=\"bg-white dark:bg-gray-900 py-12 non-printable\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mb-6\">\r\n              Explore Salary Tools\r\n            </h2>\r\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n              <Link\r\n                to={createPageUrl('SalaryCalculatorTakeHomePay')}\r\n                className=\"block p-5 border rounded-lg hover:shadow-md hover:border-blue-300 transition dark:border-gray-700 dark:hover:border-blue-700 dark:bg-gray-800 dark:text-gray-100\"\r\n              >\r\n                <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">\r\n                  Take-Home Pay Calculator\r\n                </h3>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-1\">\r\n                  Estimate your net pay after tax & NI.\r\n                </p>\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('SalaryCalculatorPaycheck')}\r\n                className=\"block p-5 border rounded-lg hover:shadow-md hover:border-blue-300 transition dark:border-gray-700 dark:hover:border-blue-700 dark:bg-gray-800 dark:text-gray-100\"\r\n              >\r\n                <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">\r\n                  Paycheck Calculator\r\n                </h3>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-1\">\r\n                  Weekly, fortnightly or monthly.\r\n                </p>\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('GrossToNetCalculator')}\r\n                className=\"block p-5 border rounded-lg hover:shadow-md hover:border-blue-300 transition dark:border-gray-700 dark:hover:border-blue-700 dark:bg-gray-800 dark:text-gray-100\"\r\n              >\r\n                <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">\r\n                  Gross to Net Calculator\r\n                </h3>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-1\">\r\n                  Convert gross salary to take-home.\r\n                </p>\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('ProRataSalaryCalculator')}\r\n                className=\"block p-5 border rounded-lg hover:shadow-md hover:border-blue-300 transition dark:border-gray-700 dark:hover:border-blue-700 dark:bg-gray-800 dark:text-gray-100\"\r\n              >\r\n                <h3 className=\"font-semibold text-gray-900 dark:text-gray-100\">\r\n                  Pro-Rata Salary Calculator\r\n                </h3>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-1\">\r\n                  Part-time & pro-rata earnings.\r\n                </p>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Visible FAQ section aligned with JSON-LD */}\r\n        <div className=\"bg-gray-50 dark:bg-gray-800/50 py-12 non-printable\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={salaryHubFaqs} title=\"Salary Calculator FAQs\" />\r\n            <p className=\"text-xs text-gray-500 mt-6\">\r\n              Last updated: <time dateTime={LAST_UPDATED_ISO}>{LAST_UPDATED_DISPLAY}</time>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Replace the second FAQ section to keep alignment */}\r\n        <div id=\"faq-section\" className=\"bg-gray-50 dark:bg-gray-800/50 py-12 non-printable\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={salaryHubFaqs} />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Additional content section for keywords */}\r\n        <div className=\"bg-gray-50 dark:bg-gray-800/50 py-12 non-printable\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"text-center mb-8\">\r\n              <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n                UK Salary Calculator - Everything You Need to Know\r\n              </h2>\r\n            </div>\r\n            <div className=\"grid md:grid-cols-2 gap-8 text-sm text-gray-700 dark:text-gray-300\">\r\n              <div>\r\n                <h3 className=\"font-semibold text-gray-900 dark:text-gray-100 mb-3\">\r\n                  How Our UK Tax Calculator Works\r\n                </h3>\r\n                <ul className=\"space-y-2\">\r\n                  <li>ÔÇó Accurate 2025/26 UK tax rates and thresholds</li>\r\n                  <li>ÔÇó Income tax calculation for all UK regions</li>\r\n                  <li>ÔÇó National Insurance contributions (Classes 1 & 4)</li>\r\n                  <li>ÔÇó Student loan repayment calculations (Plans 1-5)</li>\r\n                  <li>ÔÇó Pension contribution tax relief</li>\r\n                  <li>ÔÇó Scottish income tax rates included</li>\r\n                </ul>\r\n              </div>\r\n              <div>\r\n                <h3 className=\"font-semibold text-gray-900 dark:text-gray-100 mb-3\">\r\n                  Perfect for UK Employees & Contractors\r\n                </h3>\r\n                <ul className=\"space-y-2\">\r\n                  <li>ÔÇó PAYE employees and contractors</li>\r\n                  <li>ÔÇó Job offer salary comparisons</li>\r\n                  <li>ÔÇó Annual and monthly salary planning</li>\r\n                  <li>ÔÇó Gross to net pay calculations</li>\r\n                  <li>ÔÇó Net to gross salary requirements</li>\r\n                  <li>ÔÇó Tax code adjustments supported</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\SalaryIncreaseCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 62,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { PoundSterling, Calculator, TrendingUp, Percent, ArrowRight } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst salaryIncreaseFAQs = [\r\n  {\r\n    question: 'What is a typical pay rise percentage in the UK?',\r\n    answer:\r\n      'Pay rises vary significantly by industry, company performance, and individual performance. As of early 2024, many UK employers were budgeting for pay rises in the range of 4-5%. However, this is just an average and not a guarantee.',\r\n  },\r\n  {\r\n    question: 'How does inflation affect my pay rise?',\r\n    answer:\r\n      \"If your pay rise percentage is higher than the rate of inflation, your 'real' buying power increases. If it's lower than inflation, your buying power has effectively decreased, even though you are earning more money. It's always useful to compare your raise to the current Consumer Price Index (CPI).\",\r\n  },\r\n  {\r\n    question: 'How can I negotiate a better pay rise?',\r\n    answer:\r\n      \"To negotiate effectively, research industry salary benchmarks for your role and experience. Document your achievements and the value you've brought to the company. Practice your pitch and be prepared to discuss your performance and future contributions.\",\r\n  },\r\n  {\r\n    question: 'A Note on Calculations',\r\n    answer:\r\n      'This calculator provides a straightforward mathematical calculation. It does not account for tax, National Insurance, pension contributions, or other deductions. To see the impact on your take-home pay, you would need to use the new salary figure in our main Salary Calculator.',\r\n  },\r\n];\r\n\r\nexport default function SalaryIncreaseCalculator() {\r\n  const [currentSalary, setCurrentSalary] = useState('50000');\r\n  const [increasePercentage, setIncreasePercentage] = useState('5');\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const salary = Number(currentSalary) || 0;\r\n    const percentage = Number(increasePercentage) || 0;\r\n\r\n    if (salary <= 0) {\r\n      setResults(null);\r\n      return;\r\n    }\r\n\r\n    const increaseAmount = salary * (percentage / 100);\r\n    const newSalary = salary + increaseAmount;\r\n\r\n    setResults({\r\n      newSalary,\r\n      annualIncrease: increaseAmount,\r\n      monthlyIncrease: increaseAmount / 12,\r\n    });\r\n  }, [currentSalary, increasePercentage]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Salary Increase Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              See how a pay rise will affect your annual and monthly income before tax.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid lg:grid-cols-5 gap-8\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Enter Your Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label htmlFor=\"currentSalary\">Current Annual Salary (┬ú)</Label>\r\n                  <div className=\"relative mt-1\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"currentSalary\"\r\n                      type=\"number\"\r\n                      value={currentSalary}\r\n                      onChange={(e) => setCurrentSalary(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"increasePercentage\">Increase Percentage (%)</Label>\r\n                  <div className=\"flex items-center gap-4 mt-1\">\r\n                    <Slider\r\n                      id=\"increasePercentage\"\r\n                      value={[parseFloat(increasePercentage)]}\r\n                      onValueChange={([val]) => setIncreasePercentage(val.toString())}\r\n                      max={50}\r\n                      step={0.5}\r\n                      className=\"flex-1\"\r\n                    />\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={increasePercentage}\r\n                      onChange={(e) => setIncreasePercentage(e.target.value)}\r\n                      className=\"w-24 text-center\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3\">\r\n            {results ? (\r\n              <div className=\"space-y-6\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Your New Salary</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"flex flex-col sm:flex-row items-center justify-center text-center gap-4\">\r\n                      <div className=\"p-4 rounded-lg bg-gray-100\">\r\n                        <p className=\"text-sm text-gray-600\">Current Salary</p>\r\n                        <p className=\"text-2xl font-semibold\">\r\n                          ┬ú{Number(currentSalary).toLocaleString()}\r\n                        </p>\r\n                      </div>\r\n                      <ArrowRight className=\"text-gray-400 hidden sm:block\" />\r\n                      <div className=\"p-6 rounded-lg bg-green-100\">\r\n                        <p className=\"text-sm text-green-800\">New Salary</p>\r\n                        <p className=\"text-4xl font-bold text-green-900\">\r\n                          ┬ú{results.newSalary.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                  <Card>\r\n                    <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\r\n                      <CardTitle className=\"text-sm font-medium\">Annual Increase</CardTitle>\r\n                      <TrendingUp className=\"w-4 h-4 text-gray-500\" />\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"text-2xl font-bold text-green-600\">\r\n                        +┬ú\r\n                        {results.annualIncrease.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">before tax</p>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\r\n                      <CardTitle className=\"text-sm font-medium\">Monthly Increase</CardTitle>\r\n                      <TrendingUp className=\"w-4 h-4 text-gray-500\" />\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"text-2xl font-bold text-green-600\">\r\n                        +┬ú\r\n                        {results.monthlyIncrease.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">before tax</p>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-64\">\r\n                <p className=\"text-gray-500\">Enter your details to see the results.</p>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={salaryIncreaseFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\SalarySacrificeCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 108,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  PoundSterling,\r\n  Calculator,\r\n  TrendingDown,\r\n  TrendingUp,\r\n  ArrowRight,\r\n  Wallet,\r\n} from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\n\r\nconst calculateTakeHome = (salary) => {\r\n  // Simplified tax/NI calculation for demonstration purposes\r\n  // A real implementation would use the detailed logic from the main Salary Calculator\r\n  const personalAllowance = 12570;\r\n  const niThreshold = 12570;\r\n\r\n  let tax = 0;\r\n  let ni = 0;\r\n\r\n  const taxableIncome = Math.max(0, salary - personalAllowance);\r\n\r\n  if (taxableIncome > 0) {\r\n    if (taxableIncome <= 50270 - personalAllowance) {\r\n      tax = taxableIncome * 0.2;\r\n    } else if (taxableIncome <= 125140 - personalAllowance) {\r\n      tax = (50270 - personalAllowance) * 0.2 + (taxableIncome - (50270 - personalAllowance)) * 0.4;\r\n    } else {\r\n      tax =\r\n        (50270 - personalAllowance) * 0.2 +\r\n        (125140 - 50270) * 0.4 +\r\n        (taxableIncome - (125140 - personalAllowance)) * 0.45;\r\n    }\r\n  }\r\n\r\n  const niableIncome = Math.max(0, salary - niThreshold);\r\n  if (niableIncome > 0) {\r\n    if (niableIncome <= 50270 - niThreshold) {\r\n      ni = niableIncome * 0.08;\r\n    } else {\r\n      ni = (50270 - niThreshold) * 0.08 + (niableIncome - (50270 - niThreshold)) * 0.02;\r\n    }\r\n  }\r\n\r\n  return salary - tax - ni;\r\n};\r\n\r\nexport default function SalarySacrificeCalculator() {\r\n  const [grossSalary, setGrossSalary] = useState('');\r\n  const [sacrificeAmount, setSacrificeAmount] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const salary = Number(grossSalary) || 0;\r\n    const sacrifice = Number(sacrificeAmount) || 0;\r\n\r\n    if (salary <= 0 || sacrifice <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const originalTakeHome = calculateTakeHome(salary);\r\n    const originalPension = 0; // The sacrifice is the pension amount\r\n\r\n    const newSalary = salary - sacrifice;\r\n    const newTakeHome = calculateTakeHome(newSalary);\r\n    const newPension = sacrifice;\r\n\r\n    const takeHomeDifference = originalTakeHome - newTakeHome;\r\n    const taxSaving = takeHomeDifference < sacrifice ? sacrifice - takeHomeDifference : 0;\r\n\r\n    const newResults = {\r\n      originalTakeHome,\r\n      newTakeHome,\r\n      newPension,\r\n      takeHomeDifference,\r\n      taxSaving,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Before Sacrifice', 'After Sacrifice'],\r\n      ['Gross Salary', `┬ú${salary.toFixed(2)}`, `┬ú${newSalary.toFixed(2)}`],\r\n      ['Pension Contribution', '┬ú0.00', `┬ú${newPension.toFixed(2)}`],\r\n      ['Take-Home Pay', `┬ú${originalTakeHome.toFixed(2)}`, `┬ú${newTakeHome.toFixed(2)}`],\r\n      ['', '', ''],\r\n      ['Reduction in Take-Home', `┬ú${takeHomeDifference.toFixed(2)}`, ''],\r\n      ['Tax & NI Saving', `┬ú${taxSaving.toFixed(2)}`, ''],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [grossSalary, sacrificeAmount]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Salary Sacrifice Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Pay less tax and boost your pension pot. See how sacrificing a portion of your salary\r\n              can increase your overall wealth.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"grossSalary\">Annual Gross Salary</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"grossSalary\"\r\n                      type=\"number\"\r\n                      value={grossSalary}\r\n                      onChange={(e) => setGrossSalary(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 50000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"sacrificeAmount\">Annual Pension Sacrifice Amount</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"sacrificeAmount\"\r\n                      type=\"number\"\r\n                      value={sacrificeAmount}\r\n                      onChange={(e) => setSacrificeAmount(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 3000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Impact\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"space-y-6\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Sacrifice Summary</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"salary-sacrifice\"\r\n                    title=\"Salary Sacrifice Summary\"\r\n                  />\r\n                </div>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Impact on Your Pay</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-around text-center\">\r\n                      <div>\r\n                        <p className=\"text-sm text-gray-600\">Original Take-Home</p>\r\n                        <p className=\"text-2xl font-bold\">\r\n                          ┬ú\r\n                          {results.originalTakeHome.toLocaleString('en-GB', {\r\n                            maximumFractionDigits: 0,\r\n                          })}\r\n                        </p>\r\n                      </div>\r\n                      <ArrowRight className=\"w-6 h-6 text-gray-400\" />\r\n                      <div>\r\n                        <p className=\"text-sm text-gray-600\">New Take-Home</p>\r\n                        <p className=\"text-2xl font-bold text-blue-700\">\r\n                          ┬ú\r\n                          {results.newTakeHome.toLocaleString('en-GB', {\r\n                            maximumFractionDigits: 0,\r\n                          })}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"p-4 bg-red-50 rounded-lg text-center\">\r\n                      <p className=\"text-sm text-red-800\">Your take-home pay is reduced by:</p>\r\n                      <p className=\"text-2xl font-bold text-red-900\">\r\n                        ┬ú\r\n                        {results.takeHomeDifference.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card className=\"bg-gradient-to-br from-green-50 to-green-100 border-green-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-green-900\">Benefit of Sacrificing</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center\">\r\n                    <p className=\"text-sm text-green-800\">\r\n                      Your pension pot increases by ┬ú{results.newPension.toLocaleString()}, but your\r\n                      take-home only reduces by ┬ú{results.takeHomeDifference.toLocaleString()}.\r\n                    </p>\r\n                    <p className=\"mt-2 text-3xl font-bold text-green-800\">\r\n                      Effective saving of ┬ú\r\n                      {results.taxSaving.toLocaleString('en-GB', { maximumFractionDigits: 2 })}\r\n                    </p>\r\n                    <p className=\"text-sm text-green-700\">in tax and National Insurance.</p>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Wallet className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Boost your pension, tax-efficiently</h3>\r\n                  <p>Enter your details to see the benefits.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\SavingsGoalCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 92,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Target, TrendingUp } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\n\r\nexport default function SavingsGoalCalculator() {\r\n  const [goalAmount, setGoalAmount] = useState('');\r\n  const [currentSavings, setCurrentSavings] = useState('');\r\n  const [monthlySavings, setMonthlySavings] = useState('');\r\n  const [interestRate, setInterestRate] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const goal = Number(goalAmount) || 0;\r\n    const current = Number(currentSavings) || 0;\r\n    const monthly = Number(monthlySavings) || 0;\r\n    const rate = Number(interestRate) || 0;\r\n\r\n    if (goal <= current) {\r\n      setResults({\r\n        monthsToGoal: 0,\r\n        yearsToGoal: 0,\r\n        totalContributions: current,\r\n        totalInterest: 0,\r\n        achievable: true,\r\n      });\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    if (monthly <= 0) {\r\n      setResults({ achievable: false });\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const monthlyRate = rate / 100 / 12;\r\n    let balance = current;\r\n    let months = 0;\r\n    let totalContributions = current;\r\n\r\n    while (balance < goal && months < 1200) {\r\n      // Max 100 years\r\n      months++;\r\n      balance = balance * (1 + monthlyRate) + monthly;\r\n      totalContributions += monthly;\r\n    }\r\n\r\n    const totalInterest = balance - totalContributions;\r\n    const yearsToGoal = Math.floor(months / 12);\r\n    const remainingMonths = months % 12;\r\n\r\n    const newResults = {\r\n      monthsToGoal: months,\r\n      yearsToGoal,\r\n      remainingMonths,\r\n      totalContributions,\r\n      totalInterest,\r\n      finalAmount: balance,\r\n      achievable: true,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Goal Amount', `┬ú${goal.toFixed(2)}`],\r\n      ['Current Savings', `┬ú${current.toFixed(2)}`],\r\n      ['Monthly Savings', `┬ú${monthly.toFixed(2)}`],\r\n      ['Interest Rate', `${rate}%`],\r\n      ['', ''],\r\n      ['Time to Goal', `${yearsToGoal}y ${remainingMonths}m`],\r\n      ['Total Contributions', `┬ú${totalContributions.toFixed(2)}`],\r\n      ['Total Interest Earned', `┬ú${totalInterest.toFixed(2)}`],\r\n      ['Final Amount', `┬ú${balance.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [goalAmount, currentSavings, monthlySavings, interestRate]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Savings Goal Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Dreams without goals are just wishes. Set a target, make a plan, and watch your\r\n              savings grow.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Savings Goal</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"goal\">Goal Amount</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"goal\"\r\n                      type=\"number\"\r\n                      value={goalAmount}\r\n                      onChange={(e) => setGoalAmount(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 20000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"current\">Current Savings</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"current\"\r\n                      type=\"number\"\r\n                      value={currentSavings}\r\n                      onChange={(e) => setCurrentSavings(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 2000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"monthly\">Monthly Savings</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"monthly\"\r\n                      type=\"number\"\r\n                      value={monthlySavings}\r\n                      onChange={(e) => setMonthlySavings(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 500\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"interest\">Annual Interest Rate (%)</Label>\r\n                  <Input\r\n                    id=\"interest\"\r\n                    type=\"number\"\r\n                    value={interestRate}\r\n                    onChange={(e) => setInterestRate(e.target.value)}\r\n                    step=\"0.1\"\r\n                    placeholder=\"e.g. 4.5\"\r\n                  />\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Timeline\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"space-y-6\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                {results.achievable ? (\r\n                  <>\r\n                    <div className=\"flex justify-between items-center non-printable\">\r\n                      <h2 className=\"text-2xl font-bold text-gray-800\">Your Savings Plan</h2>\r\n                      <ExportActions\r\n                        csvData={csvData}\r\n                        fileName=\"savings-goal-plan\"\r\n                        title=\"Savings Goal Plan\"\r\n                      />\r\n                    </div>\r\n                    <Card>\r\n                      <CardHeader>\r\n                        <CardTitle>Time to Goal</CardTitle>\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <div className=\"text-center p-6 bg-green-50 rounded-lg\">\r\n                          <Target className=\"w-12 h-12 mx-auto text-green-600 mb-4\" />\r\n                          <p className=\"text-4xl font-bold text-green-800\">\r\n                            {results.yearsToGoal}y {results.remainingMonths}m\r\n                          </p>\r\n                          <p className=\"text-green-700 mt-2\">Time to reach your goal</p>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                    <Card>\r\n                      <CardHeader>\r\n                        <CardTitle>Breakdown</CardTitle>\r\n                      </CardHeader>\r\n                      <CardContent className=\"space-y-3\">\r\n                        <div className=\"flex justify-between\">\r\n                          <span>Total Contributions:</span>\r\n                          <span className=\"font-semibold\">\r\n                            ┬ú{results.totalContributions.toLocaleString()}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span>Interest Earned:</span>\r\n                          <span className=\"font-semibold text-green-600\">\r\n                            ┬ú{results.totalInterest.toLocaleString()}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"flex justify-between border-t pt-3\">\r\n                          <span>Final Amount:</span>\r\n                          <span className=\"font-bold text-lg\">\r\n                            ┬ú{results.finalAmount.toLocaleString()}\r\n                          </span>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </>\r\n                ) : (\r\n                  <Card className=\"bg-yellow-50 border-yellow-200\">\r\n                    <CardHeader>\r\n                      <CardTitle className=\"text-yellow-800\">Goal Not Achievable</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"text-yellow-800\">\r\n                      <p>\r\n                        With the current monthly savings amount, this goal cannot be reached.\r\n                        Consider:\r\n                      </p>\r\n                      <ul className=\"list-disc list-inside mt-2\">\r\n                        <li>Increasing your monthly savings</li>\r\n                        <li>Extending your timeline</li>\r\n                        <li>Looking for higher interest rates</li>\r\n                      </ul>\r\n                    </CardContent>\r\n                  </Card>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Target className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Plan your savings goal</h3>\r\n                  <p>Enter your details to see how long it will take.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\SelfAssessmentGuide.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 49,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\n\r\nexport default function SelfAssessmentGuide() {\r\n  const origin = typeof window !== 'undefined' ? window.location.origin : '';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Tax Calculators Hub',\r\n        item: `${origin}/TaxCalculatorsUK`,\r\n      },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 3,\r\n        name: 'Self Assessment Guide',\r\n        item: `${origin}/SelfAssessmentGuide`,\r\n      },\r\n    ],\r\n  };\r\n  const faqs = [\r\n    {\r\n      question: 'Who needs to do Self Assessment?',\r\n      answer:\r\n        'Self-employed individuals and those with untaxed income often need to file. Check GOV.UK for specifics.',\r\n    },\r\n    {\r\n      question: 'When are the deadlines?',\r\n      answer:\r\n        '31 October (paper returns) and 31 January (online) following the end of the tax year.',\r\n    },\r\n  ];\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: faqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <script type=\"application/ld+json\">{JSON.stringify(faqJson)}</script>\r\n\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200 text-center py-10\">\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">UK Self Assessment Guide</h1>\r\n          <p className=\"text-gray-600 mt-2\">Deadlines, rates, allowances and tips for 2025/26.</p>\r\n          <div className=\"mt-4 flex flex-wrap justify-center gap-2\">\r\n            <Link\r\n              to={createPageUrl('TaxCalculatorsUK')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Tax Hub\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('NetIncomeUKCalculator')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Net Income\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('TaxAndNICalculator')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Tax + NI\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-10 space-y-6\">\r\n          <p className=\"text-gray-700\">\r\n            A practical overview of Self Assessment. We recommend reading official HMRC guidance for\r\n            full details before filing.\r\n          </p>\r\n          <ul className=\"list-disc list-inside text-gray-700 space-y-2\">\r\n            <li>Check if you need to file</li>\r\n            <li>Register with HMRC in time</li>\r\n            <li>Keep accurate records and receipts</li>\r\n            <li>File before the deadline and pay any tax due</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\SimpleInterestCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 63,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { PoundSterling, Calculator, TrendingUp, Percent, Calendar } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst simpleInterestFAQs = [\r\n  {\r\n    question: 'What is simple interest?',\r\n    answer:\r\n      'Simple interest is a quick method of calculating the interest charge on a loan or principal amount. It is determined by multiplying the daily interest rate by the principal by the number of days that elapse between payments.',\r\n  },\r\n  {\r\n    question: \"What's the difference between simple and compound interest?\",\r\n    answer:\r\n      \"Simple interest is calculated only on the initial principal amount. In contrast, compound interest is calculated on the principal amount and also on the accumulated interest of previous periods. This 'interest on interest' effect makes compound interest grow much faster over time.\",\r\n  },\r\n  {\r\n    question: 'When is simple interest typically used?',\r\n    answer:\r\n      'Simple interest is often used for short-term loans, such as car loans or certain personal loans. Most savings accounts and long-term investments use compound interest because it is much more powerful for wealth growth.',\r\n  },\r\n  {\r\n    question: 'A Note on Calculations',\r\n    answer:\r\n      \"This calculator applies the standard `I = P * R * T` formula. It's a useful tool for understanding the basic concept of interest but may not reflect the complex terms of a real-world financial product. Always check the terms and conditions provided by your financial institution.\",\r\n  },\r\n];\r\n\r\nexport default function SimpleInterestCalculator() {\r\n  const [principal, setPrincipal] = useState('10000');\r\n  const [rate, setRate] = useState('5');\r\n  const [term, setTerm] = useState('10');\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const p = Number(principal) || 0;\r\n    const r = Number(rate) / 100;\r\n    const t = Number(term) || 0;\r\n\r\n    if (p <= 0 || r < 0 || t <= 0) {\r\n      setResults(null);\r\n      return;\r\n    }\r\n\r\n    const interest = p * r * t;\r\n    const finalAmount = p + interest;\r\n\r\n    setResults({\r\n      totalInterest: interest,\r\n      finalAmount,\r\n    });\r\n  }, [principal, rate, term]);\r\n\r\n  useEffect(() => {\r\n    handleCalculate();\r\n  }, [handleCalculate]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Simple Interest Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Calculate interest earned on a principal amount without the effect of compounding.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid lg:grid-cols-5 gap-8\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Calculation Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div>\r\n                  <Label htmlFor=\"principal\">Principal Amount (┬ú)</Label>\r\n                  <div className=\"relative mt-1\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"principal\"\r\n                      type=\"number\"\r\n                      value={principal}\r\n                      onChange={(e) => setPrincipal(e.target.value)}\r\n                      className=\"pl-10\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"rate\">Annual Interest Rate (%)</Label>\r\n                  <div className=\"flex items-center gap-4 mt-1\">\r\n                    <Slider\r\n                      id=\"rate\"\r\n                      value={[parseFloat(rate)]}\r\n                      onValueChange={([val]) => setRate(val.toString())}\r\n                      max={25}\r\n                      step={0.1}\r\n                      className=\"flex-1\"\r\n                    />\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={rate}\r\n                      onChange={(e) => setRate(e.target.value)}\r\n                      className=\"w-24 text-center\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"term\">Time Period (Years)</Label>\r\n                  <div className=\"flex items-center gap-4 mt-1\">\r\n                    <Slider\r\n                      id=\"term\"\r\n                      value={[parseFloat(term)]}\r\n                      onValueChange={([val]) => setTerm(val.toString())}\r\n                      max={50}\r\n                      step={1}\r\n                      className=\"flex-1\"\r\n                    />\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={term}\r\n                      onChange={(e) => setTerm(e.target.value)}\r\n                      className=\"w-24 text-center\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3\">\r\n            {results ? (\r\n              <div className=\"space-y-6\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Simple Interest Results</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"grid md:grid-cols-2 gap-4 text-center\">\r\n                      <Card className=\"p-6 bg-blue-50\">\r\n                        <CardTitle className=\"text-sm font-medium text-blue-800\">\r\n                          Total Interest Earned\r\n                        </CardTitle>\r\n                        <p className=\"text-3xl font-bold text-blue-900 mt-2\">\r\n                          ┬ú\r\n                          {results.totalInterest.toLocaleString('en-GB', {\r\n                            maximumFractionDigits: 2,\r\n                          })}\r\n                        </p>\r\n                      </Card>\r\n                      <Card className=\"p-6 bg-green-50\">\r\n                        <CardTitle className=\"text-sm font-medium text-green-800\">\r\n                          Final Amount\r\n                        </CardTitle>\r\n                        <p className=\"text-3xl font-bold text-green-900 mt-2\">\r\n                          ┬ú\r\n                          {results.finalAmount.toLocaleString('en-GB', {\r\n                            maximumFractionDigits: 2,\r\n                          })}\r\n                        </p>\r\n                      </Card>\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600 p-4 bg-gray-50 rounded-lg\">\r\n                      After {term} years, your initial principal of ┬ú\r\n                      {Number(principal).toLocaleString()} would earn ┬ú\r\n                      {results.totalInterest.toLocaleString('en-GB', { maximumFractionDigits: 2 })}{' '}\r\n                      in simple interest, resulting in a total amount of ┬ú\r\n                      {results.finalAmount.toLocaleString('en-GB', { maximumFractionDigits: 2 })}.\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-64\">\r\n                <p className=\"text-gray-500\">Enter your details to see the results.</p>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={simpleInterestFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\Sitemap.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 44,
        "column": 3,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport { calculatorCategories } from '../components/data/calculatorConfig';\r\nimport { jobTitles, ukCities, createSlug } from '../components/data/seo-data';\r\n\r\nconst staticPages = [\r\n  { url: createPageUrl('Home'), title: 'Home' },\r\n  { url: createPageUrl('Resources'), title: 'Resources' },\r\n  { url: createPageUrl('Blog'), title: 'Blog' },\r\n  { url: createPageUrl('Contact'), title: 'Contact' },\r\n  { url: createPageUrl('JobSalaries'), title: 'Job Salaries' },\r\n  { url: createPageUrl('CostOfLiving'), title: 'Cost of Living' },\r\n  { url: createPageUrl('UKGovernmentBudget'), title: 'UK Budget Analysis' },\r\n  { url: createPageUrl('UKFinancialStats'), title: 'UK Financial Statistics' },\r\n  // Added Hub + Child Salary pages\r\n  { url: createPageUrl('SalaryCalculatorUK'), title: 'Salary Calculator (Hub)' },\r\n  { url: createPageUrl('SalaryCalculatorTakeHomePay'), title: 'Take-Home Pay Calculator' },\r\n  { url: createPageUrl('SalaryCalculatorPaycheck'), title: 'Paycheck Calculator' },\r\n  { url: createPageUrl('GrossToNetCalculator'), title: 'Gross to Net Calculator' },\r\n  { url: createPageUrl('ProRataSalaryCalculator'), title: 'Pro-Rata Salary Calculator' },\r\n];\r\n\r\nconst legalPages = [\r\n  { url: createPageUrl('PrivacyPolicy'), title: 'Privacy Policy' },\r\n  { url: createPageUrl('CookiePolicy'), title: 'Cookie Policy' },\r\n  { url: createPageUrl('TermsOfService'), title: 'Terms of Service' },\r\n  { url: createPageUrl('Disclaimer'), title: 'Disclaimer' },\r\n];\r\n\r\nconst blogPosts = [\r\n  {\r\n    url: createPageUrl('BlogSmartMoneySavingTips'),\r\n    title: 'Smart Money-Saving Tips for Everyday Life',\r\n  },\r\n  {\r\n    url: createPageUrl('BlogDebtRepaymentStrategies'),\r\n    title: 'Effective Debt Repayment Strategies',\r\n  },\r\n  { url: createPageUrl('BlogFinancialPsychology'), title: 'The Psychology of Money' },\r\n];\r\n\r\nconst SitemapSection = ({ title, links, columns = 1 }) => (\r\n  <div className=\"mb-8\">\r\n    <h2 className=\"text-2xl font-bold text-gray-800 border-b-2 border-gray-200 pb-2 mb-4\">\r\n      {title}\r\n    </h2>\r\n    <ul className={`space-y-2 list-disc list-inside columns-${columns}`}>\r\n      {links.map((link, index) => (\r\n        <li key={index} className=\"break-inside-avoid\">\r\n          <Link to={link.url} className=\"text-blue-600 hover:underline\">\r\n            {link.title}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default function Sitemap() {\r\n  const calculatorLinks = calculatorCategories\r\n    .flatMap((category) =>\r\n      category.subCategories.flatMap((sub) =>\r\n        sub.calculators.map((calc) => ({\r\n          url: calc.url,\r\n          title: calc.name,\r\n        }))\r\n      )\r\n    )\r\n    .sort((a, b) => a.title.localeCompare(b.title));\r\n\r\n  const jobLinks = jobTitles.map((job) => ({\r\n    url: createPageUrl(`JobSalaryPage?slug=${createSlug(job.title)}`),\r\n    title: `${job.title} Salary`,\r\n  }));\r\n\r\n  const cityLinks = ukCities.map((city) => ({\r\n    url: createPageUrl(`CostOfLivingPage?slug=${createSlug(city.name)}`),\r\n    title: `Cost of Living in ${city.name}`,\r\n  }));\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"text-center mb-12\">\r\n          <h1 className=\"text-4xl font-extrabold text-gray-900\">Sitemap</h1>\r\n          <p className=\"mt-2 text-lg text-gray-600\">\r\n            A complete list of all pages on CalcMyMoney.co.uk\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-x-8 gap-y-12\">\r\n          <div className=\"lg:col-span-1\">\r\n            <SitemapSection title=\"Main Pages\" links={staticPages} />\r\n            <SitemapSection title=\"Blog Articles\" links={blogPosts} />\r\n            <SitemapSection title=\"Legal\" links={legalPages} />\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-2\">\r\n            <SitemapSection title=\"Financial Calculators\" links={calculatorLinks} columns={2} />\r\n          </div>\r\n          <div className=\"md:col-span-2 lg:col-span-3\">\r\n            <SitemapSection title=\"Job Salaries\" links={jobLinks} columns={4} />\r\n          </div>\r\n          <div className=\"md:col-span-2 lg:col-span-3\">\r\n            <SitemapSection title=\"Cost of Living by City\" links={cityLinks} columns={4} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\StampDutyCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 160,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\r\nimport { PoundSterling, Calculator, Home, AlertTriangle } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst sdltFAQs = [\r\n  {\r\n    question: 'What is Stamp Duty Land Tax (SDLT)?',\r\n    answer:\r\n      'SDLT is a tax you might have to pay if you buy a residential property or piece of land in England or Northern Ireland over a certain price. The rules are different for Scotland (Land and Buildings Transaction Tax) and Wales (Land Transaction Tax).',\r\n  },\r\n  {\r\n    question: 'Do first-time buyers pay Stamp Duty?',\r\n    answer:\r\n      'First-time buyers receive relief. In England and NI, they pay no Stamp Duty on properties up to ┬ú425,000, and a 5% rate on the portion from ┬ú425,001 to ┬ú625,000. If the property price is over ┬ú625,000, they cannot claim the relief and pay the standard rates.',\r\n  },\r\n  {\r\n    question: 'What is the additional rate for second homes?',\r\n    answer:\r\n      'If you are buying an additional residential property (e.g., a buy-to-let or a second home), you will usually have to pay a 3% surcharge on top of the standard SDLT rates.',\r\n  },\r\n  {\r\n    question: 'When is SDLT due and how do I pay it?',\r\n    answer:\r\n      'SDLT must be filed and paid within 14 days of the effective date of the transaction (usually completion). Your solicitor or conveyancer typically submits the SDLT return and pays HMRC on your behalf as part of the completion process.',\r\n  },\r\n  {\r\n    question: 'Does SDLT work differently for leasehold vs. freehold?',\r\n    answer:\r\n      'Yes. For leasehold purchases, SDLT can be due on both the purchase price (premium) and, in some cases, the net present value of the rent (ground rent). Freehold purchases are usually assessed solely on the purchase price. Always check your solicitorÔÇÖs advice for your specific contract terms.',\r\n  },\r\n];\r\n\r\nconst standardRates = [\r\n  { threshold: 250000, rate: 0 },\r\n  { threshold: 925000, rate: 0.05 },\r\n  { threshold: 1500000, rate: 0.1 },\r\n  { threshold: Infinity, rate: 0.12 },\r\n];\r\n\r\nconst ftbRates = [\r\n  { threshold: 425000, rate: 0 },\r\n  { threshold: 625000, rate: 0.05 },\r\n  { threshold: Infinity, rate: -1 }, // Indicates standard rates apply\r\n];\r\n\r\nconst additionalRateSurcharge = 0.03;\r\n\r\nexport default function StampDutyCalculator() {\r\n  const [propertyPrice, setPropertyPrice] = useState('');\r\n  const [buyerType, setBuyerType] = useState('nextHome');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const calculateSDLT = () => {\r\n    const price = Number(propertyPrice) || 0;\r\n    if (price <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    let totalTax = 0;\r\n    let taxBreakdown = [];\r\n    let previousThreshold = 0;\r\n\r\n    let ratesToUse = standardRates;\r\n\r\n    if (buyerType === 'firstTimeBuyer') {\r\n      if (price <= 625000) {\r\n        ratesToUse = ftbRates;\r\n      }\r\n    }\r\n\r\n    for (const band of ratesToUse) {\r\n      if (band.rate === -1) {\r\n        // FTB relief limit exceeded\r\n        ratesToUse = standardRates;\r\n        totalTax = 0;\r\n        taxBreakdown = [];\r\n        previousThreshold = 0;\r\n        // Restart calculation with standard rates\r\n        for (const stdBand of standardRates) {\r\n          if (price > stdBand.threshold) {\r\n            const taxInBand = (stdBand.threshold - previousThreshold) * stdBand.rate;\r\n            if (taxInBand > 0) {\r\n              taxBreakdown.push({\r\n                band: `┬ú${previousThreshold.toLocaleString()} - ┬ú${stdBand.threshold.toLocaleString()}`,\r\n                rate: stdBand.rate * 100,\r\n                tax: taxInBand,\r\n              });\r\n              totalTax += taxInBand;\r\n            }\r\n          } else {\r\n            const taxInBand = (price - previousThreshold) * stdBand.rate;\r\n            if (taxInBand > 0) {\r\n              taxBreakdown.push({\r\n                band: `┬ú${previousThreshold.toLocaleString()} - ┬ú${price.toLocaleString()}`,\r\n                rate: stdBand.rate * 100,\r\n                tax: taxInBand,\r\n              });\r\n              totalTax += taxInBand;\r\n            }\r\n            break;\r\n          }\r\n          previousThreshold = stdBand.threshold;\r\n        }\r\n        break; // Exit outer loop\r\n      }\r\n\r\n      if (price > previousThreshold) {\r\n        const taxableAmountInBand = Math.min(price, band.threshold) - previousThreshold;\r\n        const taxInBand = taxableAmountInBand * band.rate;\r\n        if (taxInBand > 0) {\r\n          taxBreakdown.push({\r\n            band: `┬ú${previousThreshold.toLocaleString()} to ┬ú${Math.min(price, band.threshold).toLocaleString()}`,\r\n            rate: band.rate * 100,\r\n            tax: taxInBand,\r\n          });\r\n          totalTax += taxInBand;\r\n        }\r\n      }\r\n      previousThreshold = band.threshold;\r\n    }\r\n\r\n    if (buyerType === 'additionalHome') {\r\n      const surcharge = price * additionalRateSurcharge;\r\n      totalTax += surcharge;\r\n      taxBreakdown.push({ band: 'Additional Property Surcharge', rate: 3, tax: surcharge });\r\n    }\r\n\r\n    const newResults = { totalTax, taxBreakdown, effectiveRate: (totalTax / price) * 100 };\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Total Stamp Duty', `┬ú${newResults.totalTax.toFixed(2)}`],\r\n      ['Effective Tax Rate', `${newResults.effectiveRate.toFixed(2)}%`],\r\n      ...newResults.taxBreakdown.map((b) => [\r\n        `Tax on ${b.band} @ ${b.rate}%`,\r\n        `┬ú${b.tax.toFixed(2)}`,\r\n      ]),\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [propertyPrice, buyerType]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Stamp Duty Calculator (England & NI)\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Calculate the Stamp Duty Land Tax (SDLT) for your property purchase.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">Stamp Duty Calculation</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Purchase Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"propertyPrice\">Property Price</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"propertyPrice\"\r\n                      type=\"number\"\r\n                      value={propertyPrice}\r\n                      onChange={(e) => setPropertyPrice(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 350000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Buyer Status</Label>\r\n                  <RadioGroup value={buyerType} onValueChange={setBuyerType} className=\"space-y-2\">\r\n                    <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg border\">\r\n                      <RadioGroupItem value=\"firstTimeBuyer\" id=\"ftb\" />\r\n                      <Label htmlFor=\"ftb\" className=\"w-full\">\r\n                        First-Time Buyer\r\n                      </Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg border\">\r\n                      <RadioGroupItem value=\"nextHome\" id=\"nh\" />\r\n                      <Label htmlFor=\"nh\" className=\"w-full\">\r\n                        Moving to a Next Home\r\n                      </Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg border\">\r\n                      <RadioGroupItem value=\"additionalHome\" id=\"ah\" />\r\n                      <Label htmlFor=\"ah\" className=\"w-full\">\r\n                        Additional Home (e.g. Buy-to-Let)\r\n                      </Label>\r\n                    </div>\r\n                  </RadioGroup>\r\n                </div>\r\n                <Button onClick={calculateSDLT} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Stamp Duty\r\n                </Button>\r\n                <Card className=\"border-yellow-300 bg-yellow-50 text-yellow-800 text-sm p-3\">\r\n                  <p>\r\n                    This calculator is for properties in England and Northern Ireland only. Scotland\r\n                    and Wales have different tax systems.\r\n                  </p>\r\n                </Card>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">Stamp Duty Result</h2>\r\n                  <ExportActions csvData={csvData} fileName=\"stamp-duty\" title=\"Stamp Duty\" />\r\n                </div>\r\n                <Card className=\"bg-red-50 border-red-200\">\r\n                  <CardContent className=\"p-6\">\r\n                    <h3 className=\"font-semibold text-red-800 mb-2\">Total Stamp Duty Payable</h3>\r\n                    <div className=\"text-4xl font-bold text-red-900\">\r\n                      ┬ú\r\n                      {results.totalTax.toLocaleString('en-GB', {\r\n                        minimumFractionDigits: 2,\r\n                        maximumFractionDigits: 2,\r\n                      })}\r\n                    </div>\r\n                    <p className=\"text-sm text-red-700\">\r\n                      Effective tax rate: {results.effectiveRate.toFixed(2)}%\r\n                    </p>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Tax Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-2\">\r\n                    {results.taxBreakdown.map((band, index) => (\r\n                      <div key={index} className=\"flex justify-between p-3 bg-gray-50 rounded-lg\">\r\n                        <span>\r\n                          Tax on {band.band} at {band.rate}%\r\n                        </span>\r\n                        <span className=\"font-semibold\">\r\n                          ┬ú\r\n                          {band.tax.toLocaleString('en-GB', {\r\n                            minimumFractionDigits: 2,\r\n                            maximumFractionDigits: 2,\r\n                          })}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to calculate SDLT?</h3>\r\n                  <p>Enter property price and buyer type to see the tax.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <section className=\"mt-12 bg-white border border-gray-200 rounded-lg p-6 space-y-4\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">How this Stamp Duty calculator works</h2>\r\n          <p className=\"text-gray-700\">\r\n            This tool applies the current residential SDLT bands for England and Northern Ireland to\r\n            your purchase price. If you select First-Time Buyer, the calculator applies relief up to\r\n            the published threshold and then switches to standard rates where relief no longer\r\n            applies. For Additional Homes, it adds the 3% surcharge to the relevant portions of the\r\n            price. Your effective tax rate is the total SDLT divided by the purchase price.\r\n          </p>\r\n          <h3 className=\"text-xl font-semibold text-gray-900\">Important notes and exclusions</h3>\r\n          <ul className=\"list-disc pl-6 text-gray-700 space-y-2\">\r\n            <li>\r\n              Scotland and Wales use different taxes (LBTT and LTT). Rates and thresholds differ\r\n              from England/NI.\r\n            </li>\r\n            <li>\r\n              Special rules may apply for shared ownership, leasehold ground rent, and mixedÔÇæuse or\r\n              nonÔÇæresidential property.\r\n            </li>\r\n            <li>\r\n              This is guidance only and not financial or legal advice. Always confirm figures with\r\n              your solicitor or HMRC.\r\n            </li>\r\n          </ul>\r\n          <h3 className=\"text-xl font-semibold text-gray-900\">Worked example</h3>\r\n          <p className=\"text-gray-700\">\r\n            For a ┬ú350,000 nextÔÇæhome purchase, tax is calculated bandÔÇæbyÔÇæband. The portion within\r\n            the 0% band is untaxed; the portion in the 5% band is charged at 5%, and so on. Our\r\n            breakdown shows each band, rate and the tax due, helping you understand exactly how your\r\n            total SDLT is derived.\r\n          </p>\r\n        </section>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={sdltFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\StatutorySickPayCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 48,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, Shield, AlertTriangle } from 'lucide-react';\r\n\r\nconst SSP_WEEKLY_RATE = 116.75;\r\nconst SSP_MIN_WEEKLY_EARNINGS = 123;\r\n\r\nexport default function StatutorySickPayCalculator() {\r\n  const [averageWeeklyEarnings, setAverageWeeklyEarnings] = useState('');\r\n  const [daysOff, setDaysOff] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = () => {\r\n    const awe = Number(averageWeeklyEarnings) || 0;\r\n    const sickDays = Number(daysOff) || 0;\r\n\r\n    if (awe < SSP_MIN_WEEKLY_EARNINGS || sickDays < 4) {\r\n      setResults({ eligible: false, totalSSP: 0 });\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    // SSP is not paid for the first 3 'waiting days'\r\n    const payableDays = Math.max(0, sickDays - 3);\r\n    const weeklyRateForDays = (SSP_WEEKLY_RATE / 5) * Math.min(payableDays, 5); // Assuming a 5-day work week\r\n    const weeksOff = Math.floor(payableDays / 5);\r\n    const remainingDays = payableDays % 5;\r\n\r\n    const totalSSP = weeksOff * SSP_WEEKLY_RATE + remainingDays * (SSP_WEEKLY_RATE / 5);\r\n\r\n    setResults({\r\n      eligible: true,\r\n      totalSSP: Math.min(totalSSP, SSP_WEEKLY_RATE * 28), // Max 28 weeks\r\n    });\r\n    setHasCalculated(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [averageWeeklyEarnings, daysOff]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Statutory Sick Pay (SSP) Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              If you're too ill to work, you may be entitled to SSP. Check your eligibility and\r\n              estimate your pay.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"awe\">Average Weekly Earnings (AWE)</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"awe\"\r\n                      type=\"number\"\r\n                      value={averageWeeklyEarnings}\r\n                      onChange={(e) => setAverageWeeklyEarnings(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 400\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"daysOff\">Number of sick days</Label>\r\n                  <Input\r\n                    id=\"daysOff\"\r\n                    type=\"number\"\r\n                    value={daysOff}\r\n                    onChange={(e) => setDaysOff(e.target.value)}\r\n                    placeholder=\"e.g. 10\"\r\n                  />\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate SSP\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          <div className=\"space-y-6\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                {results.eligible ? (\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Your SSP Entitlement</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"p-4 bg-green-100 rounded-lg border-2 border-green-200\">\r\n                        <p className=\"text-sm font-bold text-green-800\">Total Estimated SSP</p>\r\n                        <p className=\"text-3xl font-bold text-green-900\">\r\n                          ┬ú{results.totalSSP.toLocaleString('en-GB', { maximumFractionDigits: 2 })}\r\n                        </p>\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-600 pt-4 mt-4 border-t\">\r\n                        SSP is paid for up to 28 weeks. The first 3 days are unpaid 'waiting days'.\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n                ) : (\r\n                  <Card className=\"bg-yellow-50 border-yellow-200\">\r\n                    <CardHeader className=\"flex-row items-center gap-3\">\r\n                      <AlertTriangle className=\"w-6 h-6 text-yellow-700\" />\r\n                      <CardTitle className=\"text-yellow-800\">Not Eligible for SSP</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"text-yellow-800\">\r\n                      <p>\r\n                        Based on the details provided, you may not be eligible for SSP. This is\r\n                        usually because:\r\n                      </p>\r\n                      <ul className=\"list-disc list-inside mt-2\">\r\n                        <li>Your average weekly earnings are below ┬ú{SSP_MIN_WEEKLY_EARNINGS}.</li>\r\n                        <li>You have been off sick for less than 4 days in a row.</li>\r\n                      </ul>\r\n                      <p className=\"mt-2\">\r\n                        You may be able to apply for Universal Credit or Employment and Support\r\n                        Allowance (ESA).\r\n                      </p>\r\n                    </CardContent>\r\n                  </Card>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Shield className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Check your sick pay</h3>\r\n                  <p>Enter your details to estimate your SSP.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\StudentLoanCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 89,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { PoundSterling, Calculator, User } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst loanPlans = {\r\n  plan1: { threshold: 24990, rate: 0.09 },\r\n  plan2: { threshold: 27295, rate: 0.09 },\r\n  plan4: { threshold: 31395, rate: 0.09 },\r\n  plan5: { threshold: 25000, rate: 0.09 },\r\n  postgraduate: { threshold: 21000, rate: 0.06 },\r\n};\r\n\r\nconst studentLoanFAQs = [\r\n  {\r\n    question: 'Which student loan plan am I on?',\r\n    answer:\r\n      \"It generally depends on when and where you took out your loan. Plan 1 is for English/Welsh students who started before 2012. Plan 2 is for English/Welsh students who started after 2012. Plan 4 is for Scottish students. Plan 5 is for students who started courses from 1 August 2023 onwards. Postgraduate loans are separate. Always check with the Student Loans Company (SLC) if you're unsure.\",\r\n  },\r\n  {\r\n    question: 'How is the repayment amount calculated?',\r\n    answer:\r\n      \"You repay a percentage of your income *above* a certain threshold. For most plans (1, 2, 4, 5), this is 9% of your income over the threshold. For Postgraduate loans, it's 6%. If your income drops below the threshold, you stop making repayments.\",\r\n  },\r\n  {\r\n    question: 'When is my student loan written off?',\r\n    answer:\r\n      \"The loan is cancelled after a certain period, even if you haven't paid it all back. This varies by plan: Plan 1 is written off when you're 65 or 25-30 years after you were first due to repay. Plan 2 is written off 30 years after. Plan 5 is written off 40 years after. This means many people will never repay the full amount.\",\r\n  },\r\n  {\r\n    question: 'Does the interest rate matter?',\r\n    answer:\r\n      'While interest is added, for many people the total amount they repay is determined by their earnings over the repayment period, not the total loan balance. Because the debt is written off after a set time, you may never repay the full amount plus interest. Higher earners are more likely to be affected by the interest rate.',\r\n  },\r\n  {\r\n    question: 'Does this calculator account for the full loan balance and interest?',\r\n    answer:\r\n      'No, this is a simplified calculator designed to show you your estimated *monthly repayment* based on your current salary. It does not forecast the total interest or the full payoff journey, as that depends on future salary changes and fluctuating interest rates.',\r\n  },\r\n];\r\n\r\nexport default function StudentLoanCalculator() {\r\n  const [loanPlan, setLoanPlan] = useState('plan1');\r\n  const [annualSalary, setAnnualSalary] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = () => {\r\n    const salary = Number(annualSalary) || 0;\r\n    const plan = loanPlans[loanPlan];\r\n\r\n    if (salary <= plan.threshold) {\r\n      setResults({\r\n        monthlyRepayment: 0,\r\n        annualRepayment: 0,\r\n      });\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    const annualRepayment = (salary - plan.threshold) * plan.rate;\r\n    const monthlyRepayment = annualRepayment / 12;\r\n\r\n    const newResults = {\r\n      monthlyRepayment,\r\n      annualRepayment,\r\n    };\r\n\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [loanPlan, annualSalary]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b border-gray-200 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\r\n              Student Loan Repayment Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\r\n              Understand the true cost of your education and plan your path to being loan-free.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <div className=\"non-printable\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label>Student Loan Plan</Label>\r\n                  <Select value={loanPlan} onValueChange={setLoanPlan}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"plan1\">Plan 1</SelectItem>\r\n                      <SelectItem value=\"plan2\">Plan 2</SelectItem>\r\n                      <SelectItem value=\"plan4\">Plan 4 (Scotland)</SelectItem>\r\n                      <SelectItem value=\"plan5\">Plan 5</SelectItem>\r\n                      <SelectItem value=\"postgraduate\">Postgraduate Loan</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"annualSalary\">Your Annual Salary</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"annualSalary\"\r\n                      type=\"number\"\r\n                      value={annualSalary}\r\n                      onChange={(e) => setAnnualSalary(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 35000\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Repayment\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          <div className=\"space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Your Estimated Repayments</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"flex justify-between items-center text-lg p-4 bg-blue-50 rounded-lg\">\r\n                      <span>Monthly Repayment:</span>\r\n                      <span className=\"font-bold text-blue-800\">\r\n                        ┬ú\r\n                        {results.monthlyRepayment.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center text-lg\">\r\n                      <span>Annual Repayment:</span>\r\n                      <span className=\"font-semibold\">\r\n                        ┬ú\r\n                        {results.annualRepayment.toLocaleString('en-GB', {\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600 pt-4 border-t\">\r\n                      <p>\r\n                        <strong>Note:</strong> This is a simplified calculation based on your\r\n                        current salary and does not account for interest accumulation or salary\r\n                        changes. Your repayments are taken from income over the threshold for your\r\n                        plan.\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[300px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <User className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">See your estimated repayments</h3>\r\n                  <p>Enter your details to calculate your repayment schedule.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-12 non-printable\">\r\n          <FAQSection faqs={studentLoanFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\StudentLoanRepaymentCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 44,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { BookOpen, Calculator } from 'lucide-react';\r\n\r\nconst plans = {\r\n  plan1: { threshold: 24990, rate: 0.09 },\r\n  plan2: { threshold: 27295, rate: 0.09 },\r\n  plan4: { threshold: 31395, rate: 0.09 },\r\n  plan5: { threshold: 25000, rate: 0.09 },\r\n  postgraduate: { threshold: 21000, rate: 0.06 },\r\n};\r\n\r\nexport default function StudentLoanRepaymentCalculator() {\r\n  const [salary, setSalary] = useState('');\r\n  const [plan, setPlan] = useState('plan2');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const inc = Number(salary) || 0;\r\n    const currentPlan = plans[plan];\r\n    if (inc <= currentPlan.threshold) {\r\n      setResults({ monthly: 0, annual: 0 });\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n    const repayableIncome = inc - currentPlan.threshold;\r\n    const annualRepayment = repayableIncome * currentPlan.rate;\r\n    setResults({ monthly: annualRepayment / 12, annual: annualRepayment });\r\n    setHasCalculated(true);\r\n  }, [salary, plan]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\r\n          <h1 className=\"text-3xl font-bold text-center\">Student Loan Repayment Calculator</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-4xl mx-auto p-4 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Your Details</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div>\r\n                <Label>Annual Salary (┬ú)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={salary}\r\n                  onChange={(e) => setSalary(e.target.value)}\r\n                  placeholder=\"e.g. 45000\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Loan Plan</Label>\r\n                <Select value={plan} onValueChange={setPlan}>\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"plan1\">Plan 1</SelectItem>\r\n                    <SelectItem value=\"plan2\">Plan 2</SelectItem>\r\n                    <SelectItem value=\"plan4\">Plan 4 (Scottish)</SelectItem>\r\n                    <SelectItem value=\"plan5\">Plan 5</SelectItem>\r\n                    <SelectItem value=\"postgraduate\">Postgraduate Loan</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                <Calculator className=\"w-5 h-5 mr-2\" />\r\n                Calculate Repayment\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n          <div>\r\n            {hasCalculated && results ? (\r\n              <Card className=\"bg-red-50 border-red-200\">\r\n                <CardHeader>\r\n                  <CardTitle>Estimated Repayment</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"text-center\">\r\n                  <p>Monthly Repayment</p>\r\n                  <p className=\"text-4xl font-bold text-red-700\">┬ú{results.monthly.toFixed(2)}</p>\r\n                  <p className=\"pt-4\">Annual Repayment</p>\r\n                  <p className=\"text-3xl font-bold\">┬ú{results.annual.toFixed(2)}</p>\r\n                </CardContent>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[220px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <BookOpen className=\"w-10 h-10 mx-auto mb-2\" />\r\n                  <p>Find out what you'll repay each month.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\SubscriptionCostCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 27,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Plus, Trash2, Repeat, Calculator } from 'lucide-react';\r\n\r\nexport default function SubscriptionCostCalculator() {\r\n  const [subs, setSubs] = useState([{ id: 1, name: '', amount: '' }]);\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleSubChange = (id, field, value) => {\r\n    const newSubs = subs.map((sub) => (sub.id === id ? { ...sub, [field]: value } : sub));\r\n    setSubs(newSubs);\r\n  };\r\n\r\n  const addSub = () => setSubs([...subs, { id: Date.now(), name: '', amount: '' }]);\r\n  const removeSub = (id) => setSubs(subs.filter((sub) => sub.id !== id));\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const monthlyTotal = subs.reduce((acc, sub) => acc + (Number(sub.amount) || 0), 0);\r\n    setResults({ monthly: monthlyTotal, annual: monthlyTotal * 12 });\r\n    setHasCalculated(true);\r\n  }, [subs]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\r\n          <h1 className=\"text-3xl font-bold text-center\">Subscription Cost Calculator</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-4xl mx-auto p-4 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Your Monthly Subscriptions</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              {subs.map((sub) => (\r\n                <div key={sub.id} className=\"flex gap-2 items-center\">\r\n                  <Input\r\n                    placeholder=\"e.g. Netflix\"\r\n                    value={sub.name}\r\n                    onChange={(e) => handleSubChange(sub.id, 'name', e.target.value)}\r\n                  />\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder=\"e.g. 10.99\"\r\n                    value={sub.amount}\r\n                    onChange={(e) => handleSubChange(sub.id, 'amount', e.target.value)}\r\n                  />\r\n                  <Button variant=\"ghost\" size=\"icon\" onClick={() => removeSub(sub.id)}>\r\n                    <Trash2 className=\"w-4 h-4\" />\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n              <Button variant=\"outline\" onClick={addSub}>\r\n                <Plus className=\"w-4 h-4 mr-2\" />\r\n                Add Subscription\r\n              </Button>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                <Calculator className=\"w-5 h-5 mr-2\" />\r\n                Calculate Total\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n          <div>\r\n            {hasCalculated && results ? (\r\n              <Card className=\"bg-yellow-50 border-yellow-200\">\r\n                <CardHeader>\r\n                  <CardTitle>Total Subscription Cost</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"text-center space-y-4\">\r\n                  <p>Monthly Total</p>\r\n                  <p className=\"text-4xl font-bold text-yellow-800\">\r\n                    ┬ú{results.monthly.toFixed(2)}\r\n                  </p>\r\n                  <p className=\"pt-4\">Annual Total</p>\r\n                  <p className=\"text-3xl font-bold\">┬ú{results.annual.toFixed(2)}</p>\r\n                </CardContent>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[220px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Repeat className=\"w-10 h-10 mx-auto mb-2\" />\r\n                  <p>Add your subscriptions to see the total.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\TaxAfterTaxCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 48,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\n\r\nexport default function TaxAfterTaxCalculator() {\r\n  const origin = typeof window !== 'undefined' ? window.location.origin : '';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Tax Calculators Hub',\r\n        item: `${origin}/TaxCalculatorsUK`,\r\n      },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 3,\r\n        name: 'Tax After Tax Calculator',\r\n        item: `${origin}/TaxAfterTaxCalculator`,\r\n      },\r\n    ],\r\n  };\r\n  const faqs = [\r\n    {\r\n      question: 'What tax year is used?',\r\n      answer: '2025/26 by default; updated when HMRC changes are published.',\r\n    },\r\n    {\r\n      question: 'Does it include Scottish bands?',\r\n      answer: 'Yes, where applicable the calculator supports Scottish tax bands.',\r\n    },\r\n  ];\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: faqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <script type=\"application/ld+json\">{JSON.stringify(faqJson)}</script>\r\n\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200 text-center py-10\">\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">\r\n            Tax After Tax Calculator UK\r\n          </h1>\r\n          <p className=\"text-gray-600 mt-2\">Work out your UK tax after tax for 2025/26.</p>\r\n          <div className=\"mt-4 flex flex-wrap justify-center gap-2\">\r\n            <Link\r\n              to={createPageUrl('TaxCalculatorsUK')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Tax Hub\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('TaxAndNICalculator')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Tax + NI Calculator\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('NetIncomeUKCalculator')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Net Income Calculator\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10\">\r\n          <div className=\"p-6 bg-gray-50 border rounded\">\r\n            <p className=\"text-gray-700\">\r\n              Calculator coming soon. In the meantime, visit our Income Tax Calculator for a\r\n              detailed breakdown.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"mt-12\">\r\n            <RelatedCalculators\r\n              calculators={[\r\n                {\r\n                  name: 'Back to Tax Calculators Hub',\r\n                  url: createPageUrl('TaxCalculatorsUK'),\r\n                  description: 'Explore all UK tax tools.',\r\n                },\r\n                {\r\n                  name: 'Tax + NI Calculator (combined)',\r\n                  url: createPageUrl('TaxAndNICalculator'),\r\n                  description: 'See combined deductions.',\r\n                },\r\n                {\r\n                  name: 'Net Income (after tax & NI)',\r\n                  url: createPageUrl('NetIncomeUKCalculator'),\r\n                  description: 'Estimate take-home pay.',\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\TaxAndNICalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 44,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport RelatedCalculators from '../components/calculators/RelatedCalculators';\r\n\r\nexport default function TaxAndNICalculator() {\r\n  const origin = typeof window !== 'undefined' ? window.location.origin : '';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Tax Calculators Hub',\r\n        item: `${origin}/TaxCalculatorsUK`,\r\n      },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 3,\r\n        name: 'Tax + NI Calculator',\r\n        item: `${origin}/TaxAndNICalculator`,\r\n      },\r\n    ],\r\n  };\r\n  const faqs = [\r\n    {\r\n      question: 'Does this include both Income Tax and NI?',\r\n      answer: 'Yes, it provides a combined estimate for 2025/26.',\r\n    },\r\n  ];\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: faqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <script type=\"application/ld+json\">{JSON.stringify(faqJson)}</script>\r\n\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200 text-center py-10\">\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">Tax + NI Calculator UK</h1>\r\n          <p className=\"text-gray-600 mt-2\">\r\n            Calculate combined UK Income Tax and National Insurance.\r\n          </p>\r\n          <div className=\"mt-4 flex flex-wrap justify-center gap-2\">\r\n            <Link\r\n              to={createPageUrl('TaxCalculatorsUK')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Tax Hub\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('TaxAfterTaxCalculator')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Tax After Tax\r\n            </Link>\r\n            <Link\r\n              to={createPageUrl('NetIncomeUKCalculator')}\r\n              className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n            >\r\n              Net Income\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-10\">\r\n          <div className=\"p-6 bg-gray-50 border rounded\">\r\n            <p className=\"text-gray-700\">\r\n              Calculator coming soon. Try our National Insurance Calculator for detailed NI\r\n              breakdowns.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"mt-12\">\r\n            <RelatedCalculators\r\n              calculators={[\r\n                {\r\n                  name: 'Back to Tax Calculators Hub',\r\n                  url: createPageUrl('TaxCalculatorsUK'),\r\n                  description: 'Explore all UK tax tools.',\r\n                },\r\n                {\r\n                  name: 'Tax After Tax Calculator',\r\n                  url: createPageUrl('TaxAfterTaxCalculator'),\r\n                  description: 'Band-by-band tax.',\r\n                },\r\n                {\r\n                  name: 'Net Income Calculator',\r\n                  url: createPageUrl('NetIncomeUKCalculator'),\r\n                  description: 'Estimate take-home pay.',\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\TaxCalculatorsUK.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 48,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\n\r\nexport default function TaxCalculatorsUK() {\r\n  const origin = typeof window !== 'undefined' ? window.location.origin : '';\r\n  const breadcrumbJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'BreadcrumbList',\r\n    itemListElement: [\r\n      { '@type': 'ListItem', position: 1, name: 'Home', item: `${origin}/` },\r\n      {\r\n        '@type': 'ListItem',\r\n        position: 2,\r\n        name: 'Tax Calculators Hub',\r\n        item: `${origin}/TaxCalculatorsUK`,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const faqs = [\r\n    {\r\n      question: 'Which tax year do these tools use?',\r\n      answer:\r\n        'All tax calculators default to 2025/26 and are updated when HMRC publishes new thresholds.',\r\n    },\r\n    {\r\n      question: 'Do you support Scottish and rUK bands?',\r\n      answer: 'Yes, where relevant we apply the appropriate Scottish or rUK bands.',\r\n    },\r\n    {\r\n      question: 'Can I export or print results?',\r\n      answer: 'Yes, calculators include print or CSV export where applicable.',\r\n    },\r\n  ];\r\n  const faqJson = {\r\n    '@context': 'https://schema.org',\r\n    '@type': 'FAQPage',\r\n    mainEntity: faqs.map((f) => ({\r\n      '@type': 'Question',\r\n      name: f.question,\r\n      acceptedAnswer: { '@type': 'Answer', text: f.answer },\r\n    })),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumbJson)}</script>\r\n      <script type=\"application/ld+json\">{JSON.stringify(faqJson)}</script>\r\n\r\n      <div className=\"bg-white\">\r\n        <div className=\"bg-gray-50 border-b border-gray-200\">\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900\">UK Tax Calculators Hub</h1>\r\n            <p className=\"text-lg text-gray-600 max-w-3xl mx-auto mt-3\">\r\n              Explore UK tax tools for 2025/26: income tax after tax, tax + NI and net income\r\n              calculators.\r\n            </p>\r\n            <div className=\"mt-6 flex flex-wrap justify-center gap-2\">\r\n              <Link\r\n                to={createPageUrl('TaxAfterTaxCalculator')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                Tax After Tax\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('TaxAndNICalculator')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                Tax + NI\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('NetIncomeUKCalculator')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                Net Income\r\n              </Link>\r\n              <Link\r\n                to={createPageUrl('SelfAssessmentGuide')}\r\n                className=\"px-4 py-2 rounded-md border border-blue-200 text-blue-700 bg-white hover:bg-blue-50\"\r\n              >\r\n                Self Assessment Guide\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-10 grid md:grid-cols-2 gap-6\">\r\n          {[\r\n            {\r\n              name: 'Tax After Tax Calculator',\r\n              url: createPageUrl('TaxAfterTaxCalculator'),\r\n              desc: 'Calculate your tax after tax for 2025/26 with clear band breakdowns.',\r\n            },\r\n            {\r\n              name: 'Tax + NI Calculator',\r\n              url: createPageUrl('TaxAndNICalculator'),\r\n              desc: 'See combined Income Tax and National Insurance contributions.',\r\n            },\r\n            {\r\n              name: 'Net Income Calculator',\r\n              url: createPageUrl('NetIncomeUKCalculator'),\r\n              desc: 'Estimate your net take-home pay after Tax and NI.',\r\n            },\r\n            {\r\n              name: 'Self Assessment Guide',\r\n              url: createPageUrl('SelfAssessmentGuide'),\r\n              desc: 'Understand deadlines, rates, allowances and tips.',\r\n            },\r\n          ].map((c, i) => (\r\n            <Link key={i} to={c.url}>\r\n              <Card className=\"hover:shadow-md transition\">\r\n                <CardContent className=\"p-6\">\r\n                  <h3 className=\"font-semibold text-lg text-gray-900\">{c.name}</h3>\r\n                  <p className=\"text-gray-600 mt-2\">{c.desc}</p>\r\n                </CardContent>\r\n              </Card>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\TermsOfService.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 7,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { FileText } from 'lucide-react';\r\n\r\nexport default function TermsOfService() {\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900 py-12\">\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"text-center mb-12\">\r\n          <FileText className=\"w-12 h-12 mx-auto text-blue-600\" />\r\n          <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mt-4\">\r\n            Terms of Service\r\n          </h1>\r\n          <p className=\"text-lg text-gray-600 dark:text-gray-300 mt-2\">Last updated: 27/08/2025</p>\r\n        </div>\r\n\r\n        <Card className=\"bg-gray-50 dark:bg-gray-800\">\r\n          <CardContent className=\"p-8 space-y-6 text-gray-700 dark:text-gray-300 leading-relaxed\">\r\n            <p>\r\n              Welcome to CalcMyMoney.co.uk. By accessing or using our website and its services, you\r\n              agree to be bound by these Terms of Service. If you disagree with any part of the\r\n              terms, you may not access the service.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-gray-100 pt-4\">\r\n              1. Use of Calculators and Content\r\n            </h2>\r\n            <p>\r\n              The financial calculators, tools, and content provided on CalcMyMoney.co.uk are for\r\n              informational and educational purposes only. They are intended to be used as a guide\r\n              and for personal, non-commercial use. The results from the calculators are estimates\r\n              and should not be considered as professional financial advice.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-gray-100 pt-4\">\r\n              2. No Financial Advice\r\n            </h2>\r\n            <p>\r\n              CalcMyMoney.co.uk is not a financial advisor. The information provided on this website\r\n              does not constitute financial, tax, legal, or investment advice. You should consult\r\n              with a qualified professional before making any financial decisions. Your use of any\r\n              information or materials on this website is entirely at your own risk, for which we\r\n              shall not be liable.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-gray-100 pt-4\">\r\n              3. Accuracy of Information\r\n            </h2>\r\n            <p>\r\n              We strive to keep the information and calculation logic up-to-date and correct.\r\n              However, we make no representations or warranties of any kind, express or implied,\r\n              about the completeness, accuracy, reliability, suitability, or availability with\r\n              respect to the website or the information, products, services, or related graphics\r\n              contained on the website for any purpose. Tax laws and regulations change frequently.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-gray-100 pt-4\">\r\n              4. Limitation of Liability\r\n            </h2>\r\n            <p>\r\n              In no event will CalcMyMoney.co.uk, nor its owners, employees, or affiliates, be\r\n              liable for any loss or damage including without limitation, indirect or consequential\r\n              loss or damage, or any loss or damage whatsoever arising from loss of data or profits\r\n              arising out of, or in connection with, the use of this website.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-gray-100 pt-4\">\r\n              5. Governing Law\r\n            </h2>\r\n            <p>\r\n              These Terms shall be governed and construed in accordance with the laws of England and\r\n              Wales, without regard to its conflict of law provisions.\r\n            </p>\r\n\r\n            <h2 className=\"text-2xl font-semibold text-gray-800 dark:text-gray-100 pt-4\">\r\n              6. Changes to Terms\r\n            </h2>\r\n            <p>\r\n              We reserve the right, at our sole discretion, to modify or replace these Terms at any\r\n              time. We will provide notice of any changes by posting the new Terms of Service on\r\n              this page.\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\TipCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 30,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Slider } from '@/components/ui/slider';\r\nimport { HandCoins, Calculator } from 'lucide-react';\r\n\r\nexport default function TipCalculator() {\r\n  const [bill, setBill] = useState('');\r\n  const [tipPercent, setTipPercent] = useState('12.5');\r\n  const [people, setPeople] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const b = Number(bill) || 0;\r\n    const t = Number(tipPercent) / 100;\r\n    const p = Number(people) || 1;\r\n\r\n    const tipAmount = b * t;\r\n    const total = b + tipAmount;\r\n    const perPerson = total / p;\r\n\r\n    setResults({ tipAmount, total, perPerson });\r\n    setHasCalculated(true);\r\n  }, [bill, tipPercent, people]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12\">\r\n          <h1 className=\"text-3xl font-bold text-center\">UK Tip Calculator</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-4xl mx-auto p-4 py-8\">\r\n        <div className=\"grid md:grid-cols-2 gap-8\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Bill Details</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div>\r\n                <Label>Bill Amount (┬ú)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={bill}\r\n                  onChange={(e) => setBill(e.target.value)}\r\n                  placeholder=\"e.g. 85.50\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Tip ({tipPercent}%)</Label>\r\n                <Slider\r\n                  value={[Number(tipPercent)]}\r\n                  onValueChange={(v) => setTipPercent(String(v[0]))}\r\n                  max={30}\r\n                  step={0.5}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label>Number of People</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={people}\r\n                  onChange={(e) => setPeople(e.target.value)}\r\n                  placeholder=\"e.g. 4\"\r\n                />\r\n              </div>\r\n            </CardContent>\r\n            <CardFooter>\r\n              <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                <Calculator className=\"w-5 h-5 mr-2\" />\r\n                Split The Bill\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n          <div>\r\n            {hasCalculated && results ? (\r\n              <Card className=\"bg-lime-50 border-lime-200\">\r\n                <CardHeader>\r\n                  <CardTitle>Split Amount</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"text-center space-y-4\">\r\n                  <p>Each Person Pays</p>\r\n                  <p className=\"text-5xl font-bold text-lime-800\">\r\n                    ┬ú{results.perPerson.toFixed(2)}\r\n                  </p>\r\n                  <p className=\"text-sm pt-2\">\r\n                    Total Bill: ┬ú{results.total.toFixed(2)} (inc. ┬ú{results.tipAmount.toFixed(2)}{' '}\r\n                    tip)\r\n                  </p>\r\n                </CardContent>\r\n              </Card>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-full min-h-[220px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <HandCoins className=\"w-10 h-10 mx-auto mb-2\" />\r\n                  <p>Easily split the bill with a tip.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\TravelBudgetCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 56,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Plus, Trash2, Plane, Calculator } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst travelFAQs = [\r\n  {\r\n    question: 'How do I estimate costs accurately?',\r\n    answer:\r\n      \"Research is key. Use flight comparison sites, check accommodation prices on booking platforms for your dates, and look up average meal costs at your destination. It's also wise to add a 10-15% contingency for unexpected expenses.\",\r\n  },\r\n  {\r\n    question: 'What are some common forgotten expenses?',\r\n    answer:\r\n      \"Don't forget to budget for travel insurance, visa fees, local transport (taxis, buses), currency exchange fees, and tips. These small costs can add up.\",\r\n  },\r\n  {\r\n    question: 'Any tips for saving money on a trip?',\r\n    answer:\r\n      \"Consider traveling during the 'shoulder seasons' (just outside of peak time) for better prices. Booking flights and accommodation in advance can also lead to significant savings. Eating at local markets or preparing some of your own meals can also cut down food costs.\",\r\n  },\r\n];\r\n\r\nconst initialItems = [\r\n  { id: 1, category: 'Flights', placeholder: '800', budget: '' },\r\n  { id: 2, category: 'Accommodation', placeholder: '1000', budget: '' },\r\n  { id: 3, category: 'Food & Drink', placeholder: '700', budget: '' },\r\n  { id: 4, category: 'Activities', placeholder: '400', budget: '' },\r\n];\r\n\r\nexport default function TravelBudgetCalculator() {\r\n  const [items, setItems] = useState(initialItems);\r\n  const [total, setTotal] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleItemChange = (index, field, value) => {\r\n    const newItems = [...items];\r\n    newItems[index][field] = value;\r\n    setItems(newItems);\r\n  };\r\n\r\n  const addItem = () =>\r\n    setItems([...items, { id: Date.now(), category: '', placeholder: 'e.g. 150', budget: '' }]);\r\n  const removeItem = (index) => setItems(items.filter((_, i) => i !== index));\r\n\r\n  const handleCalculate = useCallback(() => {\r\n    const budgetTotal = items.reduce((acc, item) => acc + (Number(item.budget) || 0), 0);\r\n    setTotal(budgetTotal);\r\n    setHasCalculated(true);\r\n  }, [items]);\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"bg-gray-50 border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 py-12 text-center\">\r\n          <h1 className=\"text-3xl font-bold\">Travel &amp; Holiday Budget Calculator</h1>\r\n          <p className=\"text-lg text-gray-600 mt-2\">\r\n            Plan your next holiday with our easy-to-use travel budget calculator. Estimate costs for\r\n            flights, accommodation, food, and activities.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-7xl mx-auto p-4 py-8\">\r\n        <div className=\"grid lg:grid-cols-5 gap-8\">\r\n          <div className=\"lg:col-span-3\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Trip Expenses</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                {items.map((item, index) => (\r\n                  <div key={item.id} className=\"grid grid-cols-3 gap-4 items-center\">\r\n                    <Input\r\n                      placeholder=\"Expense Category\"\r\n                      value={item.category}\r\n                      onChange={(e) => handleItemChange(index, 'category', e.target.value)}\r\n                      className=\"col-span-1\"\r\n                    />\r\n                    <div className=\"col-span-2 flex items-center gap-2\">\r\n                      <Input\r\n                        type=\"number\"\r\n                        placeholder={`e.g. ${item.placeholder}`}\r\n                        value={item.budget}\r\n                        onChange={(e) => handleItemChange(index, 'budget', e.target.value)}\r\n                        className=\"flex-1\"\r\n                      />\r\n                      <Button variant=\"ghost\" size=\"icon\" onClick={() => removeItem(index)}>\r\n                        <Trash2 className=\"w-4 h-4 text-gray-400 hover:text-red-500\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                <div className=\"border-t pt-4\">\r\n                  <Button variant=\"outline\" onClick={addItem} className=\"w-full\">\r\n                    <Plus className=\"w-4 h-4 mr-2\" />\r\n                    Add Expense Item\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n              <CardFooter>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg py-6\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Total Budget\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-2\">\r\n            <div className=\"sticky top-24 space-y-6\">\r\n              {hasCalculated && total !== null ? (\r\n                <Card className=\"bg-cyan-50 border-cyan-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-cyan-900\">Total Trip Budget</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center\">\r\n                    <p className=\"text-5xl font-bold text-cyan-800\">┬ú{total.toLocaleString()}</p>\r\n                  </CardContent>\r\n                </Card>\r\n              ) : (\r\n                <Card className=\"flex items-center justify-center h-64 bg-gray-50\">\r\n                  <div className=\"text-center text-gray-500\">\r\n                    <Plane className=\"w-12 h-12 mx-auto mb-4\" />\r\n                    <h3 className=\"text-xl font-semibold\">Ready for an adventure?</h3>\r\n                    <p>Enter your costs and click 'Calculate' to see your budget.</p>\r\n                  </div>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-12\">\r\n          <FAQSection faqs={travelFAQs} title=\"Travel Budgeting Tips\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\UKFinancialStats.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 11,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { TrendingUp, TrendingDown, Percent, Home, Landmark, Zap, ExternalLink } from 'lucide-react';\r\n\r\nconst StatCard = ({ title, value, change, description, trend, link, Icon }) => {\r\n  const TrendIcon = trend === 'up' ? TrendingUp : trend === 'down' ? TrendingDown : null;\r\n  const trendColor = trend === 'up' ? 'text-red-600' : 'text-green-600';\r\n\r\n  return (\r\n    <Card className=\"h-full flex flex-col\">\r\n      <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\r\n        <CardTitle className=\"text-base font-medium\">{title}</CardTitle>\r\n        <Icon className=\"w-5 h-5 text-gray-500\" />\r\n      </CardHeader>\r\n      <CardContent className=\"flex-grow flex flex-col justify-center\">\r\n        <div className=\"text-3xl font-bold\">{value}</div>\r\n        {change && (\r\n          <div className=\"text-sm text-gray-600 flex items-center gap-1\">\r\n            {TrendIcon && <TrendIcon className={`w-4 h-4 ${trendColor}`} />}\r\n            <span className={trendColor}>{change}</span>\r\n            <span>vs last year</span>\r\n          </div>\r\n        )}\r\n        <p className=\"text-xs text-gray-500 mt-2\">{description}</p>\r\n      </CardContent>\r\n      {link && (\r\n        <div className=\"p-4 pt-0 text-xs\">\r\n          <a\r\n            href={link}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"flex items-center gap-1 text-blue-600 hover:underline\"\r\n          >\r\n            Source <ExternalLink className=\"w-3 h-3\" />\r\n          </a>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default function UKFinancialStats() {\r\n  // Data is now static to prevent fetching errors from blocked external APIs.\r\n  // Users are directed to the official sources for the most up-to-date information.\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK Financial Statistics Dashboard\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Track key UK economic indicators. Data is sourced directly from official channels like\r\n              the Bank of England and the Office for National Statistics.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          <StatCard\r\n            title=\"BoE Bank Rate\"\r\n            Icon={Landmark}\r\n            value=\"5.25%\"\r\n            description=\"Official rate set by the Bank of England. Data is illustrative, check source for live rate.\"\r\n            link=\"https://www.bankofengland.co.uk/boeapps/database/Bank-Rate.asp\"\r\n          />\r\n          <StatCard\r\n            title=\"Inflation (CPIH)\"\r\n            Icon={Percent}\r\n            value=\"3.8%\"\r\n            description=\"12-month growth rate (Apr 2024). Data is illustrative, check source for live rate.\"\r\n            link=\"https://www.ons.gov.uk/economy/inflationandpriceindices\"\r\n            trend=\"down\"\r\n            change=\"3.8%\"\r\n          />\r\n          <StatCard\r\n            title=\"Average UK House Price\"\r\n            Icon={Home}\r\n            value=\"┬ú281,000\"\r\n            description=\"Average price (Mar 2024). Data is illustrative, check source for live rate.\"\r\n            change=\"-0.2%\"\r\n            trend=\"down\"\r\n            link=\"https://landregistry.data.gov.uk/app/hpi/\"\r\n          />\r\n          <StatCard\r\n            title=\"Ofgem Energy Price Cap\"\r\n            Icon={Zap}\r\n            value=\"┬ú1,568\"\r\n            description=\"Typical household, per year (1 Jul - 30 Sep 2024). Source updated quarterly.\"\r\n            link=\"https://www.ofgem.gov.uk/energy-price-cap\"\r\n          />\r\n        </div>\r\n        <div className=\"mt-12 text-center text-sm text-gray-500\">\r\n          <p>\r\n            Disclaimer: Data shown here is for informational purposes only. Please consult the\r\n            official sources linked in each card for the most current and accurate figures before\r\n            making any financial decisions.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\UKGovernmentBudget.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 303,
        "column": 9,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport {\r\n  PoundSterling,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Building,\r\n  Users,\r\n  Heart,\r\n  GraduationCap,\r\n  Shield,\r\n} from 'lucide-react';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport { Link } from 'react-router-dom';\r\nimport { createPageUrl } from '@/utils';\r\n\r\nconst governmentBudget2024 = {\r\n  // Data reflecting 2024/25 fiscal year estimates\r\n  revenue: [\r\n    {\r\n      category: 'Income Tax',\r\n      amount: 275000,\r\n      percentage: 26.2,\r\n      icon: Users,\r\n      description: 'Tax on individual earnings',\r\n    },\r\n    {\r\n      category: 'National Insurance',\r\n      amount: 178000,\r\n      percentage: 17.0,\r\n      icon: Shield,\r\n      description: 'Contributions for pensions and benefits',\r\n    },\r\n    {\r\n      category: 'VAT',\r\n      amount: 170000,\r\n      percentage: 16.2,\r\n      icon: PoundSterling,\r\n      description: 'Value Added Tax on goods and services',\r\n    },\r\n    {\r\n      category: 'Corporation Tax',\r\n      amount: 105000,\r\n      percentage: 10.0,\r\n      icon: Building,\r\n      description: 'Tax on company profits',\r\n    },\r\n    {\r\n      category: 'Fuel, Alcohol, Tobacco',\r\n      amount: 48000,\r\n      percentage: 4.6,\r\n      icon: TrendingUp,\r\n      description: 'Duties on fuel, alcohol and tobacco',\r\n    },\r\n    {\r\n      category: 'Council Tax',\r\n      amount: 46000,\r\n      percentage: 4.4,\r\n      icon: Building,\r\n      description: 'Local authority property tax',\r\n    },\r\n    {\r\n      category: 'Business Rates',\r\n      amount: 33000,\r\n      percentage: 3.1,\r\n      icon: Building,\r\n      description: 'Commercial property tax',\r\n    },\r\n    {\r\n      category: 'Other',\r\n      amount: 195000,\r\n      percentage: 18.5,\r\n      icon: PoundSterling,\r\n      description: 'Interest, dividends, other taxes',\r\n    },\r\n  ],\r\n  expenditure: [\r\n    {\r\n      category: 'Social Protection',\r\n      amount: 395000,\r\n      percentage: 34.0,\r\n      icon: Users,\r\n      description: 'State Pension, Universal Credit, other benefits',\r\n    },\r\n    {\r\n      category: 'Health (NHS)',\r\n      amount: 240000,\r\n      percentage: 20.7,\r\n      icon: Heart,\r\n      description: 'Healthcare services, staff, and infrastructure',\r\n    },\r\n    {\r\n      category: 'Education',\r\n      amount: 125000,\r\n      percentage: 10.8,\r\n      icon: GraduationCap,\r\n      description: 'Schools, universities, and skills training',\r\n    },\r\n    {\r\n      category: 'Debt Interest',\r\n      amount: 115000,\r\n      percentage: 9.9,\r\n      icon: TrendingDown,\r\n      description: 'Interest on national government debt',\r\n    },\r\n    {\r\n      category: 'Defence',\r\n      amount: 65000,\r\n      percentage: 5.6,\r\n      icon: Shield,\r\n      description: 'Military operations and national security',\r\n    },\r\n    {\r\n      category: 'Transport',\r\n      amount: 45000,\r\n      percentage: 3.9,\r\n      icon: TrendingUp,\r\n      description: 'Roads, railways, and public transport',\r\n    },\r\n    {\r\n      category: 'Public Order & Safety',\r\n      amount: 40000,\r\n      percentage: 3.4,\r\n      icon: Shield,\r\n      description: 'Police, courts, and prisons',\r\n    },\r\n    {\r\n      category: 'Other Spending',\r\n      amount: 135000,\r\n      percentage: 11.6,\r\n      icon: Building,\r\n      description: 'Housing, environment, culture, etc.',\r\n    },\r\n  ],\r\n  totalRevenue: 1050000,\r\n  totalExpenditure: 1160000,\r\n  deficit: -110000,\r\n};\r\n\r\nconst governmentBudget2025 = {\r\n  // Data reflecting 2025/26 fiscal year forecasts\r\n  revenue: [\r\n    {\r\n      category: 'Income Tax',\r\n      amount: 290000,\r\n      percentage: 26.6,\r\n      icon: Users,\r\n      description: 'Tax on individual earnings',\r\n    },\r\n    {\r\n      category: 'National Insurance',\r\n      amount: 185000,\r\n      percentage: 17.0,\r\n      icon: Shield,\r\n      description: 'Contributions for pensions and benefits',\r\n    },\r\n    {\r\n      category: 'VAT',\r\n      amount: 175000,\r\n      percentage: 16.1,\r\n      icon: PoundSterling,\r\n      description: 'Value Added Tax on goods and services',\r\n    },\r\n    {\r\n      category: 'Corporation Tax',\r\n      amount: 110000,\r\n      percentage: 10.1,\r\n      icon: Building,\r\n      description: 'Tax on company profits',\r\n    },\r\n    {\r\n      category: 'Fuel, Alcohol, Tobacco',\r\n      amount: 49000,\r\n      percentage: 4.5,\r\n      icon: TrendingUp,\r\n      description: 'Duties on fuel, alcohol and tobacco',\r\n    },\r\n    {\r\n      category: 'Council Tax',\r\n      amount: 48000,\r\n      percentage: 4.4,\r\n      icon: Building,\r\n      description: 'Local authority property tax',\r\n    },\r\n    {\r\n      category: 'Business Rates',\r\n      amount: 34000,\r\n      percentage: 3.1,\r\n      icon: Building,\r\n      description: 'Commercial property tax',\r\n    },\r\n    {\r\n      category: 'Other',\r\n      amount: 199000,\r\n      percentage: 18.2,\r\n      icon: PoundSterling,\r\n      description: 'Interest, dividends, other taxes',\r\n    },\r\n  ],\r\n  expenditure: [\r\n    {\r\n      category: 'Social Protection',\r\n      amount: 410000,\r\n      percentage: 34.8,\r\n      icon: Users,\r\n      description: 'State Pension, Universal Credit, other benefits',\r\n    },\r\n    {\r\n      category: 'Health (NHS)',\r\n      amount: 250000,\r\n      percentage: 21.2,\r\n      icon: Heart,\r\n      description: 'Healthcare services, staff, and infrastructure',\r\n    },\r\n    {\r\n      category: 'Education',\r\n      amount: 130000,\r\n      percentage: 11.0,\r\n      icon: GraduationCap,\r\n      description: 'Schools, universities, and skills training',\r\n    },\r\n    {\r\n      category: 'Debt Interest',\r\n      amount: 105000,\r\n      percentage: 8.9,\r\n      icon: TrendingDown,\r\n      description: 'Interest on national government debt',\r\n    },\r\n    {\r\n      category: 'Defence',\r\n      amount: 70000,\r\n      percentage: 5.9,\r\n      icon: Shield,\r\n      description: 'Military operations and national security',\r\n    },\r\n    {\r\n      category: 'Transport',\r\n      amount: 48000,\r\n      percentage: 4.1,\r\n      icon: TrendingUp,\r\n      description: 'Roads, railways, and public transport',\r\n    },\r\n    {\r\n      category: 'Public Order & Safety',\r\n      amount: 42000,\r\n      percentage: 3.6,\r\n      icon: Shield,\r\n      description: 'Police, courts, and prisons',\r\n    },\r\n    {\r\n      category: 'Other Spending',\r\n      amount: 125000,\r\n      percentage: 10.6,\r\n      icon: Building,\r\n      description: 'Housing, environment, culture, etc.',\r\n    },\r\n  ],\r\n  totalRevenue: 1090000,\r\n  totalExpenditure: 1180000,\r\n  deficit: -90000,\r\n};\r\n\r\nconst CHART_COLORS = [\r\n  '#3b82f6',\r\n  '#ef4444',\r\n  '#10b981',\r\n  '#f59e0b',\r\n  '#8b5cf6',\r\n  '#f97316',\r\n  '#06b6d4',\r\n  '#84cc16',\r\n];\r\n\r\nexport default function UKGovernmentBudget() {\r\n  const [selectedYear, setSelectedYear] = useState('2025');\r\n  const currentBudget = selectedYear === '2025' ? governmentBudget2025 : governmentBudget2024;\r\n\r\n  const prepareChartData = (data) => {\r\n    return data.map((item, index) => ({\r\n      ...item,\r\n      color: CHART_COLORS[index % CHART_COLORS.length],\r\n    }));\r\n  };\r\n\r\n  const CustomTooltip = ({ active, payload }) => {\r\n    if (active && payload && payload.length) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <div className=\"bg-white dark:bg-gray-800 p-3 border border-gray-300 dark:border-gray-600 rounded-lg shadow-lg\">\r\n          <p className=\"font-medium text-gray-900 dark:text-gray-100\">{data.category}</p>\r\n          <p style={{ color: data.color }}>\r\n            ┬ú{(data.amount / 1000).toFixed(1)}bn ({data.percentage.toFixed(1)}%)\r\n          </p>\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">{data.description}</p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      {/* SEO-Optimized Header */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK Government Budget {selectedYear}/\r\n              {(parseInt(selectedYear) + 1).toString().slice(-2)} | Where Your Taxes Go\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-4xl mx-auto\">\r\n              Understand how the UK government manages the nation's finances. See exactly where tax\r\n              revenue comes from and how every pound of public money is spent.\r\n            </p>\r\n            <div className=\"mt-6 text-sm text-gray-500 dark:text-gray-400\">\r\n              <p>\r\n                Comprehensive breakdown of UK government income and expenditure ÔÇó Financial Year{' '}\r\n                {selectedYear}/{(parseInt(selectedYear) + 1).toString().slice(-2)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Year Selection */}\r\n        <div className=\"text-center mb-8\">\r\n          <div className=\"inline-flex rounded-lg border border-gray-200 dark:border-gray-700\">\r\n            <button\r\n              onClick={() => setSelectedYear('2024')}\r\n              className={`px-6 py-2 rounded-l-lg ${\r\n                selectedYear === '2024'\r\n                  ? 'bg-blue-600 text-white'\r\n                  : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'\r\n              }`}\r\n            >\r\n              2024/25\r\n            </button>\r\n            <button\r\n              onClick={() => setSelectedYear('2025')}\r\n              className={`px-6 py-2 rounded-r-lg border-l border-gray-200 dark:border-gray-700 ${\r\n                selectedYear === '2025'\r\n                  ? 'bg-blue-600 text-white'\r\n                  : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'\r\n              }`}\r\n            >\r\n              2025/26\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Budget Overview Cards */}\r\n        <div className=\"grid md:grid-cols-3 gap-6 mb-8\">\r\n          <Card className=\"bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/50 dark:to-green-800/50 border-green-200 dark:border-green-700\">\r\n            <CardContent className=\"p-6 text-center\">\r\n              <TrendingUp className=\"w-8 h-8 mx-auto text-green-600 dark:text-green-400 mb-2\" />\r\n              <p className=\"text-sm font-medium text-green-800 dark:text-green-300\">\r\n                Total Revenue\r\n              </p>\r\n              <p className=\"text-2xl font-bold text-green-900 dark:text-green-100\">\r\n                ┬ú{(currentBudget.totalRevenue / 1000).toFixed(0)}bn\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/50 dark:to-blue-800/50 border-blue-200 dark:border-blue-700\">\r\n            <CardContent className=\"p-6 text-center\">\r\n              <TrendingDown className=\"w-8 h-8 mx-auto text-blue-600 dark:text-blue-400 mb-2\" />\r\n              <p className=\"text-sm font-medium text-blue-800 dark:text-blue-300\">Total Spending</p>\r\n              <p className=\"text-2xl font-bold text-blue-900 dark:text-blue-100\">\r\n                ┬ú{(currentBudget.totalExpenditure / 1000).toFixed(0)}bn\r\n              </p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card\r\n            className={`bg-gradient-to-br ${\r\n              currentBudget.deficit < 0\r\n                ? 'from-red-50 to-red-100 dark:from-red-900/50 dark:to-red-800/50 border-red-200 dark:border-red-700'\r\n                : 'from-green-50 to-green-100 dark:from-green-900/50 dark:to-green-800/50 border-green-200 dark:border-green-700'\r\n            }`}\r\n          >\r\n            <CardContent className=\"p-6 text-center\">\r\n              {currentBudget.deficit < 0 ? (\r\n                <TrendingDown className=\"w-8 h-8 mx-auto text-red-600 dark:text-red-400 mb-2\" />\r\n              ) : (\r\n                <TrendingUp className=\"w-8 h-8 mx-auto text-green-600 dark:text-green-400 mb-2\" />\r\n              )}\r\n              <p\r\n                className={`text-sm font-medium ${\r\n                  currentBudget.deficit < 0\r\n                    ? 'text-red-800 dark:text-red-300'\r\n                    : 'text-green-800 dark:text-green-300'\r\n                }`}\r\n              >\r\n                {currentBudget.deficit < 0 ? 'Budget Deficit' : 'Budget Surplus'}\r\n              </p>\r\n              <p\r\n                className={`text-2xl font-bold ${\r\n                  currentBudget.deficit < 0\r\n                    ? 'text-red-900 dark:text-red-100'\r\n                    : 'text-green-900 dark:text-green-100'\r\n                }`}\r\n              >\r\n                ┬ú{Math.abs(currentBudget.deficit / 1000).toFixed(0)}bn\r\n              </p>\r\n              {currentBudget.deficit < 0 && (\r\n                <p className=\"text-xs text-red-700 dark:text-red-300 mt-1\">\r\n                  (Financed by government borrowing)\r\n                </p>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        <Tabs defaultValue=\"revenue\" className=\"space-y-8\">\r\n          <TabsList className=\"grid w-full grid-cols-2\">\r\n            <TabsTrigger value=\"revenue\">Government Revenue</TabsTrigger>\r\n            <TabsTrigger value=\"expenditure\">Government Spending</TabsTrigger>\r\n          </TabsList>\r\n\r\n          <TabsContent value=\"revenue\" className=\"space-y-8\">\r\n            {/* Revenue Analysis */}\r\n            <div className=\"grid lg:grid-cols-2 gap-8\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Revenue Sources Breakdown</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <PieChart>\r\n                      <Pie\r\n                        data={prepareChartData(currentBudget.revenue)}\r\n                        cx=\"50%\"\r\n                        cy=\"50%\"\r\n                        outerRadius={100}\r\n                        dataKey=\"amount\"\r\n                        label={({ category, percentage }) =>\r\n                          `${category.split(' ')[0]} ${percentage.toFixed(1)}%`\r\n                        }\r\n                        className=\"text-xs fill-gray-600 dark:fill-gray-400\"\r\n                      >\r\n                        {prepareChartData(currentBudget.revenue).map((entry, index) => (\r\n                          <Cell key={`cell-${index}`} fill={entry.color} />\r\n                        ))}\r\n                      </Pie>\r\n                      <Tooltip content={<CustomTooltip />} />\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Revenue Details</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-3\">\r\n                  {currentBudget.revenue.map((item, index) => (\r\n                    <div\r\n                      key={item.category}\r\n                      className=\"flex items-center justify-between p-3 border-l-4 bg-gray-50 dark:bg-gray-800/50 rounded-r-lg\"\r\n                      style={{ borderLeftColor: CHART_COLORS[index % CHART_COLORS.length] }}\r\n                    >\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <item.icon className=\"w-5 h-5 text-gray-600 dark:text-gray-400\" />\r\n                        <div>\r\n                          <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                            {item.category}\r\n                          </span>\r\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                            {item.description}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <p className=\"font-semibold text-gray-900 dark:text-gray-100\">\r\n                          ┬ú{(item.amount / 1000).toFixed(1)}bn\r\n                        </p>\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                          {item.percentage.toFixed(1)}%\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"expenditure\" className=\"space-y-8\">\r\n            {/* Expenditure Analysis */}\r\n            <div className=\"grid lg:grid-cols-2 gap-8\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Spending Breakdown</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <PieChart>\r\n                      <Pie\r\n                        data={prepareChartData(currentBudget.expenditure)}\r\n                        cx=\"50%\"\r\n                        cy=\"50%\"\r\n                        outerRadius={100}\r\n                        dataKey=\"amount\"\r\n                        label={({ category, percentage }) =>\r\n                          `${category.includes('(') ? category.split('(')[0].trim() : category.split(' ')[0]} ${percentage.toFixed(1)}%`\r\n                        }\r\n                        className=\"text-xs fill-gray-600 dark:fill-gray-400\"\r\n                      >\r\n                        {prepareChartData(currentBudget.expenditure).map((entry, index) => (\r\n                          <Cell key={`cell-${index}`} fill={entry.color} />\r\n                        ))}\r\n                      </Pie>\r\n                      <Tooltip content={<CustomTooltip />} />\r\n                    </PieChart>\r\n                  </ResponsiveContainer>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Spending Details</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-3\">\r\n                  {currentBudget.expenditure.map((item, index) => (\r\n                    <div\r\n                      key={item.category}\r\n                      className=\"flex items-center justify-between p-3 border-l-4 bg-gray-50 dark:bg-gray-800/50 rounded-r-lg\"\r\n                      style={{ borderLeftColor: CHART_COLORS[index % CHART_COLORS.length] }}\r\n                    >\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <item.icon className=\"w-5 h-5 text-gray-600 dark:text-gray-400\" />\r\n                        <div>\r\n                          <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                            {item.category}\r\n                          </span>\r\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                            {item.description}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <p className=\"font-semibold text-gray-900 dark:text-gray-100\">\r\n                          ┬ú{(item.amount / 1000).toFixed(1)}bn\r\n                        </p>\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                          {item.percentage.toFixed(1)}%\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </TabsContent>\r\n        </Tabs>\r\n\r\n        {/* Educational Section */}\r\n        <Card className=\"mt-12 bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800\">\r\n          <CardContent className=\"p-8\">\r\n            <h2 className=\"text-2xl font-bold text-blue-900 dark:text-blue-100 mb-4\">\r\n              What This Means for Your Personal Budget\r\n            </h2>\r\n            <p className=\"text-blue-800 dark:text-blue-200 mb-6\">\r\n              The government's budget management principles apply to personal finances too. Just\r\n              like the Treasury balances income and expenditure, you should track where your money\r\n              comes from and where it goes.\r\n            </p>\r\n            <div className=\"flex flex-wrap gap-4\">\r\n              <Link to={createPageUrl('SalaryCalculator')}>\r\n                <Button className=\"bg-blue-600 hover:bg-blue-700\">\r\n                  Calculate Your Take-Home Pay\r\n                </Button>\r\n              </Link>\r\n              <Link to={createPageUrl('BudgetCalculator')}>\r\n                <Button variant=\"outline\">Plan Your Personal Budget</Button>\r\n              </Link>\r\n              <Link to={createPageUrl('IncomeTaxCalculator')}>\r\n                <Button variant=\"outline\">See Your Tax Contribution</Button>\r\n              </Link>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Source Attribution */}\r\n        <Card className=\"mt-8 bg-gray-50 dark:bg-gray-800/50 border-gray-200 dark:border-gray-700\">\r\n          <CardContent className=\"p-6\">\r\n            <h3 className=\"font-semibold text-gray-900 dark:text-gray-100 mb-3\">Sources</h3>\r\n            <div className=\"text-sm text-gray-700 dark:text-gray-300 space-y-2\">\r\n              <p>\r\n                ÔÇó{' '}\r\n                <a\r\n                  href=\"https://obr.uk/forecasts-in-depth/tax-by-tax-spend-by-spend/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"underline hover:text-blue-600\"\r\n                >\r\n                  Office for Budget Responsibility (OBR) - Fiscal Outlook\r\n                </a>\r\n              </p>\r\n              <p>\r\n                ÔÇó{' '}\r\n                <a\r\n                  href=\"https://www.gov.uk/government/organisations/hm-treasury\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"underline hover:text-blue-600\"\r\n                >\r\n                  HM Treasury - Public Spending Statistics\r\n                </a>\r\n              </p>\r\n              <p>\r\n                ÔÇó{' '}\r\n                <a\r\n                  href=\"https://www.ons.gov.uk/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"underline hover:text-blue-600\"\r\n                >\r\n                  ONS (Office for National Statistics) - Government Finance Statistics\r\n                </a>\r\n              </p>\r\n            </div>\r\n            <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-4\">\r\n              *Figures are estimates based on official government projections and may be subject to\r\n              revision. All amounts shown in millions of pounds (┬úm). A budget deficit is covered by\r\n              government borrowing (issuing gilts), which adds to the national debt and incurs\r\n              interest payments, as shown in the expenditure.\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\VATCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 85,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { PoundSterling, Calculator, Percent } from 'lucide-react';\r\nimport ExportActions from '../components/calculators/ExportActions';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst vatFAQs = [\r\n  {\r\n    question: 'What are the current VAT rates in the UK?',\r\n    answer:\r\n      \"The standard VAT rate is 20%. There is a reduced rate of 5% for items like home energy and children's car seats, and a zero rate (0%) for most food and children's clothes.\",\r\n  },\r\n  {\r\n    question: 'How do I calculate VAT?',\r\n    answer:\r\n      'To add 20% VAT to a price, you multiply the net amount by 1.20. To find the VAT amount from a gross price (inclusive of VAT), you divide the gross amount by 6.',\r\n  },\r\n  {\r\n    question: 'What is the difference between net and gross price?',\r\n    answer:\r\n      'The net price is the price before VAT is added. The gross price is the final price including VAT that a consumer pays.',\r\n  },\r\n];\r\n\r\nexport default function VATCalculator() {\r\n  const [amount, setAmount] = useState('');\r\n  const [vatRate, setVatRate] = useState('20');\r\n  const [calculationType, setCalculationType] = useState('add');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  const handleCalculate = () => {\r\n    const numAmount = Number(amount) || 0;\r\n    const rate = Number(vatRate) / 100;\r\n    if (numAmount <= 0) {\r\n      setResults(null);\r\n      setHasCalculated(true);\r\n      return;\r\n    }\r\n\r\n    let netAmount, vatAmount, grossAmount;\r\n\r\n    if (calculationType === 'add') {\r\n      netAmount = numAmount;\r\n      vatAmount = netAmount * rate;\r\n      grossAmount = netAmount + vatAmount;\r\n    } else {\r\n      // remove\r\n      grossAmount = numAmount;\r\n      vatAmount = grossAmount - grossAmount / (1 + rate);\r\n      netAmount = grossAmount - vatAmount;\r\n    }\r\n\r\n    const newResults = { netAmount, vatAmount, grossAmount, vatRate: Number(vatRate) };\r\n    setResults(newResults);\r\n    setHasCalculated(true);\r\n\r\n    const csvExportData = [\r\n      ['Metric', 'Value'],\r\n      ['Net Amount (excl. VAT)', `┬ú${newResults.netAmount.toFixed(2)}`],\r\n      [`VAT @ ${newResults.vatRate}%`, `┬ú${newResults.vatAmount.toFixed(2)}`],\r\n      ['Gross Amount (incl. VAT)', `┬ú${newResults.grossAmount.toFixed(2)}`],\r\n    ];\r\n    setCsvData(csvExportData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHasCalculated(false);\r\n    setResults(null);\r\n  }, [amount, vatRate, calculationType]);\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700 non-printable\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n              UK VAT Calculator\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\r\n              Quickly add or remove VAT from any amount. Perfect for business owners, freelancers,\r\n              and shoppers.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"print-title hidden\">VAT Calculation</div>\r\n        <div className=\"grid lg:grid-cols-5 gap-8 printable-grid-cols-1\">\r\n          <div className=\"lg:col-span-2 non-printable\">\r\n            <Card className=\"sticky top-24\">\r\n              <CardHeader>\r\n                <CardTitle>Enter Calculation Details</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"amount\">Amount</Label>\r\n                  <div className=\"relative\">\r\n                    <PoundSterling className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                    <Input\r\n                      id=\"amount\"\r\n                      type=\"number\"\r\n                      value={amount}\r\n                      onChange={(e) => setAmount(e.target.value)}\r\n                      className=\"pl-10\"\r\n                      placeholder=\"e.g. 100\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>VAT Rate</Label>\r\n                  <Select value={vatRate} onValueChange={setVatRate}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"20\">Standard Rate (20%)</SelectItem>\r\n                      <SelectItem value=\"5\">Reduced Rate (5%)</SelectItem>\r\n                      <SelectItem value=\"0\">Zero Rate (0%)</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <Label>Calculation</Label>\r\n                  <RadioGroup\r\n                    value={calculationType}\r\n                    onValueChange={setCalculationType}\r\n                    className=\"flex gap-4\"\r\n                  >\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"add\" id=\"add\" />\r\n                      <Label htmlFor=\"add\">Add VAT</Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <RadioGroupItem value=\"remove\" id=\"remove\" />\r\n                      <Label htmlFor=\"remove\">Remove VAT</Label>\r\n                    </div>\r\n                  </RadioGroup>\r\n                </div>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate VAT\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"lg:col-span-3 space-y-6 printable-area\">\r\n            {hasCalculated && results ? (\r\n              <>\r\n                <div className=\"flex justify-between items-center non-printable\">\r\n                  <h2 className=\"text-2xl font-bold text-gray-800\">VAT Calculation Results</h2>\r\n                  <ExportActions\r\n                    csvData={csvData}\r\n                    fileName=\"vat-calculation\"\r\n                    title=\"VAT Calculation\"\r\n                  />\r\n                </div>\r\n                <Card className=\"bg-blue-50 border-blue-200\">\r\n                  <CardContent className=\"p-6\">\r\n                    <h3 className=\"font-semibold text-blue-800 mb-2\">Gross Amount (inc. VAT)</h3>\r\n                    <div className=\"text-4xl font-bold text-blue-900\">\r\n                      ┬ú\r\n                      {results.grossAmount.toLocaleString('en-GB', {\r\n                        minimumFractionDigits: 2,\r\n                        maximumFractionDigits: 2,\r\n                      })}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>VAT Breakdown</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4 text-lg\">\r\n                    <div className=\"flex justify-between p-4 bg-gray-50 rounded-lg\">\r\n                      <span className=\"text-gray-600\">Net Amount</span>\r\n                      <span className=\"font-semibold\">\r\n                        ┬ú\r\n                        {results.netAmount.toLocaleString('en-GB', {\r\n                          minimumFractionDigits: 2,\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between p-4 bg-gray-50 rounded-lg\">\r\n                      <span className=\"text-gray-600\">VAT @ {results.vatRate}%</span>\r\n                      <span className=\"font-semibold\">\r\n                        ┬ú\r\n                        {results.vatAmount.toLocaleString('en-GB', {\r\n                          minimumFractionDigits: 2,\r\n                          maximumFractionDigits: 2,\r\n                        })}\r\n                      </span>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : (\r\n              <Card className=\"flex items-center justify-center h-[400px]\">\r\n                <div className=\"text-center text-gray-500\">\r\n                  <Calculator className=\"w-12 h-12 mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-semibold\">Ready to calculate VAT?</h3>\r\n                  <p>Enter an amount and choose your options to see the results.</p>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-gray-50 py-12 non-printable mt-8\">\r\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <FAQSection faqs={vatFAQs} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\WeddingBudgetCalculator.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 105,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Button } from '@/components/ui/button';\r\nimport { PoundSterling, Calculator, PartyPopper, Trash2 } from 'lucide-react';\r\nimport FAQSection from '../components/calculators/FAQSection';\r\n\r\nconst weddingFAQs = [\r\n  {\r\n    question: 'How should I estimate these costs?',\r\n    answer:\r\n      \"Start by researching average prices in your area for each category. Use these figures as a baseline. It's always a good idea to add a 10-15% contingency fund for unexpected expenses.\",\r\n  },\r\n  {\r\n    question: \"What's a good way to save money on a wedding?\",\r\n    answer:\r\n      \"Consider an off-peak wedding date (avoiding Saturdays in summer), limiting your guest list, DIY-ing decorations, or choosing a venue that allows you to bring your own suppliers. Prioritise what's most important to you as a couple.\",\r\n  },\r\n  {\r\n    question: 'Should I include honeymoon costs here?',\r\n    answer:\r\n      \"It's up to you! Some couples budget for the honeymoon as part of the overall wedding expenses, while others keep it separate. You can add it as a custom item if you'd like.\",\r\n  },\r\n];\r\n\r\nconst initialItems = [\r\n  { id: 1, name: 'Venue Hire', placeholder: '4500', value: '' },\r\n  { id: 2, name: 'Catering (per head)', placeholder: '75', value: '' },\r\n  { id: 3, name: 'Number of Guests', placeholder: '80', value: '' },\r\n  { id: 4, name: 'Attire (Dresses, Suits)', placeholder: '2000', value: '' },\r\n  { id: 5, name: 'Photography/Videography', placeholder: '1800', value: '' },\r\n  { id: 6, name: 'Entertainment (DJ/Band)', placeholder: '1000', value: '' },\r\n  { id: 7, name: 'Flowers & Decorations', placeholder: '1200', value: '' },\r\n  { id: 8, name: 'Cake', placeholder: '400', value: '' },\r\n  {\r\n    id: 9,\r\n    name: 'Contingency Fund (10%)',\r\n    placeholder: 'Calculated',\r\n    value: '',\r\n    isCalculated: true,\r\n  },\r\n];\r\n\r\nexport default function WeddingBudgetCalculator() {\r\n  const [items, setItems] = useState(initialItems);\r\n  const [newItemName, setNewItemName] = useState('');\r\n  const [newItemPlaceholder, setNewItemPlaceholder] = useState('');\r\n  const [results, setResults] = useState(null);\r\n  const [hasCalculated, setHasCalculated] = useState(false);\r\n\r\n  const handleItemChange = (id, value) => {\r\n    setItems(items.map((item) => (item.id === id ? { ...item, value } : item)));\r\n  };\r\n\r\n  const handleAddItem = () => {\r\n    if (!newItemName) return;\r\n    const newItem = {\r\n      id: Date.now(),\r\n      name: newItemName,\r\n      placeholder: newItemPlaceholder || '0',\r\n      value: '',\r\n    };\r\n    setItems([...items, newItem]);\r\n    setNewItemName('');\r\n    setNewItemPlaceholder('');\r\n  };\r\n\r\n  const handleRemoveItem = (id) => {\r\n    setItems(items.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    let subTotal = 0;\r\n    const guestCount = Number(items.find((i) => i.name === 'Number of Guests')?.value) || 0;\r\n    const costPerHead = Number(items.find((i) => i.name === 'Catering (per head)')?.value) || 0;\r\n\r\n    items.forEach((item) => {\r\n      if (\r\n        item.name === 'Catering (per head)' ||\r\n        item.name === 'Number of Guests' ||\r\n        item.isCalculated\r\n      ) {\r\n        return;\r\n      }\r\n      subTotal += Number(item.value) || 0;\r\n    });\r\n\r\n    const cateringTotal = guestCount * costPerHead;\r\n    subTotal += cateringTotal;\r\n\r\n    const contingency = subTotal * 0.1;\r\n    const grandTotal = subTotal + contingency;\r\n\r\n    setResults({\r\n      subTotal,\r\n      contingency,\r\n      grandTotal,\r\n      cateringTotal,\r\n    });\r\n    setHasCalculated(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900\">\r\n      <div className=\"bg-gray-50 dark:bg-gray-800/50 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 text-center\">\r\n          <h1 className=\"text-3xl md:text-4xl font-bold\">Wedding Budget Calculator</h1>\r\n          <p className=\"text-lg text-gray-600 mt-2\">\r\n            Plan and track your wedding expenses to stay on budget.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid lg:grid-cols-5 gap-8\">\r\n          <div className=\"lg:col-span-3\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Your Wedding Costs</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                {items.map(\r\n                  (item) =>\r\n                    !item.isCalculated && (\r\n                      <div key={item.id} className=\"grid grid-cols-3 gap-4 items-center\">\r\n                        <Label htmlFor={`item-${item.id}`} className=\"col-span-1\">\r\n                          {item.name}\r\n                        </Label>\r\n                        <div className=\"relative col-span-2 flex items-center\">\r\n                          {!['Catering (per head)', 'Number of Guests'].includes(item.name) && (\r\n                            <PoundSterling className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n                          )}\r\n                          <Input\r\n                            id={`item-${item.id}`}\r\n                            type=\"number\"\r\n                            value={item.value}\r\n                            onChange={(e) => handleItemChange(item.id, e.target.value)}\r\n                            placeholder={`e.g. ${item.placeholder}`}\r\n                            className={\r\n                              !['Catering (per head)', 'Number of Guests'].includes(item.name)\r\n                                ? 'pl-10'\r\n                                : ''\r\n                            }\r\n                          />\r\n                          {item.id > 9 && ( // Allow deleting custom items only\r\n                            <Button\r\n                              variant=\"ghost\"\r\n                              size=\"icon\"\r\n                              onClick={() => handleRemoveItem(item.id)}\r\n                              className=\"ml-2 text-gray-400 hover:text-red-500\"\r\n                            >\r\n                              <Trash2 className=\"w-4 h-4\" />\r\n                            </Button>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                )}\r\n                <div className=\"border-t pt-4 space-y-2\">\r\n                  <h3 className=\"text-sm font-medium text-gray-500\">Add a custom expense</h3>\r\n                  <div className=\"flex gap-2\">\r\n                    <Input\r\n                      value={newItemName}\r\n                      onChange={(e) => setNewItemName(e.target.value)}\r\n                      placeholder=\"Expense name (e.g. Stationery)\"\r\n                    />\r\n                    <Input\r\n                      value={newItemPlaceholder}\r\n                      onChange={(e) => setNewItemPlaceholder(e.target.value)}\r\n                      placeholder=\"Example cost (e.g. 250)\"\r\n                    />\r\n                    <Button onClick={handleAddItem}>Add</Button>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n              <CardFooter>\r\n                <Button onClick={handleCalculate} className=\"w-full text-lg py-6\">\r\n                  <Calculator className=\"w-5 h-5 mr-2\" />\r\n                  Calculate Total Budget\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n          </div>\r\n          <div className=\"lg:col-span-2\">\r\n            <div className=\"sticky top-24 space-y-6\">\r\n              {hasCalculated && results ? (\r\n                <Card className=\"bg-blue-50 border-blue-200\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-blue-900\">Total Estimated Budget</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"text-center space-y-4\">\r\n                    <p className=\"text-5xl font-bold text-blue-800\">\r\n                      ┬ú{results.grandTotal.toLocaleString('en-GB', { maximumFractionDigits: 0 })}\r\n                    </p>\r\n                    <div className=\"text-left space-y-2 text-sm pt-4 border-t\">\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Catering Total:</span>{' '}\r\n                        <span className=\"font-medium\">\r\n                          ┬ú{results.cateringTotal.toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>Other Costs Subtotal:</span>{' '}\r\n                        <span className=\"font-medium\">\r\n                          ┬ú{(results.subTotal - results.cateringTotal).toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <span>10% Contingency:</span>{' '}\r\n                        <span className=\"font-medium\">\r\n                          ┬ú\r\n                          {results.contingency.toLocaleString('en-GB', {\r\n                            maximumFractionDigits: 0,\r\n                          })}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              ) : (\r\n                <Card className=\"flex items-center justify-center h-64 bg-gray-50\">\r\n                  <div className=\"text-center text-gray-500\">\r\n                    <PartyPopper className=\"w-12 h-12 mx-auto mb-4\" />\r\n                    <h3 className=\"text-xl font-semibold\">Ready to plan your big day?</h3>\r\n                    <p>Enter your costs and click 'Calculate' to see your budget.</p>\r\n                  </div>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-12\">\r\n          <FAQSection faqs={weddingFAQs} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\pages\\index.jsx",
    "messages": [
      {
        "ruleId": null,
        "fatal": true,
        "severity": 2,
        "message": "Parsing error: Unexpected token <",
        "line": 468,
        "column": 5,
        "nodeType": null
      }
    ],
    "suppressedMessages": [],
    "errorCount": 1,
    "fatalErrorCount": 1,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "source": "import Layout from './Layout.jsx';\r\n\r\nimport Home from './Home';\r\n\r\nimport BudgetCalculator from './BudgetCalculator';\r\n\r\nimport DebtCalculator from './DebtCalculator';\r\n\r\nimport MortgageCalculator from './MortgageCalculator';\r\n\r\nimport IncomeTaxCalculator from './IncomeTaxCalculator';\r\n\r\nimport NationalInsuranceCalculator from './NationalInsuranceCalculator';\r\n\r\nimport CompoundInterestCalculator from './CompoundInterestCalculator';\r\n\r\nimport StudentLoanCalculator from './StudentLoanCalculator';\r\n\r\nimport SavingsGoalCalculator from './SavingsGoalCalculator';\r\n\r\nimport PensionCalculator from './PensionCalculator';\r\n\r\nimport PrivacyPolicy from './PrivacyPolicy';\r\n\r\nimport CookiePolicy from './CookiePolicy';\r\n\r\nimport Contact from './Contact';\r\n\r\nimport Resources from './Resources';\r\n\r\nimport MaternityPayCalculator from './MaternityPayCalculator';\r\n\r\nimport StatutorySickPayCalculator from './StatutorySickPayCalculator';\r\n\r\nimport EmergencyFundCalculator from './EmergencyFundCalculator';\r\n\r\nimport Blog from './Blog';\r\n\r\nimport SalarySacrificeCalculator from './SalarySacrificeCalculator';\r\n\r\nimport HolidayPayCalculator from './HolidayPayCalculator';\r\n\r\nimport InflationCalculator from './InflationCalculator';\r\n\r\nimport DreamLifestyleCalculator from './DreamLifestyleCalculator';\r\n\r\nimport RedundancyPayCalculator from './RedundancyPayCalculator';\r\n\r\nimport MinimumWageCalculator from './MinimumWageCalculator';\r\n\r\nimport OvertimeBonusCalculator from './OvertimeBonusCalculator';\r\n\r\nimport HourlyToAnnualSalaryCalculator from './HourlyToAnnualSalaryCalculator';\r\n\r\nimport Sitemap from './Sitemap';\r\n\r\nimport JobSalaries from './JobSalaries';\r\n\r\nimport CostOfLiving from './CostOfLiving';\r\n\r\nimport UKGovernmentBudget from './UKGovernmentBudget';\r\n\r\nimport TermsOfService from './TermsOfService';\r\n\r\nimport Disclaimer from './Disclaimer';\r\n\r\nimport FIRECalculator from './FIRECalculator';\r\n\r\nimport ContractorCalculator from './ContractorCalculator';\r\n\r\nimport BlogSmartMoneySavingTips from './BlogSmartMoneySavingTips';\r\n\r\nimport BlogDebtRepaymentStrategies from './BlogDebtRepaymentStrategies';\r\n\r\nimport BlogFinancialPsychology from './BlogFinancialPsychology';\r\n\r\nimport NetWorthCalculator from './NetWorthCalculator';\r\n\r\nimport EnergyBillCalculator from './EnergyBillCalculator';\r\n\r\nimport RentalIncomeCalculator from './RentalIncomeCalculator';\r\n\r\nimport BRRRRCalculator from './BRRRRCalculator';\r\n\r\nimport PAYECalculator from './paye-calculator';\r\n\r\nimport VATCalculator from './VATCalculator';\r\n\r\nimport MortgageAffordabilityCalculator from './MortgageAffordabilityCalculator';\r\n\r\nimport ProRataSalaryCalculator from './ProRataSalaryCalculator';\r\n\r\nimport ISACalculator from './ISACalculator';\r\n\r\nimport CapitalGainsTaxCalculator from './CapitalGainsTaxCalculator';\r\n\r\nimport LoanRepaymentCalculator from './LoanRepaymentCalculator';\r\n\r\nimport CorporationTaxCalculator from './CorporationTaxCalculator';\r\n\r\nimport StampDutyCalculator from './StampDutyCalculator';\r\n\r\nimport FreelancerDayRateCalculator from './FreelancerDayRateCalculator';\r\n\r\nimport PensionContributionCalculator from './PensionContributionCalculator';\r\n\r\nimport BusinessLoanCalculator from './BusinessLoanCalculator';\r\n\r\nimport BreakEvenCalculator from './BreakEvenCalculator';\r\n\r\nimport CarLoanCalculator from './CarLoanCalculator';\r\n\r\nimport DebtToIncomeRatioCalculator from './DebtToIncomeRatioCalculator';\r\n\r\nimport BuyToLetMortgageCalculator from './BuyToLetMortgageCalculator';\r\n\r\nimport RemortgageCalculator from './RemortgageCalculator';\r\n\r\nimport InvestmentCalculator from './InvestmentCalculator';\r\n\r\nimport PersonalLoanCalculator from './PersonalLoanCalculator';\r\n\r\nimport CreditCardRepaymentCalculator from './CreditCardRepaymentCalculator';\r\n\r\nimport RetirementSavingsCalculator from './RetirementSavingsCalculator';\r\n\r\nimport PayrollCalculator from './PayrollCalculator';\r\n\r\nimport AmortizationCalculator from './AmortizationCalculator';\r\n\r\nimport JobSalaryPage from './JobSalaryPage';\r\n\r\nimport CostOfLivingPage from './CostOfLivingPage';\r\n\r\nimport AnnuityCalculator from './AnnuityCalculator';\r\n\r\nimport SimpleInterestCalculator from './SimpleInterestCalculator';\r\n\r\nimport SalaryIncreaseCalculator from './SalaryIncreaseCalculator';\r\n\r\nimport EffectiveTaxRateCalculator from './EffectiveTaxRateCalculator';\r\n\r\nimport HomeEquityLoanCalculator from './HomeEquityLoanCalculator';\r\n\r\nimport CommissionCalculator from './CommissionCalculator';\r\n\r\nimport DividendTaxCalculator from './DividendTaxCalculator';\r\n\r\nimport FutureValueCalculator from './FutureValueCalculator';\r\n\r\nimport OvertimePayCalculator from './OvertimePayCalculator';\r\n\r\nimport LoanComparisonCalculator from './LoanComparisonCalculator';\r\n\r\nimport InheritanceTaxCalculator from './InheritanceTaxCalculator';\r\n\r\nimport CouncilTaxCalculator from './CouncilTaxCalculator';\r\n\r\nimport MortgageRepaymentCalculator from './MortgageRepaymentCalculator';\r\n\r\nimport FirstTimeBuyerCalculator from './FirstTimeBuyerCalculator';\r\n\r\nimport RentVsBuyCalculator from './RentVsBuyCalculator';\r\n\r\nimport HouseholdBillsSplitter from './HouseholdBillsSplitter';\r\n\r\nimport CommuteCostCalculator from './CommuteCostCalculator';\r\n\r\nimport CarCostCalculator from './CarCostCalculator';\r\n\r\nimport SubscriptionCostCalculator from './SubscriptionCostCalculator';\r\n\r\nimport RuleOf72Calculator from './RuleOf72Calculator';\r\n\r\nimport StudentLoanRepaymentCalculator from './StudentLoanRepaymentCalculator';\r\n\r\nimport WeddingBudgetCalculator from './WeddingBudgetCalculator';\r\n\r\nimport TravelBudgetCalculator from './TravelBudgetCalculator';\r\n\r\nimport ChildcareCostCalculator from './ChildcareCostCalculator';\r\n\r\nimport TipCalculator from './TipCalculator';\r\n\r\nimport OvertimeRateCalculator from './OvertimeRateCalculator';\r\n\r\nimport CurrencyConverter from './CurrencyConverter';\r\n\r\nimport UKFinancialStats from './UKFinancialStats';\r\n\r\nimport SalaryCalculatorUK from './SalaryCalculatorUK';\r\n\r\nimport SalaryCalculatorTakeHomePay from './SalaryCalculatorTakeHomePay';\r\n\r\nimport SalaryCalculatorPaycheck from './SalaryCalculatorPaycheck';\r\n\r\nimport GrossToNetCalculator from './GrossToNetCalculator';\r\n\r\nimport Methodology from './Methodology';\r\n\r\nimport About from './About';\r\n\r\nimport TaxCalculatorsUK from './TaxCalculatorsUK';\r\n\r\nimport TaxAfterTaxCalculator from './TaxAfterTaxCalculator';\r\n\r\nimport TaxAndNICalculator from './TaxAndNICalculator';\r\n\r\nimport NetIncomeUKCalculator from './NetIncomeUKCalculator';\r\n\r\nimport SelfAssessmentGuide from './SelfAssessmentGuide';\r\n\r\nimport MortgageCalculatorUK from './MortgageCalculatorUK';\r\n\r\nimport MortgageLoanRepayment from './MortgageLoanRepayment';\r\n\r\nimport HomeLoanMortgageCalculator from './HomeLoanMortgageCalculator';\r\n\r\nimport MortgageComparison from './MortgageComparison';\r\n\r\nimport LinkToUs from './LinkToUs';\r\n\r\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\r\n\r\nconst PAGES = {\r\n  Home: Home,\r\n\r\n  BudgetCalculator: BudgetCalculator,\r\n\r\n  DebtCalculator: DebtCalculator,\r\n\r\n  MortgageCalculator: MortgageCalculator,\r\n\r\n  IncomeTaxCalculator: IncomeTaxCalculator,\r\n\r\n  NationalInsuranceCalculator: NationalInsuranceCalculator,\r\n\r\n  CompoundInterestCalculator: CompoundInterestCalculator,\r\n\r\n  StudentLoanCalculator: StudentLoanCalculator,\r\n\r\n  SavingsGoalCalculator: SavingsGoalCalculator,\r\n\r\n  PensionCalculator: PensionCalculator,\r\n\r\n  PrivacyPolicy: PrivacyPolicy,\r\n\r\n  CookiePolicy: CookiePolicy,\r\n\r\n  Contact: Contact,\r\n\r\n  Resources: Resources,\r\n\r\n  MaternityPayCalculator: MaternityPayCalculator,\r\n\r\n  StatutorySickPayCalculator: StatutorySickPayCalculator,\r\n\r\n  EmergencyFundCalculator: EmergencyFundCalculator,\r\n\r\n  Blog: Blog,\r\n\r\n  SalarySacrificeCalculator: SalarySacrificeCalculator,\r\n\r\n  HolidayPayCalculator: HolidayPayCalculator,\r\n\r\n  InflationCalculator: InflationCalculator,\r\n\r\n  DreamLifestyleCalculator: DreamLifestyleCalculator,\r\n\r\n  RedundancyPayCalculator: RedundancyPayCalculator,\r\n\r\n  MinimumWageCalculator: MinimumWageCalculator,\r\n\r\n  OvertimeBonusCalculator: OvertimeBonusCalculator,\r\n\r\n  HourlyToAnnualSalaryCalculator: HourlyToAnnualSalaryCalculator,\r\n\r\n  Sitemap: Sitemap,\r\n\r\n  JobSalaries: JobSalaries,\r\n\r\n  CostOfLiving: CostOfLiving,\r\n\r\n  UKGovernmentBudget: UKGovernmentBudget,\r\n\r\n  TermsOfService: TermsOfService,\r\n\r\n  Disclaimer: Disclaimer,\r\n\r\n  FIRECalculator: FIRECalculator,\r\n\r\n  ContractorCalculator: ContractorCalculator,\r\n\r\n  BlogSmartMoneySavingTips: BlogSmartMoneySavingTips,\r\n\r\n  BlogDebtRepaymentStrategies: BlogDebtRepaymentStrategies,\r\n\r\n  BlogFinancialPsychology: BlogFinancialPsychology,\r\n\r\n  NetWorthCalculator: NetWorthCalculator,\r\n\r\n  EnergyBillCalculator: EnergyBillCalculator,\r\n\r\n  RentalIncomeCalculator: RentalIncomeCalculator,\r\n\r\n  BRRRRCalculator: BRRRRCalculator,\r\n\r\n  PAYECalculator: PAYECalculator,\r\n\r\n  VATCalculator: VATCalculator,\r\n\r\n  MortgageAffordabilityCalculator: MortgageAffordabilityCalculator,\r\n\r\n  ProRataSalaryCalculator: ProRataSalaryCalculator,\r\n\r\n  ISACalculator: ISACalculator,\r\n\r\n  CapitalGainsTaxCalculator: CapitalGainsTaxCalculator,\r\n\r\n  LoanRepaymentCalculator: LoanRepaymentCalculator,\r\n\r\n  CorporationTaxCalculator: CorporationTaxCalculator,\r\n\r\n  StampDutyCalculator: StampDutyCalculator,\r\n\r\n  FreelancerDayRateCalculator: FreelancerDayRateCalculator,\r\n\r\n  PensionContributionCalculator: PensionContributionCalculator,\r\n\r\n  BusinessLoanCalculator: BusinessLoanCalculator,\r\n\r\n  BreakEvenCalculator: BreakEvenCalculator,\r\n\r\n  CarLoanCalculator: CarLoanCalculator,\r\n\r\n  DebtToIncomeRatioCalculator: DebtToIncomeRatioCalculator,\r\n\r\n  BuyToLetMortgageCalculator: BuyToLetMortgageCalculator,\r\n\r\n  RemortgageCalculator: RemortgageCalculator,\r\n\r\n  InvestmentCalculator: InvestmentCalculator,\r\n\r\n  PersonalLoanCalculator: PersonalLoanCalculator,\r\n\r\n  CreditCardRepaymentCalculator: CreditCardRepaymentCalculator,\r\n\r\n  RetirementSavingsCalculator: RetirementSavingsCalculator,\r\n\r\n  PayrollCalculator: PayrollCalculator,\r\n\r\n  AmortizationCalculator: AmortizationCalculator,\r\n\r\n  JobSalaryPage: JobSalaryPage,\r\n\r\n  CostOfLivingPage: CostOfLivingPage,\r\n\r\n  AnnuityCalculator: AnnuityCalculator,\r\n\r\n  SimpleInterestCalculator: SimpleInterestCalculator,\r\n\r\n  SalaryIncreaseCalculator: SalaryIncreaseCalculator,\r\n\r\n  EffectiveTaxRateCalculator: EffectiveTaxRateCalculator,\r\n\r\n  HomeEquityLoanCalculator: HomeEquityLoanCalculator,\r\n\r\n  CommissionCalculator: CommissionCalculator,\r\n\r\n  DividendTaxCalculator: DividendTaxCalculator,\r\n\r\n  FutureValueCalculator: FutureValueCalculator,\r\n\r\n  OvertimePayCalculator: OvertimePayCalculator,\r\n\r\n  LoanComparisonCalculator: LoanComparisonCalculator,\r\n\r\n  InheritanceTaxCalculator: InheritanceTaxCalculator,\r\n\r\n  CouncilTaxCalculator: CouncilTaxCalculator,\r\n\r\n  MortgageRepaymentCalculator: MortgageRepaymentCalculator,\r\n\r\n  FirstTimeBuyerCalculator: FirstTimeBuyerCalculator,\r\n\r\n  RentVsBuyCalculator: RentVsBuyCalculator,\r\n\r\n  HouseholdBillsSplitter: HouseholdBillsSplitter,\r\n\r\n  CommuteCostCalculator: CommuteCostCalculator,\r\n\r\n  CarCostCalculator: CarCostCalculator,\r\n\r\n  SubscriptionCostCalculator: SubscriptionCostCalculator,\r\n\r\n  RuleOf72Calculator: RuleOf72Calculator,\r\n\r\n  StudentLoanRepaymentCalculator: StudentLoanRepaymentCalculator,\r\n\r\n  WeddingBudgetCalculator: WeddingBudgetCalculator,\r\n\r\n  TravelBudgetCalculator: TravelBudgetCalculator,\r\n\r\n  ChildcareCostCalculator: ChildcareCostCalculator,\r\n\r\n  TipCalculator: TipCalculator,\r\n\r\n  OvertimeRateCalculator: OvertimeRateCalculator,\r\n\r\n  CurrencyConverter: CurrencyConverter,\r\n\r\n  UKFinancialStats: UKFinancialStats,\r\n\r\n  SalaryCalculatorUK: SalaryCalculatorUK,\r\n\r\n  SalaryCalculatorTakeHomePay: SalaryCalculatorTakeHomePay,\r\n\r\n  SalaryCalculatorPaycheck: SalaryCalculatorPaycheck,\r\n\r\n  GrossToNetCalculator: GrossToNetCalculator,\r\n\r\n  Methodology: Methodology,\r\n\r\n  About: About,\r\n\r\n  TaxCalculatorsUK: TaxCalculatorsUK,\r\n\r\n  TaxAfterTaxCalculator: TaxAfterTaxCalculator,\r\n\r\n  TaxAndNICalculator: TaxAndNICalculator,\r\n\r\n  NetIncomeUKCalculator: NetIncomeUKCalculator,\r\n\r\n  SelfAssessmentGuide: SelfAssessmentGuide,\r\n\r\n  MortgageCalculatorUK: MortgageCalculatorUK,\r\n\r\n  MortgageLoanRepayment: MortgageLoanRepayment,\r\n\r\n  HomeLoanMortgageCalculator: HomeLoanMortgageCalculator,\r\n\r\n  MortgageComparison: MortgageComparison,\r\n\r\n  LinkToUs: LinkToUs,\r\n};\r\n\r\nfunction _getCurrentPage(url) {\r\n  if (url.endsWith('/')) {\r\n    url = url.slice(0, -1);\r\n  }\r\n  let urlLastPart = url.split('/').pop();\r\n  if (urlLastPart.includes('?')) {\r\n    urlLastPart = urlLastPart.split('?')[0];\r\n  }\r\n\r\n  const pageName = Object.keys(PAGES).find(\r\n    (page) => page.toLowerCase() === urlLastPart.toLowerCase()\r\n  );\r\n  return pageName || Object.keys(PAGES)[0];\r\n}\r\n\r\n// Create a wrapper component that uses useLocation inside the Router context\r\nfunction PagesContent() {\r\n  const location = useLocation();\r\n  const currentPage = _getCurrentPage(location.pathname);\r\n\r\n  return (\r\n    <Layout currentPageName={currentPage}>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n\r\n        <Route path=\"/Home\" element={<Home />} />\r\n\r\n        <Route path=\"/BudgetCalculator\" element={<BudgetCalculator />} />\r\n\r\n        <Route path=\"/DebtCalculator\" element={<DebtCalculator />} />\r\n\r\n        <Route path=\"/MortgageCalculator\" element={<MortgageCalculator />} />\r\n\r\n        <Route path=\"/IncomeTaxCalculator\" element={<IncomeTaxCalculator />} />\r\n\r\n        <Route path=\"/NationalInsuranceCalculator\" element={<NationalInsuranceCalculator />} />\r\n\r\n        <Route path=\"/CompoundInterestCalculator\" element={<CompoundInterestCalculator />} />\r\n\r\n        <Route path=\"/StudentLoanCalculator\" element={<StudentLoanCalculator />} />\r\n\r\n        <Route path=\"/SavingsGoalCalculator\" element={<SavingsGoalCalculator />} />\r\n\r\n        <Route path=\"/PensionCalculator\" element={<PensionCalculator />} />\r\n\r\n        <Route path=\"/PrivacyPolicy\" element={<PrivacyPolicy />} />\r\n\r\n        <Route path=\"/CookiePolicy\" element={<CookiePolicy />} />\r\n\r\n        <Route path=\"/Contact\" element={<Contact />} />\r\n\r\n        <Route path=\"/Resources\" element={<Resources />} />\r\n\r\n        <Route path=\"/MaternityPayCalculator\" element={<MaternityPayCalculator />} />\r\n\r\n        <Route path=\"/StatutorySickPayCalculator\" element={<StatutorySickPayCalculator />} />\r\n\r\n        <Route path=\"/EmergencyFundCalculator\" element={<EmergencyFundCalculator />} />\r\n\r\n        <Route path=\"/Blog\" element={<Blog />} />\r\n\r\n        <Route path=\"/SalarySacrificeCalculator\" element={<SalarySacrificeCalculator />} />\r\n\r\n        <Route path=\"/HolidayPayCalculator\" element={<HolidayPayCalculator />} />\r\n\r\n        <Route path=\"/InflationCalculator\" element={<InflationCalculator />} />\r\n\r\n        <Route path=\"/DreamLifestyleCalculator\" element={<DreamLifestyleCalculator />} />\r\n\r\n        <Route path=\"/RedundancyPayCalculator\" element={<RedundancyPayCalculator />} />\r\n\r\n        <Route path=\"/MinimumWageCalculator\" element={<MinimumWageCalculator />} />\r\n\r\n        <Route path=\"/OvertimeBonusCalculator\" element={<OvertimeBonusCalculator />} />\r\n\r\n        <Route\r\n          path=\"/HourlyToAnnualSalaryCalculator\"\r\n          element={<HourlyToAnnualSalaryCalculator />}\r\n        />\r\n\r\n        <Route path=\"/Sitemap\" element={<Sitemap />} />\r\n\r\n        <Route path=\"/JobSalaries\" element={<JobSalaries />} />\r\n\r\n        <Route path=\"/CostOfLiving\" element={<CostOfLiving />} />\r\n\r\n        <Route path=\"/UKGovernmentBudget\" element={<UKGovernmentBudget />} />\r\n\r\n        <Route path=\"/TermsOfService\" element={<TermsOfService />} />\r\n\r\n        <Route path=\"/Disclaimer\" element={<Disclaimer />} />\r\n\r\n        <Route path=\"/FIRECalculator\" element={<FIRECalculator />} />\r\n\r\n        <Route path=\"/ContractorCalculator\" element={<ContractorCalculator />} />\r\n\r\n        <Route path=\"/BlogSmartMoneySavingTips\" element={<BlogSmartMoneySavingTips />} />\r\n\r\n        <Route path=\"/BlogDebtRepaymentStrategies\" element={<BlogDebtRepaymentStrategies />} />\r\n\r\n        <Route path=\"/BlogFinancialPsychology\" element={<BlogFinancialPsychology />} />\r\n\r\n        <Route path=\"/NetWorthCalculator\" element={<NetWorthCalculator />} />\r\n\r\n        <Route path=\"/EnergyBillCalculator\" element={<EnergyBillCalculator />} />\r\n\r\n        <Route path=\"/RentalIncomeCalculator\" element={<RentalIncomeCalculator />} />\r\n\r\n        <Route path=\"/BRRRRCalculator\" element={<BRRRRCalculator />} />\r\n\r\n        <Route path=\"/paye-calculator\" element={<PAYECalculator />} />\r\n\r\n        <Route path=\"/VATCalculator\" element={<VATCalculator />} />\r\n\r\n        <Route\r\n          path=\"/MortgageAffordabilityCalculator\"\r\n          element={<MortgageAffordabilityCalculator />}\r\n        />\r\n\r\n        <Route path=\"/ProRataSalaryCalculator\" element={<ProRataSalaryCalculator />} />\r\n\r\n        <Route path=\"/ISACalculator\" element={<ISACalculator />} />\r\n\r\n        <Route path=\"/CapitalGainsTaxCalculator\" element={<CapitalGainsTaxCalculator />} />\r\n\r\n        <Route path=\"/LoanRepaymentCalculator\" element={<LoanRepaymentCalculator />} />\r\n\r\n        <Route path=\"/CorporationTaxCalculator\" element={<CorporationTaxCalculator />} />\r\n\r\n        <Route path=\"/StampDutyCalculator\" element={<StampDutyCalculator />} />\r\n\r\n        <Route path=\"/FreelancerDayRateCalculator\" element={<FreelancerDayRateCalculator />} />\r\n\r\n        <Route path=\"/PensionContributionCalculator\" element={<PensionContributionCalculator />} />\r\n\r\n        <Route path=\"/BusinessLoanCalculator\" element={<BusinessLoanCalculator />} />\r\n\r\n        <Route path=\"/BreakEvenCalculator\" element={<BreakEvenCalculator />} />\r\n\r\n        <Route path=\"/CarLoanCalculator\" element={<CarLoanCalculator />} />\r\n\r\n        <Route path=\"/DebtToIncomeRatioCalculator\" element={<DebtToIncomeRatioCalculator />} />\r\n\r\n        <Route path=\"/BuyToLetMortgageCalculator\" element={<BuyToLetMortgageCalculator />} />\r\n\r\n        <Route path=\"/RemortgageCalculator\" element={<RemortgageCalculator />} />\r\n\r\n        <Route path=\"/InvestmentCalculator\" element={<InvestmentCalculator />} />\r\n\r\n        <Route path=\"/PersonalLoanCalculator\" element={<PersonalLoanCalculator />} />\r\n\r\n        <Route path=\"/CreditCardRepaymentCalculator\" element={<CreditCardRepaymentCalculator />} />\r\n\r\n        <Route path=\"/RetirementSavingsCalculator\" element={<RetirementSavingsCalculator />} />\r\n\r\n        <Route path=\"/PayrollCalculator\" element={<PayrollCalculator />} />\r\n\r\n        <Route path=\"/AmortizationCalculator\" element={<AmortizationCalculator />} />\r\n\r\n        <Route path=\"/JobSalaryPage\" element={<JobSalaryPage />} />\r\n\r\n        <Route path=\"/CostOfLivingPage\" element={<CostOfLivingPage />} />\r\n\r\n        <Route path=\"/AnnuityCalculator\" element={<AnnuityCalculator />} />\r\n\r\n        <Route path=\"/SimpleInterestCalculator\" element={<SimpleInterestCalculator />} />\r\n\r\n        <Route path=\"/SalaryIncreaseCalculator\" element={<SalaryIncreaseCalculator />} />\r\n\r\n        <Route path=\"/EffectiveTaxRateCalculator\" element={<EffectiveTaxRateCalculator />} />\r\n\r\n        <Route path=\"/HomeEquityLoanCalculator\" element={<HomeEquityLoanCalculator />} />\r\n\r\n        <Route path=\"/CommissionCalculator\" element={<CommissionCalculator />} />\r\n\r\n        <Route path=\"/DividendTaxCalculator\" element={<DividendTaxCalculator />} />\r\n\r\n        <Route path=\"/FutureValueCalculator\" element={<FutureValueCalculator />} />\r\n\r\n        <Route path=\"/OvertimePayCalculator\" element={<OvertimePayCalculator />} />\r\n\r\n        <Route path=\"/LoanComparisonCalculator\" element={<LoanComparisonCalculator />} />\r\n\r\n        <Route path=\"/InheritanceTaxCalculator\" element={<InheritanceTaxCalculator />} />\r\n\r\n        <Route path=\"/CouncilTaxCalculator\" element={<CouncilTaxCalculator />} />\r\n\r\n        <Route path=\"/MortgageRepaymentCalculator\" element={<MortgageRepaymentCalculator />} />\r\n\r\n        <Route path=\"/FirstTimeBuyerCalculator\" element={<FirstTimeBuyerCalculator />} />\r\n\r\n        <Route path=\"/RentVsBuyCalculator\" element={<RentVsBuyCalculator />} />\r\n\r\n        <Route path=\"/HouseholdBillsSplitter\" element={<HouseholdBillsSplitter />} />\r\n\r\n        <Route path=\"/CommuteCostCalculator\" element={<CommuteCostCalculator />} />\r\n\r\n        <Route path=\"/CarCostCalculator\" element={<CarCostCalculator />} />\r\n\r\n        <Route path=\"/SubscriptionCostCalculator\" element={<SubscriptionCostCalculator />} />\r\n\r\n        <Route path=\"/RuleOf72Calculator\" element={<RuleOf72Calculator />} />\r\n\r\n        <Route\r\n          path=\"/StudentLoanRepaymentCalculator\"\r\n          element={<StudentLoanRepaymentCalculator />}\r\n        />\r\n\r\n        <Route path=\"/WeddingBudgetCalculator\" element={<WeddingBudgetCalculator />} />\r\n\r\n        <Route path=\"/TravelBudgetCalculator\" element={<TravelBudgetCalculator />} />\r\n\r\n        <Route path=\"/ChildcareCostCalculator\" element={<ChildcareCostCalculator />} />\r\n\r\n        <Route path=\"/TipCalculator\" element={<TipCalculator />} />\r\n\r\n        <Route path=\"/OvertimeRateCalculator\" element={<OvertimeRateCalculator />} />\r\n\r\n        <Route path=\"/CurrencyConverter\" element={<CurrencyConverter />} />\r\n\r\n        <Route path=\"/UKFinancialStats\" element={<UKFinancialStats />} />\r\n\r\n        <Route path=\"/SalaryCalculatorUK\" element={<SalaryCalculatorUK />} />\r\n\r\n        <Route path=\"/SalaryCalculatorTakeHomePay\" element={<SalaryCalculatorTakeHomePay />} />\r\n\r\n        <Route path=\"/SalaryCalculatorPaycheck\" element={<SalaryCalculatorPaycheck />} />\r\n\r\n        <Route path=\"/GrossToNetCalculator\" element={<GrossToNetCalculator />} />\r\n\r\n        <Route path=\"/Methodology\" element={<Methodology />} />\r\n\r\n        <Route path=\"/About\" element={<About />} />\r\n\r\n        <Route path=\"/TaxCalculatorsUK\" element={<TaxCalculatorsUK />} />\r\n\r\n        <Route path=\"/TaxAfterTaxCalculator\" element={<TaxAfterTaxCalculator />} />\r\n\r\n        <Route path=\"/TaxAndNICalculator\" element={<TaxAndNICalculator />} />\r\n\r\n        <Route path=\"/NetIncomeUKCalculator\" element={<NetIncomeUKCalculator />} />\r\n\r\n        <Route path=\"/SelfAssessmentGuide\" element={<SelfAssessmentGuide />} />\r\n\r\n        <Route path=\"/MortgageCalculatorUK\" element={<MortgageCalculatorUK />} />\r\n\r\n        <Route path=\"/MortgageLoanRepayment\" element={<MortgageLoanRepayment />} />\r\n\r\n        <Route path=\"/HomeLoanMortgageCalculator\" element={<HomeLoanMortgageCalculator />} />\r\n\r\n        <Route path=\"/MortgageComparison\" element={<MortgageComparison />} />\r\n\r\n        <Route path=\"/LinkToUs\" element={<LinkToUs />} />\r\n      </Routes>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default function Pages() {\r\n  return (\r\n    <Router>\r\n      <PagesContent />\r\n    </Router>\r\n  );\r\n}\r\n",
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\paths.js",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\src\\utils\\index.ts",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\tailwind.config.js",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  },
  {
    "filePath": "C:\\Users\\mahabaleshwara.hegde\\uk-money-tools-e7e53638\\vite.config.js",
    "messages": [],
    "suppressedMessages": [],
    "errorCount": 0,
    "fatalErrorCount": 0,
    "warningCount": 0,
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "usedDeprecatedRules": []
  }
]
