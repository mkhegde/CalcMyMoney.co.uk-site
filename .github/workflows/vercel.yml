name: Vercel CI/CD

on:
  push:
    branches: [ main, preview ]   # main → prod, preview → preview

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      # (optional, add if you’ve created these secrets)
      # VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      # VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      # Decide environment based on branch
      - name: Set environment
        id: env
        run: |
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            echo "MODE=prod" >> $GITHUB_OUTPUT
            echo "VERCEL_ENV=production" >> $GITHUB_OUTPUT
          else
            echo "MODE=preview" >> $GITHUB_OUTPUT
            echo "VERCEL_ENV=preview" >> $GITHUB_OUTPUT
          fi

      # Pull correct environment config and link
      - name: Vercel pull
        run: vercel pull --yes --environment=${{ steps.env.outputs.VERCEL_ENV }} --token="$VERCEL_TOKEN"

      # Build matching environment (fix for mismatch)
      - name: Vercel build
        run: |
          if [ "${{ steps.env.outputs.MODE }}" = "prod" ]; then
            vercel build --prod
          else
            vercel build
          fi
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      # Deploy prebuilt output
      - name: Deploy to Vercel
        run: |
          if [ "${{ steps.env.outputs.MODE }}" = "prod" ]; then
            vercel deploy --prebuilt --prod --token="$VERCEL_TOKEN"
          else
            vercel deploy --prebuilt --token="$VERCEL_TOKEN"
          fi
